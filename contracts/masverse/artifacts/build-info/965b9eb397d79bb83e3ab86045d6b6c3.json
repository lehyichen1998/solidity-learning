{
	"id": "965b9eb397d79bb83e3ab86045d6b6c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/masverse/MasToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\n\r\ncontract MasToken is Ownable, ERC20Pausable, ERC20Capped {\r\n    uint8 private _deci;\r\n\r\n    constructor(\r\n        address initialOwner,\r\n        uint256 maxcap,\r\n        string memory name,\r\n        string memory symbol,\r\n        uint8 deci,\r\n        uint256 initialSupply\r\n    )\r\n        ERC20(name, symbol)\r\n        Ownable(initialOwner)\r\n        ERC20Capped(maxcap * 10 ** deci)\r\n    {\r\n        _deci = deci;\r\n        _mint(initialOwner, initialSupply);\r\n    }\r\n\r\n    function decimals() public view override returns (uint8) {\r\n        return _deci;\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(address account, uint256 amount) public onlyOwner {\r\n        _burn(account, amount);\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal override(ERC20Pausable, ERC20Capped) {\r\n        super._update(from, to, value);\r\n    }\r\n\r\n    function getDecimals() public view returns (uint8) {\r\n        return _deci;\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1075,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1075,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/masverse/MasToken.sol": {
				"MasToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxcap",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "deci",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/masverse/MasToken.sol\":267:1474  contract MasToken is Ownable, ERC20Pausable, ERC20Capped {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/masverse/MasToken.sol\":359:730  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/masverse/MasToken.sol\":643:647  deci */\n  dup2\n    /* \"contracts/masverse/MasToken.sol\":637:639  10 */\n  0x0a\n    /* \"contracts/masverse/MasToken.sol\":637:647  10 ** deci */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/masverse/MasToken.sol\":628:634  maxcap */\n  dup6\n    /* \"contracts/masverse/MasToken.sol\":628:647  maxcap * 10 ** deci */\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n    /* \"contracts/masverse/MasToken.sol\":562:566  name */\n  dup5\n    /* \"contracts/masverse/MasToken.sol\":568:574  symbol */\n  dup5\n    /* \"contracts/masverse/MasToken.sol\":593:605  initialOwner */\n  dup9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_22:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"contracts/masverse/MasToken.sol\":673:677  deci */\n  dup2\n    /* \"contracts/masverse/MasToken.sol\":665:670  _deci */\n  0x06\n  0x01\n    /* \"contracts/masverse/MasToken.sol\":665:677  _deci = deci */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/masverse/MasToken.sol\":688:722  _mint(initialOwner, initialSupply) */\n  tag_29\n    /* \"contracts/masverse/MasToken.sol\":694:706  initialOwner */\n  dup7\n    /* \"contracts/masverse/MasToken.sol\":708:721  initialSupply */\n  dup3\n    /* \"contracts/masverse/MasToken.sol\":688:693  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/masverse/MasToken.sol\":688:722  _mint(initialOwner, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/masverse/MasToken.sol\":359:730  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/masverse/MasToken.sol\":267:1474  contract MasToken is Ownable, ERC20Pausable, ERC20Capped {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/masverse/MasToken.sol\":1192:1379  function _update(... */\ntag_37:\n    /* \"contracts/masverse/MasToken.sol\":1341:1371  super._update(from, to, value) */\n  tag_39\n    /* \"contracts/masverse/MasToken.sol\":1355:1359  from */\n  dup4\n    /* \"contracts/masverse/MasToken.sol\":1361:1363  to */\n  dup4\n    /* \"contracts/masverse/MasToken.sol\":1365:1370  value */\n  dup4\n    /* \"contracts/masverse/MasToken.sol\":1341:1354  super._update */\n  shl(0x20, tag_40)\n    /* \"contracts/masverse/MasToken.sol\":1341:1371  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"contracts/masverse/MasToken.sol\":1192:1379  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  tag_47\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n  mload(0x40)\n  0x9e79f85400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_53\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  shl(0x20, tag_54)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  tag_56\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n  mload(0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n  sload(0x03)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_54:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  tag_61\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n  shl(0x20, tag_62)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_65\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_68)\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_70\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_71\n  jump\t// in\ntag_70:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_69:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_72\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_73)\ntag_72:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_73:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_74\n  swap2\n  swap1\n  tag_75\n  jump\t// in\ntag_74:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\ntag_62:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_77:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_78:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_79:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_80:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_81:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_133\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_80\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_82:\n    /* \"#utility.yul\":641:665   */\n  tag_135\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_81\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_136:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_83:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_138\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_84:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_85:\n    /* \"#utility.yul\":1001:1025   */\n  tag_141\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_84\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_142\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_142:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_86:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_144\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_85\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1322   */\ntag_87:\n    /* \"#utility.yul\":1314:1315   */\n  0x00\n    /* \"#utility.yul\":1311:1312   */\n  dup1\n    /* \"#utility.yul\":1304:1316   */\n  revert\n    /* \"#utility.yul\":1328:1445   */\ntag_88:\n    /* \"#utility.yul\":1437:1438   */\n  0x00\n    /* \"#utility.yul\":1434:1435   */\n  dup1\n    /* \"#utility.yul\":1427:1439   */\n  revert\n    /* \"#utility.yul\":1451:1553   */\ntag_89:\n    /* \"#utility.yul\":1492:1498   */\n  0x00\n    /* \"#utility.yul\":1543:1545   */\n  0x1f\n    /* \"#utility.yul\":1539:1546   */\n  not\n    /* \"#utility.yul\":1534:1536   */\n  0x1f\n    /* \"#utility.yul\":1527:1532   */\n  dup4\n    /* \"#utility.yul\":1523:1537   */\n  add\n    /* \"#utility.yul\":1519:1547   */\n  and\n    /* \"#utility.yul\":1509:1547   */\n  swap1\n  pop\n    /* \"#utility.yul\":1451:1553   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1559:1739   */\ntag_90:\n    /* \"#utility.yul\":1607:1684   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1685   */\n  mstore\n    /* \"#utility.yul\":1704:1708   */\n  0x41\n    /* \"#utility.yul\":1701:1702   */\n  0x04\n    /* \"#utility.yul\":1694:1709   */\n  mstore\n    /* \"#utility.yul\":1728:1732   */\n  0x24\n    /* \"#utility.yul\":1725:1726   */\n  0x00\n    /* \"#utility.yul\":1718:1733   */\n  revert\n    /* \"#utility.yul\":1745:2026   */\ntag_91:\n    /* \"#utility.yul\":1828:1855   */\n  tag_150\n    /* \"#utility.yul\":1850:1854   */\n  dup3\n    /* \"#utility.yul\":1828:1855   */\n  tag_89\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":1820:1826   */\n  dup2\n    /* \"#utility.yul\":1816:1856   */\n  add\n    /* \"#utility.yul\":1958:1964   */\n  dup2\n    /* \"#utility.yul\":1946:1956   */\n  dup2\n    /* \"#utility.yul\":1943:1965   */\n  lt\n    /* \"#utility.yul\":1922:1940   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1910:1920   */\n  dup3\n    /* \"#utility.yul\":1907:1941   */\n  gt\n    /* \"#utility.yul\":1904:1966   */\n  or\n    /* \"#utility.yul\":1901:1989   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":1969:1987   */\n  tag_152\n  tag_90\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":1901:1989   */\ntag_151:\n    /* \"#utility.yul\":2009:2019   */\n  dup1\n    /* \"#utility.yul\":2005:2007   */\n  0x40\n    /* \"#utility.yul\":1998:2020   */\n  mstore\n    /* \"#utility.yul\":1788:2026   */\n  pop\n    /* \"#utility.yul\":1745:2026   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2032:2161   */\ntag_92:\n    /* \"#utility.yul\":2066:2072   */\n  0x00\n    /* \"#utility.yul\":2093:2113   */\n  tag_154\n  tag_77\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":2083:2113   */\n  swap1\n  pop\n    /* \"#utility.yul\":2122:2155   */\n  tag_155\n    /* \"#utility.yul\":2150:2154   */\n  dup3\n    /* \"#utility.yul\":2142:2148   */\n  dup3\n    /* \"#utility.yul\":2122:2155   */\n  tag_91\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":2032:2161   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2167:2475   */\ntag_93:\n    /* \"#utility.yul\":2229:2233   */\n  0x00\n    /* \"#utility.yul\":2319:2337   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2311:2317   */\n  dup3\n    /* \"#utility.yul\":2308:2338   */\n  gt\n    /* \"#utility.yul\":2305:2361   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":2341:2359   */\n  tag_158\n  tag_90\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":2305:2361   */\ntag_157:\n    /* \"#utility.yul\":2379:2408   */\n  tag_159\n    /* \"#utility.yul\":2401:2407   */\n  dup3\n    /* \"#utility.yul\":2379:2408   */\n  tag_89\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":2371:2408   */\n  swap1\n  pop\n    /* \"#utility.yul\":2463:2467   */\n  0x20\n    /* \"#utility.yul\":2457:2461   */\n  dup2\n    /* \"#utility.yul\":2453:2468   */\n  add\n    /* \"#utility.yul\":2445:2468   */\n  swap1\n  pop\n    /* \"#utility.yul\":2167:2475   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2481:2729   */\ntag_94:\n    /* \"#utility.yul\":2563:2564   */\n  0x00\n    /* \"#utility.yul\":2573:2686   */\ntag_161:\n    /* \"#utility.yul\":2587:2593   */\n  dup4\n    /* \"#utility.yul\":2584:2585   */\n  dup2\n    /* \"#utility.yul\":2581:2594   */\n  lt\n    /* \"#utility.yul\":2573:2686   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":2672:2673   */\n  dup1\n    /* \"#utility.yul\":2667:2670   */\n  dup3\n    /* \"#utility.yul\":2663:2674   */\n  add\n    /* \"#utility.yul\":2657:2675   */\n  mload\n    /* \"#utility.yul\":2653:2654   */\n  dup2\n    /* \"#utility.yul\":2648:2651   */\n  dup5\n    /* \"#utility.yul\":2644:2655   */\n  add\n    /* \"#utility.yul\":2637:2676   */\n  mstore\n    /* \"#utility.yul\":2609:2611   */\n  0x20\n    /* \"#utility.yul\":2606:2607   */\n  dup2\n    /* \"#utility.yul\":2602:2612   */\n  add\n    /* \"#utility.yul\":2597:2612   */\n  swap1\n  pop\n    /* \"#utility.yul\":2573:2686   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":2720:2721   */\n  0x00\n    /* \"#utility.yul\":2711:2717   */\n  dup5\n    /* \"#utility.yul\":2706:2709   */\n  dup5\n    /* \"#utility.yul\":2702:2718   */\n  add\n    /* \"#utility.yul\":2695:2722   */\n  mstore\n    /* \"#utility.yul\":2543:2729   */\n  pop\n    /* \"#utility.yul\":2481:2729   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2735:3169   */\ntag_95:\n    /* \"#utility.yul\":2824:2829   */\n  0x00\n    /* \"#utility.yul\":2849:2915   */\n  tag_165\n    /* \"#utility.yul\":2865:2914   */\n  tag_166\n    /* \"#utility.yul\":2907:2913   */\n  dup5\n    /* \"#utility.yul\":2865:2914   */\n  tag_93\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":2849:2915   */\n  tag_92\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":2840:2915   */\n  swap1\n  pop\n    /* \"#utility.yul\":2938:2944   */\n  dup3\n    /* \"#utility.yul\":2931:2936   */\n  dup2\n    /* \"#utility.yul\":2924:2945   */\n  mstore\n    /* \"#utility.yul\":2976:2980   */\n  0x20\n    /* \"#utility.yul\":2969:2974   */\n  dup2\n    /* \"#utility.yul\":2965:2981   */\n  add\n    /* \"#utility.yul\":3014:3017   */\n  dup5\n    /* \"#utility.yul\":3005:3011   */\n  dup5\n    /* \"#utility.yul\":3000:3003   */\n  dup5\n    /* \"#utility.yul\":2996:3012   */\n  add\n    /* \"#utility.yul\":2993:3018   */\n  gt\n    /* \"#utility.yul\":2990:3102   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":3021:3100   */\n  tag_168\n  tag_88\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":2990:3102   */\ntag_167:\n    /* \"#utility.yul\":3111:3163   */\n  tag_169\n    /* \"#utility.yul\":3156:3162   */\n  dup5\n    /* \"#utility.yul\":3151:3154   */\n  dup3\n    /* \"#utility.yul\":3146:3149   */\n  dup6\n    /* \"#utility.yul\":3111:3163   */\n  tag_94\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":2830:3169   */\n  pop\n    /* \"#utility.yul\":2735:3169   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3189:3544   */\ntag_96:\n    /* \"#utility.yul\":3256:3261   */\n  0x00\n    /* \"#utility.yul\":3305:3308   */\n  dup3\n    /* \"#utility.yul\":3298:3302   */\n  0x1f\n    /* \"#utility.yul\":3290:3296   */\n  dup4\n    /* \"#utility.yul\":3286:3303   */\n  add\n    /* \"#utility.yul\":3282:3309   */\n  slt\n    /* \"#utility.yul\":3272:3394   */\n  tag_171\n  jumpi\n    /* \"#utility.yul\":3313:3392   */\n  tag_172\n  tag_87\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":3272:3394   */\ntag_171:\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3417:3430   */\n  mload\n    /* \"#utility.yul\":3448:3538   */\n  tag_173\n    /* \"#utility.yul\":3534:3537   */\n  dup5\n    /* \"#utility.yul\":3526:3532   */\n  dup3\n    /* \"#utility.yul\":3519:3523   */\n  0x20\n    /* \"#utility.yul\":3511:3517   */\n  dup7\n    /* \"#utility.yul\":3507:3524   */\n  add\n    /* \"#utility.yul\":3448:3538   */\n  tag_95\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":3439:3538   */\n  swap2\n  pop\n    /* \"#utility.yul\":3262:3544   */\n  pop\n    /* \"#utility.yul\":3189:3544   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3550:3636   */\ntag_97:\n    /* \"#utility.yul\":3585:3592   */\n  0x00\n    /* \"#utility.yul\":3625:3629   */\n  0xff\n    /* \"#utility.yul\":3618:3623   */\n  dup3\n    /* \"#utility.yul\":3614:3630   */\n  and\n    /* \"#utility.yul\":3603:3630   */\n  swap1\n  pop\n    /* \"#utility.yul\":3550:3636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3642:3760   */\ntag_98:\n    /* \"#utility.yul\":3713:3735   */\n  tag_176\n    /* \"#utility.yul\":3729:3734   */\n  dup2\n    /* \"#utility.yul\":3713:3735   */\n  tag_97\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":3706:3711   */\n  dup2\n    /* \"#utility.yul\":3703:3736   */\n  eq\n    /* \"#utility.yul\":3693:3754   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3747:3748   */\n  dup1\n    /* \"#utility.yul\":3740:3752   */\n  revert\n    /* \"#utility.yul\":3693:3754   */\ntag_177:\n    /* \"#utility.yul\":3642:3760   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3766:3905   */\ntag_99:\n    /* \"#utility.yul\":3821:3826   */\n  0x00\n    /* \"#utility.yul\":3852:3858   */\n  dup2\n    /* \"#utility.yul\":3846:3859   */\n  mload\n    /* \"#utility.yul\":3837:3859   */\n  swap1\n  pop\n    /* \"#utility.yul\":3868:3899   */\n  tag_179\n    /* \"#utility.yul\":3893:3898   */\n  dup2\n    /* \"#utility.yul\":3868:3899   */\n  tag_98\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":3766:3905   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3911:5387   */\ntag_3:\n    /* \"#utility.yul\":4044:4050   */\n  0x00\n    /* \"#utility.yul\":4052:4058   */\n  dup1\n    /* \"#utility.yul\":4060:4066   */\n  0x00\n    /* \"#utility.yul\":4068:4074   */\n  dup1\n    /* \"#utility.yul\":4076:4082   */\n  0x00\n    /* \"#utility.yul\":4084:4090   */\n  dup1\n    /* \"#utility.yul\":4133:4136   */\n  0xc0\n    /* \"#utility.yul\":4121:4130   */\n  dup8\n    /* \"#utility.yul\":4112:4119   */\n  dup10\n    /* \"#utility.yul\":4108:4131   */\n  sub\n    /* \"#utility.yul\":4104:4137   */\n  slt\n    /* \"#utility.yul\":4101:4221   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":4140:4219   */\n  tag_182\n  tag_78\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":4101:4221   */\ntag_181:\n    /* \"#utility.yul\":4260:4261   */\n  0x00\n    /* \"#utility.yul\":4285:4349   */\n  tag_183\n    /* \"#utility.yul\":4341:4348   */\n  dup10\n    /* \"#utility.yul\":4332:4338   */\n  dup3\n    /* \"#utility.yul\":4321:4330   */\n  dup11\n    /* \"#utility.yul\":4317:4339   */\n  add\n    /* \"#utility.yul\":4285:4349   */\n  tag_83\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":4275:4349   */\n  swap7\n  pop\n    /* \"#utility.yul\":4231:4359   */\n  pop\n    /* \"#utility.yul\":4398:4400   */\n  0x20\n    /* \"#utility.yul\":4424:4488   */\n  tag_184\n    /* \"#utility.yul\":4480:4487   */\n  dup10\n    /* \"#utility.yul\":4471:4477   */\n  dup3\n    /* \"#utility.yul\":4460:4469   */\n  dup11\n    /* \"#utility.yul\":4456:4478   */\n  add\n    /* \"#utility.yul\":4424:4488   */\n  tag_86\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":4414:4488   */\n  swap6\n  pop\n    /* \"#utility.yul\":4369:4498   */\n  pop\n    /* \"#utility.yul\":4558:4560   */\n  0x40\n    /* \"#utility.yul\":4547:4556   */\n  dup8\n    /* \"#utility.yul\":4543:4561   */\n  add\n    /* \"#utility.yul\":4537:4562   */\n  mload\n    /* \"#utility.yul\":4589:4607   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4581:4587   */\n  dup2\n    /* \"#utility.yul\":4578:4608   */\n  gt\n    /* \"#utility.yul\":4575:4692   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":4611:4690   */\n  tag_186\n  tag_79\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":4575:4692   */\ntag_185:\n    /* \"#utility.yul\":4716:4790   */\n  tag_187\n    /* \"#utility.yul\":4782:4789   */\n  dup10\n    /* \"#utility.yul\":4773:4779   */\n  dup3\n    /* \"#utility.yul\":4762:4771   */\n  dup11\n    /* \"#utility.yul\":4758:4780   */\n  add\n    /* \"#utility.yul\":4716:4790   */\n  tag_96\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":4706:4790   */\n  swap5\n  pop\n    /* \"#utility.yul\":4508:4800   */\n  pop\n    /* \"#utility.yul\":4860:4862   */\n  0x60\n    /* \"#utility.yul\":4849:4858   */\n  dup8\n    /* \"#utility.yul\":4845:4863   */\n  add\n    /* \"#utility.yul\":4839:4864   */\n  mload\n    /* \"#utility.yul\":4891:4909   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4883:4889   */\n  dup2\n    /* \"#utility.yul\":4880:4910   */\n  gt\n    /* \"#utility.yul\":4877:4994   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":4913:4992   */\n  tag_189\n  tag_79\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":4877:4994   */\ntag_188:\n    /* \"#utility.yul\":5018:5092   */\n  tag_190\n    /* \"#utility.yul\":5084:5091   */\n  dup10\n    /* \"#utility.yul\":5075:5081   */\n  dup3\n    /* \"#utility.yul\":5064:5073   */\n  dup11\n    /* \"#utility.yul\":5060:5082   */\n  add\n    /* \"#utility.yul\":5018:5092   */\n  tag_96\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":5008:5092   */\n  swap4\n  pop\n    /* \"#utility.yul\":4810:5102   */\n  pop\n    /* \"#utility.yul\":5141:5144   */\n  0x80\n    /* \"#utility.yul\":5168:5230   */\n  tag_191\n    /* \"#utility.yul\":5222:5229   */\n  dup10\n    /* \"#utility.yul\":5213:5219   */\n  dup3\n    /* \"#utility.yul\":5202:5211   */\n  dup11\n    /* \"#utility.yul\":5198:5220   */\n  add\n    /* \"#utility.yul\":5168:5230   */\n  tag_99\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":5158:5230   */\n  swap3\n  pop\n    /* \"#utility.yul\":5112:5240   */\n  pop\n    /* \"#utility.yul\":5279:5282   */\n  0xa0\n    /* \"#utility.yul\":5306:5370   */\n  tag_192\n    /* \"#utility.yul\":5362:5369   */\n  dup10\n    /* \"#utility.yul\":5353:5359   */\n  dup3\n    /* \"#utility.yul\":5342:5351   */\n  dup11\n    /* \"#utility.yul\":5338:5360   */\n  add\n    /* \"#utility.yul\":5306:5370   */\n  tag_86\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":5296:5370   */\n  swap2\n  pop\n    /* \"#utility.yul\":5250:5380   */\n  pop\n    /* \"#utility.yul\":3911:5387   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":5393:5573   */\ntag_100:\n    /* \"#utility.yul\":5441:5518   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5438:5439   */\n  0x00\n    /* \"#utility.yul\":5431:5519   */\n  mstore\n    /* \"#utility.yul\":5538:5542   */\n  0x11\n    /* \"#utility.yul\":5535:5536   */\n  0x04\n    /* \"#utility.yul\":5528:5543   */\n  mstore\n    /* \"#utility.yul\":5562:5566   */\n  0x24\n    /* \"#utility.yul\":5559:5560   */\n  0x00\n    /* \"#utility.yul\":5552:5567   */\n  revert\n    /* \"#utility.yul\":5579:5681   */\ntag_101:\n    /* \"#utility.yul\":5621:5629   */\n  0x00\n    /* \"#utility.yul\":5668:5673   */\n  dup2\n    /* \"#utility.yul\":5665:5666   */\n  0x01\n    /* \"#utility.yul\":5661:5674   */\n  shr\n    /* \"#utility.yul\":5640:5674   */\n  swap1\n  pop\n    /* \"#utility.yul\":5579:5681   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5687:6535   */\ntag_102:\n    /* \"#utility.yul\":5748:5753   */\n  0x00\n    /* \"#utility.yul\":5755:5759   */\n  dup1\n    /* \"#utility.yul\":5779:5785   */\n  dup3\n    /* \"#utility.yul\":5770:5785   */\n  swap2\n  pop\n    /* \"#utility.yul\":5803:5808   */\n  dup4\n    /* \"#utility.yul\":5794:5808   */\n  swap1\n  pop\n    /* \"#utility.yul\":5817:6529   */\ntag_196:\n    /* \"#utility.yul\":5838:5839   */\n  0x01\n    /* \"#utility.yul\":5828:5836   */\n  dup6\n    /* \"#utility.yul\":5825:5840   */\n  gt\n    /* \"#utility.yul\":5817:6529   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":5933:5937   */\n  dup1\n    /* \"#utility.yul\":5928:5931   */\n  dup7\n    /* \"#utility.yul\":5924:5938   */\n  div\n    /* \"#utility.yul\":5918:5922   */\n  dup2\n    /* \"#utility.yul\":5915:5939   */\n  gt\n    /* \"#utility.yul\":5912:5962   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":5942:5960   */\n  tag_200\n  tag_100\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":5912:5962   */\ntag_199:\n    /* \"#utility.yul\":5992:5993   */\n  0x01\n    /* \"#utility.yul\":5982:5990   */\n  dup6\n    /* \"#utility.yul\":5978:5994   */\n  and\n    /* \"#utility.yul\":5975:6426   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":6407:6411   */\n  dup1\n    /* \"#utility.yul\":6400:6405   */\n  dup3\n    /* \"#utility.yul\":6396:6412   */\n  mul\n    /* \"#utility.yul\":6387:6412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5975:6426   */\ntag_201:\n    /* \"#utility.yul\":6457:6461   */\n  dup1\n    /* \"#utility.yul\":6451:6455   */\n  dup2\n    /* \"#utility.yul\":6447:6462   */\n  mul\n    /* \"#utility.yul\":6439:6462   */\n  swap1\n  pop\n    /* \"#utility.yul\":6487:6519   */\n  tag_202\n    /* \"#utility.yul\":6510:6518   */\n  dup6\n    /* \"#utility.yul\":6487:6519   */\n  tag_101\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":6475:6519   */\n  swap5\n  pop\n    /* \"#utility.yul\":5817:6529   */\n  jump(tag_196)\ntag_198:\n    /* \"#utility.yul\":5687:6535   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6541:7614   */\ntag_103:\n    /* \"#utility.yul\":6595:6600   */\n  0x00\n    /* \"#utility.yul\":6786:6794   */\n  dup3\n    /* \"#utility.yul\":6776:6816   */\n  tag_204\n  jumpi\n    /* \"#utility.yul\":6807:6808   */\n  0x01\n    /* \"#utility.yul\":6798:6808   */\n  swap1\n  pop\n    /* \"#utility.yul\":6809:6814   */\n  jump(tag_203)\n    /* \"#utility.yul\":6776:6816   */\ntag_204:\n    /* \"#utility.yul\":6835:6839   */\n  dup2\n    /* \"#utility.yul\":6825:6861   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":6852:6853   */\n  0x00\n    /* \"#utility.yul\":6843:6853   */\n  swap1\n  pop\n    /* \"#utility.yul\":6854:6859   */\n  jump(tag_203)\n    /* \"#utility.yul\":6825:6861   */\ntag_205:\n    /* \"#utility.yul\":6921:6925   */\n  dup2\n    /* \"#utility.yul\":6969:6970   */\n  0x01\n    /* \"#utility.yul\":6964:6991   */\n  dup2\n  eq\n  tag_207\n  jumpi\n    /* \"#utility.yul\":7005:7006   */\n  0x02\n    /* \"#utility.yul\":7000:7191   */\n  dup2\n  eq\n  tag_208\n  jumpi\n    /* \"#utility.yul\":6914:7191   */\n  jump(tag_206)\n    /* \"#utility.yul\":6964:6991   */\ntag_207:\n    /* \"#utility.yul\":6982:6983   */\n  0x01\n    /* \"#utility.yul\":6973:6983   */\n  swap2\n  pop\n    /* \"#utility.yul\":6984:6989   */\n  pop\n  jump(tag_203)\n    /* \"#utility.yul\":7000:7191   */\ntag_208:\n    /* \"#utility.yul\":7045:7048   */\n  0xff\n    /* \"#utility.yul\":7035:7043   */\n  dup5\n    /* \"#utility.yul\":7032:7049   */\n  gt\n    /* \"#utility.yul\":7029:7072   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":7052:7070   */\n  tag_210\n  tag_100\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":7029:7072   */\ntag_209:\n    /* \"#utility.yul\":7101:7109   */\n  dup4\n    /* \"#utility.yul\":7098:7099   */\n  0x02\n    /* \"#utility.yul\":7094:7110   */\n  exp\n    /* \"#utility.yul\":7085:7110   */\n  swap2\n  pop\n    /* \"#utility.yul\":7136:7139   */\n  dup5\n    /* \"#utility.yul\":7129:7134   */\n  dup3\n    /* \"#utility.yul\":7126:7140   */\n  gt\n    /* \"#utility.yul\":7123:7163   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":7143:7161   */\n  tag_212\n  tag_100\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":7123:7163   */\ntag_211:\n    /* \"#utility.yul\":7176:7181   */\n  pop\n  jump(tag_203)\n    /* \"#utility.yul\":6914:7191   */\ntag_206:\n  pop\n    /* \"#utility.yul\":7300:7302   */\n  0x20\n    /* \"#utility.yul\":7290:7298   */\n  dup4\n    /* \"#utility.yul\":7287:7303   */\n  lt\n    /* \"#utility.yul\":7281:7284   */\n  0x0133\n    /* \"#utility.yul\":7275:7279   */\n  dup4\n    /* \"#utility.yul\":7272:7285   */\n  lt\n    /* \"#utility.yul\":7268:7304   */\n  and\n    /* \"#utility.yul\":7250:7252   */\n  0x4e\n    /* \"#utility.yul\":7240:7248   */\n  dup5\n    /* \"#utility.yul\":7237:7253   */\n  lt\n    /* \"#utility.yul\":7232:7234   */\n  0x0b\n    /* \"#utility.yul\":7226:7230   */\n  dup5\n    /* \"#utility.yul\":7223:7235   */\n  lt\n    /* \"#utility.yul\":7219:7254   */\n  and\n    /* \"#utility.yul\":7203:7314   */\n  or\n    /* \"#utility.yul\":7200:7446   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":7356:7364   */\n  dup3\n    /* \"#utility.yul\":7350:7354   */\n  dup3\n    /* \"#utility.yul\":7346:7365   */\n  exp\n    /* \"#utility.yul\":7337:7365   */\n  swap1\n  pop\n    /* \"#utility.yul\":7391:7394   */\n  dup4\n    /* \"#utility.yul\":7384:7389   */\n  dup2\n    /* \"#utility.yul\":7381:7395   */\n  gt\n    /* \"#utility.yul\":7378:7418   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":7398:7416   */\n  tag_215\n  tag_100\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":7378:7418   */\ntag_214:\n    /* \"#utility.yul\":7431:7436   */\n  jump(tag_203)\n    /* \"#utility.yul\":7200:7446   */\ntag_213:\n    /* \"#utility.yul\":7471:7513   */\n  tag_216\n    /* \"#utility.yul\":7509:7512   */\n  dup5\n    /* \"#utility.yul\":7499:7507   */\n  dup5\n    /* \"#utility.yul\":7493:7497   */\n  dup5\n    /* \"#utility.yul\":7490:7491   */\n  0x01\n    /* \"#utility.yul\":7471:7513   */\n  tag_102\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":7456:7513   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7545:7549   */\n  dup2\n    /* \"#utility.yul\":7540:7543   */\n  dup5\n    /* \"#utility.yul\":7536:7550   */\n  div\n    /* \"#utility.yul\":7529:7534   */\n  dup2\n    /* \"#utility.yul\":7526:7551   */\n  gt\n    /* \"#utility.yul\":7523:7574   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":7554:7572   */\n  tag_218\n  tag_100\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":7523:7574   */\ntag_217:\n    /* \"#utility.yul\":7603:7607   */\n  dup2\n    /* \"#utility.yul\":7596:7601   */\n  dup2\n    /* \"#utility.yul\":7592:7608   */\n  mul\n    /* \"#utility.yul\":7583:7608   */\n  swap1\n  pop\n    /* \"#utility.yul\":6541:7614   */\ntag_203:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7620:7901   */\ntag_6:\n    /* \"#utility.yul\":7678:7683   */\n  0x00\n    /* \"#utility.yul\":7702:7725   */\n  tag_220\n    /* \"#utility.yul\":7720:7724   */\n  dup3\n    /* \"#utility.yul\":7702:7725   */\n  tag_84\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":7694:7725   */\n  swap2\n  pop\n    /* \"#utility.yul\":7746:7771   */\n  tag_221\n    /* \"#utility.yul\":7762:7770   */\n  dup4\n    /* \"#utility.yul\":7746:7771   */\n  tag_97\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":7734:7771   */\n  swap3\n  pop\n    /* \"#utility.yul\":7790:7894   */\n  tag_222\n    /* \"#utility.yul\":7827:7893   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7817:7825   */\n  dup5\n    /* \"#utility.yul\":7811:7815   */\n  dup5\n    /* \"#utility.yul\":7790:7894   */\n  tag_103\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":7781:7894   */\n  swap1\n  pop\n    /* \"#utility.yul\":7620:7901   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7907:8317   */\ntag_8:\n    /* \"#utility.yul\":7947:7954   */\n  0x00\n    /* \"#utility.yul\":7970:7990   */\n  tag_224\n    /* \"#utility.yul\":7988:7989   */\n  dup3\n    /* \"#utility.yul\":7970:7990   */\n  tag_84\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":7965:7990   */\n  swap2\n  pop\n    /* \"#utility.yul\":8004:8024   */\n  tag_225\n    /* \"#utility.yul\":8022:8023   */\n  dup4\n    /* \"#utility.yul\":8004:8024   */\n  tag_84\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":7999:8024   */\n  swap3\n  pop\n    /* \"#utility.yul\":8059:8060   */\n  dup3\n    /* \"#utility.yul\":8056:8057   */\n  dup3\n    /* \"#utility.yul\":8052:8061   */\n  mul\n    /* \"#utility.yul\":8081:8111   */\n  tag_226\n    /* \"#utility.yul\":8099:8110   */\n  dup2\n    /* \"#utility.yul\":8081:8111   */\n  tag_84\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":8070:8111   */\n  swap2\n  pop\n    /* \"#utility.yul\":8260:8261   */\n  dup3\n    /* \"#utility.yul\":8251:8258   */\n  dup3\n    /* \"#utility.yul\":8247:8262   */\n  div\n    /* \"#utility.yul\":8244:8245   */\n  dup5\n    /* \"#utility.yul\":8241:8263   */\n  eq\n    /* \"#utility.yul\":8221:8222   */\n  dup4\n    /* \"#utility.yul\":8214:8223   */\n  iszero\n    /* \"#utility.yul\":8194:8277   */\n  or\n    /* \"#utility.yul\":8171:8310   */\n  tag_227\n  jumpi\n    /* \"#utility.yul\":8290:8308   */\n  tag_228\n  tag_100\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":8171:8310   */\ntag_227:\n    /* \"#utility.yul\":7955:8317   */\n  pop\n    /* \"#utility.yul\":7907:8317   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8323:8441   */\ntag_104:\n    /* \"#utility.yul\":8410:8434   */\n  tag_230\n    /* \"#utility.yul\":8428:8433   */\n  dup2\n    /* \"#utility.yul\":8410:8434   */\n  tag_81\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":8405:8408   */\n  dup3\n    /* \"#utility.yul\":8398:8435   */\n  mstore\n    /* \"#utility.yul\":8323:8441   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8447:8669   */\ntag_16:\n    /* \"#utility.yul\":8540:8544   */\n  0x00\n    /* \"#utility.yul\":8578:8580   */\n  0x20\n    /* \"#utility.yul\":8567:8576   */\n  dup3\n    /* \"#utility.yul\":8563:8581   */\n  add\n    /* \"#utility.yul\":8555:8581   */\n  swap1\n  pop\n    /* \"#utility.yul\":8591:8662   */\n  tag_232\n    /* \"#utility.yul\":8659:8660   */\n  0x00\n    /* \"#utility.yul\":8648:8657   */\n  dup4\n    /* \"#utility.yul\":8644:8661   */\n  add\n    /* \"#utility.yul\":8635:8641   */\n  dup5\n    /* \"#utility.yul\":8591:8662   */\n  tag_104\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":8447:8669   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8675:8774   */\ntag_105:\n    /* \"#utility.yul\":8727:8733   */\n  0x00\n    /* \"#utility.yul\":8761:8766   */\n  dup2\n    /* \"#utility.yul\":8755:8767   */\n  mload\n    /* \"#utility.yul\":8745:8767   */\n  swap1\n  pop\n    /* \"#utility.yul\":8675:8774   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8780:8960   */\ntag_106:\n    /* \"#utility.yul\":8828:8905   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8825:8826   */\n  0x00\n    /* \"#utility.yul\":8818:8906   */\n  mstore\n    /* \"#utility.yul\":8925:8929   */\n  0x22\n    /* \"#utility.yul\":8922:8923   */\n  0x04\n    /* \"#utility.yul\":8915:8930   */\n  mstore\n    /* \"#utility.yul\":8949:8953   */\n  0x24\n    /* \"#utility.yul\":8946:8947   */\n  0x00\n    /* \"#utility.yul\":8939:8954   */\n  revert\n    /* \"#utility.yul\":8966:9286   */\ntag_107:\n    /* \"#utility.yul\":9010:9016   */\n  0x00\n    /* \"#utility.yul\":9047:9048   */\n  0x02\n    /* \"#utility.yul\":9041:9045   */\n  dup3\n    /* \"#utility.yul\":9037:9049   */\n  div\n    /* \"#utility.yul\":9027:9049   */\n  swap1\n  pop\n    /* \"#utility.yul\":9094:9095   */\n  0x01\n    /* \"#utility.yul\":9088:9092   */\n  dup3\n    /* \"#utility.yul\":9084:9096   */\n  and\n    /* \"#utility.yul\":9115:9133   */\n  dup1\n    /* \"#utility.yul\":9105:9186   */\n  tag_236\n  jumpi\n    /* \"#utility.yul\":9171:9175   */\n  0x7f\n    /* \"#utility.yul\":9163:9169   */\n  dup3\n    /* \"#utility.yul\":9159:9176   */\n  and\n    /* \"#utility.yul\":9149:9176   */\n  swap2\n  pop\n    /* \"#utility.yul\":9105:9186   */\ntag_236:\n    /* \"#utility.yul\":9233:9235   */\n  0x20\n    /* \"#utility.yul\":9225:9231   */\n  dup3\n    /* \"#utility.yul\":9222:9236   */\n  lt\n    /* \"#utility.yul\":9202:9220   */\n  dup2\n    /* \"#utility.yul\":9199:9237   */\n  sub\n    /* \"#utility.yul\":9196:9280   */\n  tag_237\n  jumpi\n    /* \"#utility.yul\":9252:9270   */\n  tag_238\n  tag_106\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":9196:9280   */\ntag_237:\n    /* \"#utility.yul\":9017:9286   */\n  pop\n    /* \"#utility.yul\":8966:9286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9292:9433   */\ntag_108:\n    /* \"#utility.yul\":9341:9345   */\n  0x00\n    /* \"#utility.yul\":9364:9367   */\n  dup2\n    /* \"#utility.yul\":9356:9367   */\n  swap1\n  pop\n    /* \"#utility.yul\":9387:9390   */\n  dup2\n    /* \"#utility.yul\":9384:9385   */\n  0x00\n    /* \"#utility.yul\":9377:9391   */\n  mstore\n    /* \"#utility.yul\":9421:9425   */\n  0x20\n    /* \"#utility.yul\":9418:9419   */\n  0x00\n    /* \"#utility.yul\":9408:9426   */\n  keccak256\n    /* \"#utility.yul\":9400:9426   */\n  swap1\n  pop\n    /* \"#utility.yul\":9292:9433   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9439:9532   */\ntag_109:\n    /* \"#utility.yul\":9476:9482   */\n  0x00\n    /* \"#utility.yul\":9523:9525   */\n  0x20\n    /* \"#utility.yul\":9518:9520   */\n  0x1f\n    /* \"#utility.yul\":9511:9516   */\n  dup4\n    /* \"#utility.yul\":9507:9521   */\n  add\n    /* \"#utility.yul\":9503:9526   */\n  div\n    /* \"#utility.yul\":9493:9526   */\n  swap1\n  pop\n    /* \"#utility.yul\":9439:9532   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9538:9645   */\ntag_110:\n    /* \"#utility.yul\":9582:9590   */\n  0x00\n    /* \"#utility.yul\":9632:9637   */\n  dup3\n    /* \"#utility.yul\":9626:9630   */\n  dup3\n    /* \"#utility.yul\":9622:9638   */\n  shl\n    /* \"#utility.yul\":9601:9638   */\n  swap1\n  pop\n    /* \"#utility.yul\":9538:9645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9651:10044   */\ntag_111:\n    /* \"#utility.yul\":9720:9726   */\n  0x00\n    /* \"#utility.yul\":9770:9771   */\n  0x08\n    /* \"#utility.yul\":9758:9768   */\n  dup4\n    /* \"#utility.yul\":9754:9772   */\n  mul\n    /* \"#utility.yul\":9793:9890   */\n  tag_243\n    /* \"#utility.yul\":9823:9889   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9812:9821   */\n  dup3\n    /* \"#utility.yul\":9793:9890   */\n  tag_110\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":9911:9950   */\n  tag_244\n    /* \"#utility.yul\":9941:9949   */\n  dup7\n    /* \"#utility.yul\":9930:9939   */\n  dup4\n    /* \"#utility.yul\":9911:9950   */\n  tag_110\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":9899:9950   */\n  swap6\n  pop\n    /* \"#utility.yul\":9983:9987   */\n  dup1\n    /* \"#utility.yul\":9979:9988   */\n  not\n    /* \"#utility.yul\":9972:9977   */\n  dup5\n    /* \"#utility.yul\":9968:9989   */\n  and\n    /* \"#utility.yul\":9959:9989   */\n  swap4\n  pop\n    /* \"#utility.yul\":10032:10036   */\n  dup1\n    /* \"#utility.yul\":10022:10030   */\n  dup7\n    /* \"#utility.yul\":10018:10037   */\n  and\n    /* \"#utility.yul\":10011:10016   */\n  dup5\n    /* \"#utility.yul\":10008:10038   */\n  or\n    /* \"#utility.yul\":9998:10038   */\n  swap3\n  pop\n    /* \"#utility.yul\":9727:10044   */\n  pop\n  pop\n    /* \"#utility.yul\":9651:10044   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10050:10110   */\ntag_112:\n    /* \"#utility.yul\":10078:10081   */\n  0x00\n    /* \"#utility.yul\":10099:10104   */\n  dup2\n    /* \"#utility.yul\":10092:10104   */\n  swap1\n  pop\n    /* \"#utility.yul\":10050:10110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10116:10258   */\ntag_113:\n    /* \"#utility.yul\":10166:10175   */\n  0x00\n    /* \"#utility.yul\":10199:10252   */\n  tag_247\n    /* \"#utility.yul\":10217:10251   */\n  tag_248\n    /* \"#utility.yul\":10226:10250   */\n  tag_249\n    /* \"#utility.yul\":10244:10249   */\n  dup5\n    /* \"#utility.yul\":10226:10250   */\n  tag_84\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":10217:10251   */\n  tag_112\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":10199:10252   */\n  tag_84\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":10186:10252   */\n  swap1\n  pop\n    /* \"#utility.yul\":10116:10258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10264:10339   */\ntag_114:\n    /* \"#utility.yul\":10307:10310   */\n  0x00\n    /* \"#utility.yul\":10328:10333   */\n  dup2\n    /* \"#utility.yul\":10321:10333   */\n  swap1\n  pop\n    /* \"#utility.yul\":10264:10339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10345:10614   */\ntag_115:\n    /* \"#utility.yul\":10455:10494   */\n  tag_252\n    /* \"#utility.yul\":10486:10493   */\n  dup4\n    /* \"#utility.yul\":10455:10494   */\n  tag_113\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":10516:10607   */\n  tag_253\n    /* \"#utility.yul\":10565:10606   */\n  tag_254\n    /* \"#utility.yul\":10589:10605   */\n  dup3\n    /* \"#utility.yul\":10565:10606   */\n  tag_114\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":10557:10563   */\n  dup5\n    /* \"#utility.yul\":10550:10554   */\n  dup5\n    /* \"#utility.yul\":10544:10555   */\n  sload\n    /* \"#utility.yul\":10516:10607   */\n  tag_111\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":10510:10514   */\n  dup3\n    /* \"#utility.yul\":10503:10608   */\n  sstore\n    /* \"#utility.yul\":10421:10614   */\n  pop\n    /* \"#utility.yul\":10345:10614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10620:10693   */\ntag_116:\n    /* \"#utility.yul\":10665:10668   */\n  0x00\n    /* \"#utility.yul\":10620:10693   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":10699:10888   */\ntag_117:\n    /* \"#utility.yul\":10776:10808   */\n  tag_257\n  tag_116\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":10817:10882   */\n  tag_258\n    /* \"#utility.yul\":10875:10881   */\n  dup2\n    /* \"#utility.yul\":10867:10873   */\n  dup5\n    /* \"#utility.yul\":10861:10865   */\n  dup5\n    /* \"#utility.yul\":10817:10882   */\n  tag_115\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":10752:10888   */\n  pop\n    /* \"#utility.yul\":10699:10888   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10894:11080   */\ntag_118:\n    /* \"#utility.yul\":10954:11074   */\ntag_260:\n    /* \"#utility.yul\":10971:10974   */\n  dup2\n    /* \"#utility.yul\":10964:10969   */\n  dup2\n    /* \"#utility.yul\":10961:10975   */\n  lt\n    /* \"#utility.yul\":10954:11074   */\n  iszero\n  tag_262\n  jumpi\n    /* \"#utility.yul\":11025:11064   */\n  tag_263\n    /* \"#utility.yul\":11062:11063   */\n  0x00\n    /* \"#utility.yul\":11055:11060   */\n  dup3\n    /* \"#utility.yul\":11025:11064   */\n  tag_117\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":10998:10999   */\n  0x01\n    /* \"#utility.yul\":10991:10996   */\n  dup2\n    /* \"#utility.yul\":10987:11000   */\n  add\n    /* \"#utility.yul\":10978:11000   */\n  swap1\n  pop\n    /* \"#utility.yul\":10954:11074   */\n  jump(tag_260)\ntag_262:\n    /* \"#utility.yul\":10894:11080   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11086:11629   */\ntag_119:\n    /* \"#utility.yul\":11187:11189   */\n  0x1f\n    /* \"#utility.yul\":11182:11185   */\n  dup3\n    /* \"#utility.yul\":11179:11190   */\n  gt\n    /* \"#utility.yul\":11176:11622   */\n  iszero\n  tag_265\n  jumpi\n    /* \"#utility.yul\":11221:11259   */\n  tag_266\n    /* \"#utility.yul\":11253:11258   */\n  dup2\n    /* \"#utility.yul\":11221:11259   */\n  tag_108\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":11305:11334   */\n  tag_267\n    /* \"#utility.yul\":11323:11333   */\n  dup5\n    /* \"#utility.yul\":11305:11334   */\n  tag_109\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":11295:11303   */\n  dup2\n    /* \"#utility.yul\":11291:11335   */\n  add\n    /* \"#utility.yul\":11488:11490   */\n  0x20\n    /* \"#utility.yul\":11476:11486   */\n  dup6\n    /* \"#utility.yul\":11473:11491   */\n  lt\n    /* \"#utility.yul\":11470:11519   */\n  iszero\n  tag_268\n  jumpi\n    /* \"#utility.yul\":11509:11517   */\n  dup2\n    /* \"#utility.yul\":11494:11517   */\n  swap1\n  pop\n    /* \"#utility.yul\":11470:11519   */\ntag_268:\n    /* \"#utility.yul\":11532:11612   */\n  tag_269\n    /* \"#utility.yul\":11588:11610   */\n  tag_270\n    /* \"#utility.yul\":11606:11609   */\n  dup6\n    /* \"#utility.yul\":11588:11610   */\n  tag_109\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":11578:11586   */\n  dup4\n    /* \"#utility.yul\":11574:11611   */\n  add\n    /* \"#utility.yul\":11561:11572   */\n  dup3\n    /* \"#utility.yul\":11532:11612   */\n  tag_118\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":11191:11622   */\n  pop\n  pop\n    /* \"#utility.yul\":11176:11622   */\ntag_265:\n    /* \"#utility.yul\":11086:11629   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11635:11752   */\ntag_120:\n    /* \"#utility.yul\":11689:11697   */\n  0x00\n    /* \"#utility.yul\":11739:11744   */\n  dup3\n    /* \"#utility.yul\":11733:11737   */\n  dup3\n    /* \"#utility.yul\":11729:11745   */\n  shr\n    /* \"#utility.yul\":11708:11745   */\n  swap1\n  pop\n    /* \"#utility.yul\":11635:11752   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11758:11927   */\ntag_121:\n    /* \"#utility.yul\":11802:11808   */\n  0x00\n    /* \"#utility.yul\":11835:11886   */\n  tag_273\n    /* \"#utility.yul\":11883:11884   */\n  0x00\n    /* \"#utility.yul\":11879:11885   */\n  not\n    /* \"#utility.yul\":11871:11876   */\n  dup5\n    /* \"#utility.yul\":11868:11869   */\n  0x08\n    /* \"#utility.yul\":11864:11877   */\n  mul\n    /* \"#utility.yul\":11835:11886   */\n  tag_120\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":11831:11887   */\n  not\n    /* \"#utility.yul\":11916:11920   */\n  dup1\n    /* \"#utility.yul\":11910:11914   */\n  dup4\n    /* \"#utility.yul\":11906:11921   */\n  and\n    /* \"#utility.yul\":11896:11921   */\n  swap2\n  pop\n    /* \"#utility.yul\":11809:11927   */\n  pop\n    /* \"#utility.yul\":11758:11927   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11932:12227   */\ntag_122:\n    /* \"#utility.yul\":12008:12012   */\n  0x00\n    /* \"#utility.yul\":12154:12183   */\n  tag_275\n    /* \"#utility.yul\":12179:12182   */\n  dup4\n    /* \"#utility.yul\":12173:12177   */\n  dup4\n    /* \"#utility.yul\":12154:12183   */\n  tag_121\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":12146:12183   */\n  swap2\n  pop\n    /* \"#utility.yul\":12216:12219   */\n  dup3\n    /* \"#utility.yul\":12213:12214   */\n  0x02\n    /* \"#utility.yul\":12209:12220   */\n  mul\n    /* \"#utility.yul\":12203:12207   */\n  dup3\n    /* \"#utility.yul\":12200:12221   */\n  or\n    /* \"#utility.yul\":12192:12221   */\n  swap1\n  pop\n    /* \"#utility.yul\":11932:12227   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12232:13627   */\ntag_21:\n    /* \"#utility.yul\":12349:12386   */\n  tag_277\n    /* \"#utility.yul\":12382:12385   */\n  dup3\n    /* \"#utility.yul\":12349:12386   */\n  tag_105\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":12451:12469   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":12443:12449   */\n  dup2\n    /* \"#utility.yul\":12440:12470   */\n  gt\n    /* \"#utility.yul\":12437:12493   */\n  iszero\n  tag_278\n  jumpi\n    /* \"#utility.yul\":12473:12491   */\n  tag_279\n  tag_90\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":12437:12493   */\ntag_278:\n    /* \"#utility.yul\":12517:12555   */\n  tag_280\n    /* \"#utility.yul\":12549:12553   */\n  dup3\n    /* \"#utility.yul\":12543:12554   */\n  sload\n    /* \"#utility.yul\":12517:12555   */\n  tag_107\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":12602:12669   */\n  tag_281\n    /* \"#utility.yul\":12662:12668   */\n  dup3\n    /* \"#utility.yul\":12654:12660   */\n  dup3\n    /* \"#utility.yul\":12648:12652   */\n  dup6\n    /* \"#utility.yul\":12602:12669   */\n  tag_119\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":12696:12697   */\n  0x00\n    /* \"#utility.yul\":12720:12724   */\n  0x20\n    /* \"#utility.yul\":12707:12724   */\n  swap1\n  pop\n    /* \"#utility.yul\":12752:12754   */\n  0x1f\n    /* \"#utility.yul\":12744:12750   */\n  dup4\n    /* \"#utility.yul\":12741:12755   */\n  gt\n    /* \"#utility.yul\":12769:12770   */\n  0x01\n    /* \"#utility.yul\":12764:13382   */\n  dup2\n  eq\n  tag_283\n  jumpi\n    /* \"#utility.yul\":13426:13427   */\n  0x00\n    /* \"#utility.yul\":13443:13449   */\n  dup5\n    /* \"#utility.yul\":13440:13517   */\n  iszero\n  tag_284\n  jumpi\n    /* \"#utility.yul\":13492:13501   */\n  dup3\n    /* \"#utility.yul\":13487:13490   */\n  dup8\n    /* \"#utility.yul\":13483:13502   */\n  add\n    /* \"#utility.yul\":13477:13503   */\n  mload\n    /* \"#utility.yul\":13468:13503   */\n  swap1\n  pop\n    /* \"#utility.yul\":13440:13517   */\ntag_284:\n    /* \"#utility.yul\":13543:13610   */\n  tag_285\n    /* \"#utility.yul\":13603:13609   */\n  dup6\n    /* \"#utility.yul\":13596:13601   */\n  dup3\n    /* \"#utility.yul\":13543:13610   */\n  tag_122\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":13537:13541   */\n  dup7\n    /* \"#utility.yul\":13530:13611   */\n  sstore\n    /* \"#utility.yul\":13399:13621   */\n  pop\n    /* \"#utility.yul\":12734:13621   */\n  jump(tag_282)\n    /* \"#utility.yul\":12764:13382   */\ntag_283:\n    /* \"#utility.yul\":12816:12820   */\n  0x1f\n    /* \"#utility.yul\":12812:12821   */\n  not\n    /* \"#utility.yul\":12804:12810   */\n  dup5\n    /* \"#utility.yul\":12800:12822   */\n  and\n    /* \"#utility.yul\":12850:12887   */\n  tag_286\n    /* \"#utility.yul\":12882:12886   */\n  dup7\n    /* \"#utility.yul\":12850:12887   */\n  tag_108\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":12909:12910   */\n  0x00\n    /* \"#utility.yul\":12923:13131   */\ntag_287:\n    /* \"#utility.yul\":12937:12944   */\n  dup3\n    /* \"#utility.yul\":12934:12935   */\n  dup2\n    /* \"#utility.yul\":12931:12945   */\n  lt\n    /* \"#utility.yul\":12923:13131   */\n  iszero\n  tag_289\n  jumpi\n    /* \"#utility.yul\":13016:13025   */\n  dup5\n    /* \"#utility.yul\":13011:13014   */\n  dup10\n    /* \"#utility.yul\":13007:13026   */\n  add\n    /* \"#utility.yul\":13001:13027   */\n  mload\n    /* \"#utility.yul\":12993:12999   */\n  dup3\n    /* \"#utility.yul\":12986:13028   */\n  sstore\n    /* \"#utility.yul\":13067:13068   */\n  0x01\n    /* \"#utility.yul\":13059:13065   */\n  dup3\n    /* \"#utility.yul\":13055:13069   */\n  add\n    /* \"#utility.yul\":13045:13069   */\n  swap2\n  pop\n    /* \"#utility.yul\":13114:13116   */\n  0x20\n    /* \"#utility.yul\":13103:13112   */\n  dup6\n    /* \"#utility.yul\":13099:13117   */\n  add\n    /* \"#utility.yul\":13086:13117   */\n  swap5\n  pop\n    /* \"#utility.yul\":12960:12964   */\n  0x20\n    /* \"#utility.yul\":12957:12958   */\n  dup2\n    /* \"#utility.yul\":12953:12965   */\n  add\n    /* \"#utility.yul\":12948:12965   */\n  swap1\n  pop\n    /* \"#utility.yul\":12923:13131   */\n  jump(tag_287)\ntag_289:\n    /* \"#utility.yul\":13159:13165   */\n  dup7\n    /* \"#utility.yul\":13150:13157   */\n  dup4\n    /* \"#utility.yul\":13147:13166   */\n  lt\n    /* \"#utility.yul\":13144:13323   */\n  iszero\n  tag_290\n  jumpi\n    /* \"#utility.yul\":13217:13226   */\n  dup5\n    /* \"#utility.yul\":13212:13215   */\n  dup10\n    /* \"#utility.yul\":13208:13227   */\n  add\n    /* \"#utility.yul\":13202:13228   */\n  mload\n    /* \"#utility.yul\":13260:13308   */\n  tag_291\n    /* \"#utility.yul\":13302:13306   */\n  0x1f\n    /* \"#utility.yul\":13294:13300   */\n  dup10\n    /* \"#utility.yul\":13290:13307   */\n  and\n    /* \"#utility.yul\":13279:13288   */\n  dup3\n    /* \"#utility.yul\":13260:13308   */\n  tag_121\n  jump\t// in\ntag_291:\n    /* \"#utility.yul\":13252:13258   */\n  dup4\n    /* \"#utility.yul\":13245:13309   */\n  sstore\n    /* \"#utility.yul\":13167:13323   */\n  pop\n    /* \"#utility.yul\":13144:13323   */\ntag_290:\n    /* \"#utility.yul\":13369:13370   */\n  0x01\n    /* \"#utility.yul\":13365:13366   */\n  0x02\n    /* \"#utility.yul\":13357:13363   */\n  dup9\n    /* \"#utility.yul\":13353:13367   */\n  mul\n    /* \"#utility.yul\":13349:13371   */\n  add\n    /* \"#utility.yul\":13343:13347   */\n  dup9\n    /* \"#utility.yul\":13336:13372   */\n  sstore\n    /* \"#utility.yul\":12771:13382   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12734:13621   */\ntag_282:\n  pop\n    /* \"#utility.yul\":12324:13627   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12232:13627   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13633:13718   */\ntag_123:\n    /* \"#utility.yul\":13678:13685   */\n  0x00\n    /* \"#utility.yul\":13707:13712   */\n  dup2\n    /* \"#utility.yul\":13696:13712   */\n  swap1\n  pop\n    /* \"#utility.yul\":13633:13718   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13724:13882   */\ntag_124:\n    /* \"#utility.yul\":13782:13791   */\n  0x00\n    /* \"#utility.yul\":13815:13876   */\n  tag_294\n    /* \"#utility.yul\":13833:13875   */\n  tag_295\n    /* \"#utility.yul\":13842:13874   */\n  tag_296\n    /* \"#utility.yul\":13868:13873   */\n  dup5\n    /* \"#utility.yul\":13842:13874   */\n  tag_123\n  jump\t// in\ntag_296:\n    /* \"#utility.yul\":13833:13875   */\n  tag_112\n  jump\t// in\ntag_295:\n    /* \"#utility.yul\":13815:13876   */\n  tag_84\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":13802:13876   */\n  swap1\n  pop\n    /* \"#utility.yul\":13724:13882   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13888:14035   */\ntag_125:\n    /* \"#utility.yul\":13983:14028   */\n  tag_298\n    /* \"#utility.yul\":14022:14027   */\n  dup2\n    /* \"#utility.yul\":13983:14028   */\n  tag_124\n  jump\t// in\ntag_298:\n    /* \"#utility.yul\":13978:13981   */\n  dup3\n    /* \"#utility.yul\":13971:14029   */\n  mstore\n    /* \"#utility.yul\":13888:14035   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14041:14279   */\ntag_27:\n    /* \"#utility.yul\":14142:14146   */\n  0x00\n    /* \"#utility.yul\":14180:14182   */\n  0x20\n    /* \"#utility.yul\":14169:14178   */\n  dup3\n    /* \"#utility.yul\":14165:14183   */\n  add\n    /* \"#utility.yul\":14157:14183   */\n  swap1\n  pop\n    /* \"#utility.yul\":14193:14272   */\n  tag_300\n    /* \"#utility.yul\":14269:14270   */\n  0x00\n    /* \"#utility.yul\":14258:14267   */\n  dup4\n    /* \"#utility.yul\":14254:14271   */\n  add\n    /* \"#utility.yul\":14245:14251   */\n  dup5\n    /* \"#utility.yul\":14193:14272   */\n  tag_125\n  jump\t// in\ntag_300:\n    /* \"#utility.yul\":14041:14279   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14285:14403   */\ntag_126:\n    /* \"#utility.yul\":14372:14396   */\n  tag_302\n    /* \"#utility.yul\":14390:14395   */\n  dup2\n    /* \"#utility.yul\":14372:14396   */\n  tag_84\n  jump\t// in\ntag_302:\n    /* \"#utility.yul\":14367:14370   */\n  dup3\n    /* \"#utility.yul\":14360:14397   */\n  mstore\n    /* \"#utility.yul\":14285:14403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14409:14741   */\ntag_51:\n    /* \"#utility.yul\":14530:14534   */\n  0x00\n    /* \"#utility.yul\":14568:14570   */\n  0x40\n    /* \"#utility.yul\":14557:14566   */\n  dup3\n    /* \"#utility.yul\":14553:14571   */\n  add\n    /* \"#utility.yul\":14545:14571   */\n  swap1\n  pop\n    /* \"#utility.yul\":14581:14652   */\n  tag_304\n    /* \"#utility.yul\":14649:14650   */\n  0x00\n    /* \"#utility.yul\":14638:14647   */\n  dup4\n    /* \"#utility.yul\":14634:14651   */\n  add\n    /* \"#utility.yul\":14625:14631   */\n  dup6\n    /* \"#utility.yul\":14581:14652   */\n  tag_126\n  jump\t// in\ntag_304:\n    /* \"#utility.yul\":14662:14734   */\n  tag_305\n    /* \"#utility.yul\":14730:14732   */\n  0x20\n    /* \"#utility.yul\":14719:14728   */\n  dup4\n    /* \"#utility.yul\":14715:14733   */\n  add\n    /* \"#utility.yul\":14706:14712   */\n  dup5\n    /* \"#utility.yul\":14662:14734   */\n  tag_126\n  jump\t// in\ntag_305:\n    /* \"#utility.yul\":14409:14741   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14747:14938   */\ntag_67:\n    /* \"#utility.yul\":14787:14790   */\n  0x00\n    /* \"#utility.yul\":14806:14826   */\n  tag_307\n    /* \"#utility.yul\":14824:14825   */\n  dup3\n    /* \"#utility.yul\":14806:14826   */\n  tag_84\n  jump\t// in\ntag_307:\n    /* \"#utility.yul\":14801:14826   */\n  swap2\n  pop\n    /* \"#utility.yul\":14840:14860   */\n  tag_308\n    /* \"#utility.yul\":14858:14859   */\n  dup4\n    /* \"#utility.yul\":14840:14860   */\n  tag_84\n  jump\t// in\ntag_308:\n    /* \"#utility.yul\":14835:14860   */\n  swap3\n  pop\n    /* \"#utility.yul\":14883:14884   */\n  dup3\n    /* \"#utility.yul\":14880:14881   */\n  dup3\n    /* \"#utility.yul\":14876:14885   */\n  add\n    /* \"#utility.yul\":14869:14885   */\n  swap1\n  pop\n    /* \"#utility.yul\":14904:14907   */\n  dup1\n    /* \"#utility.yul\":14901:14902   */\n  dup3\n    /* \"#utility.yul\":14898:14908   */\n  gt\n    /* \"#utility.yul\":14895:14931   */\n  iszero\n  tag_309\n  jumpi\n    /* \"#utility.yul\":14911:14929   */\n  tag_310\n  tag_100\n  jump\t// in\ntag_310:\n    /* \"#utility.yul\":14895:14931   */\ntag_309:\n    /* \"#utility.yul\":14747:14938   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14944:15386   */\ntag_71:\n    /* \"#utility.yul\":15093:15097   */\n  0x00\n    /* \"#utility.yul\":15131:15133   */\n  0x60\n    /* \"#utility.yul\":15120:15129   */\n  dup3\n    /* \"#utility.yul\":15116:15134   */\n  add\n    /* \"#utility.yul\":15108:15134   */\n  swap1\n  pop\n    /* \"#utility.yul\":15144:15215   */\n  tag_312\n    /* \"#utility.yul\":15212:15213   */\n  0x00\n    /* \"#utility.yul\":15201:15210   */\n  dup4\n    /* \"#utility.yul\":15197:15214   */\n  add\n    /* \"#utility.yul\":15188:15194   */\n  dup7\n    /* \"#utility.yul\":15144:15215   */\n  tag_104\n  jump\t// in\ntag_312:\n    /* \"#utility.yul\":15225:15297   */\n  tag_313\n    /* \"#utility.yul\":15293:15295   */\n  0x20\n    /* \"#utility.yul\":15282:15291   */\n  dup4\n    /* \"#utility.yul\":15278:15296   */\n  add\n    /* \"#utility.yul\":15269:15275   */\n  dup6\n    /* \"#utility.yul\":15225:15297   */\n  tag_126\n  jump\t// in\ntag_313:\n    /* \"#utility.yul\":15307:15379   */\n  tag_314\n    /* \"#utility.yul\":15375:15377   */\n  0x40\n    /* \"#utility.yul\":15364:15373   */\n  dup4\n    /* \"#utility.yul\":15360:15378   */\n  add\n    /* \"#utility.yul\":15351:15357   */\n  dup5\n    /* \"#utility.yul\":15307:15379   */\n  tag_126\n  jump\t// in\ntag_314:\n    /* \"#utility.yul\":14944:15386   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15392:15614   */\ntag_75:\n    /* \"#utility.yul\":15485:15489   */\n  0x00\n    /* \"#utility.yul\":15523:15525   */\n  0x20\n    /* \"#utility.yul\":15512:15521   */\n  dup3\n    /* \"#utility.yul\":15508:15526   */\n  add\n    /* \"#utility.yul\":15500:15526   */\n  swap1\n  pop\n    /* \"#utility.yul\":15536:15607   */\n  tag_316\n    /* \"#utility.yul\":15604:15605   */\n  0x00\n    /* \"#utility.yul\":15593:15602   */\n  dup4\n    /* \"#utility.yul\":15589:15606   */\n  add\n    /* \"#utility.yul\":15580:15586   */\n  dup5\n    /* \"#utility.yul\":15536:15607   */\n  tag_126\n  jump\t// in\ntag_316:\n    /* \"#utility.yul\":15392:15614   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/masverse/MasToken.sol\":267:1474  contract MasToken is Ownable, ERC20Pausable, ERC20Capped {... */\ntag_31:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x14b43952c9c557afabf9b7ecdfe63418536c81d3756f93dbe1b454d104a2df26\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/masverse/MasToken.sol\":267:1474  contract MasToken is Ownable, ERC20Pausable, ERC20Capped {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf0141d84\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/masverse/MasToken.sol\":738:826  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/masverse/MasToken.sol\":1119:1184  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/masverse/MasToken.sol\":834:929  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/masverse/MasToken.sol\":1050:1111  function pause() public onlyOwner {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/masverse/MasToken.sol\":937:1042  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/masverse/MasToken.sol\":1387:1469  function getDecimals() public view returns (uint8) {... */\n    tag_20:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_95\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":738:826  function decimals() public view override returns (uint8) {... */\n    tag_45:\n        /* \"contracts/masverse/MasToken.sol\":788:793  uint8 */\n      0x00\n        /* \"contracts/masverse/MasToken.sol\":813:818  _deci */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/masverse/MasToken.sol\":806:818  return _deci */\n      swap1\n      pop\n        /* \"contracts/masverse/MasToken.sol\":738:826  function decimals() public view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0x14b43952c9c557afabf9b7ecdfe63418536c81d3756f93dbe1b454d104a2df26\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":1119:1184  function unpause() public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/masverse/MasToken.sol\":1166:1176  _unpause() */\n      tag_118\n        /* \"contracts/masverse/MasToken.sol\":1166:1174  _unpause */\n      tag_119\n        /* \"contracts/masverse/MasToken.sol\":1166:1176  _unpause() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/masverse/MasToken.sol\":1119:1184  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":834:929  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/masverse/MasToken.sol\":904:921  _mint(to, amount) */\n      tag_123\n        /* \"contracts/masverse/MasToken.sol\":910:912  to */\n      dup3\n        /* \"contracts/masverse/MasToken.sol\":914:920  amount */\n      dup3\n        /* \"contracts/masverse/MasToken.sol\":904:909  _mint */\n      tag_124\n        /* \"contracts/masverse/MasToken.sol\":904:921  _mint(to, amount) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/masverse/MasToken.sol\":834:929  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":1050:1111  function pause() public onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/masverse/MasToken.sol\":1095:1103  _pause() */\n      tag_135\n        /* \"contracts/masverse/MasToken.sol\":1095:1101  _pause */\n      tag_136\n        /* \"contracts/masverse/MasToken.sol\":1095:1103  _pause() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/masverse/MasToken.sol\":1050:1111  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_95\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_95\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":937:1042  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/masverse/MasToken.sol\":1012:1034  _burn(account, amount) */\n      tag_147\n        /* \"contracts/masverse/MasToken.sol\":1018:1025  account */\n      dup3\n        /* \"contracts/masverse/MasToken.sol\":1027:1033  amount */\n      dup3\n        /* \"contracts/masverse/MasToken.sol\":1012:1017  _burn */\n      tag_148\n        /* \"contracts/masverse/MasToken.sol\":1012:1034  _burn(account, amount) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/masverse/MasToken.sol\":937:1042  function burn(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":1387:1469  function getDecimals() public view returns (uint8) {... */\n    tag_88:\n        /* \"contracts/masverse/MasToken.sol\":1431:1436  uint8 */\n      0x00\n        /* \"contracts/masverse/MasToken.sol\":1456:1461  _deci */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/masverse/MasToken.sol\":1449:1461  return _deci */\n      swap1\n      pop\n        /* \"contracts/masverse/MasToken.sol\":1387:1469  function getDecimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_185\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_196\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/masverse/MasToken.sol\":1192:1379  function _update(... */\n    tag_177:\n        /* \"contracts/masverse/MasToken.sol\":1341:1371  super._update(from, to, value) */\n      tag_213\n        /* \"contracts/masverse/MasToken.sol\":1355:1359  from */\n      dup4\n        /* \"contracts/masverse/MasToken.sol\":1361:1363  to */\n      dup4\n        /* \"contracts/masverse/MasToken.sol\":1365:1370  value */\n      dup4\n        /* \"contracts/masverse/MasToken.sol\":1341:1354  super._update */\n      tag_214\n        /* \"contracts/masverse/MasToken.sol\":1341:1371  super._update(from, to, value) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/masverse/MasToken.sol\":1192:1379  function _update(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_57\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_57\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n      tag_36\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_231\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_239)\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_243)\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_245:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_246:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_247:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_272:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_272)\n    tag_274:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_248:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_249:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_277\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_245\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":820:891   */\n      tag_278\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_246\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_279\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_247\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":990:1019   */\n      tag_280\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_248\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_28:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_282\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_249\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_251:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_253:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_254:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_288\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_253\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_255:\n        /* \"#utility.yul\":1985:2009   */\n      tag_290\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_254\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_291:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_256:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_293\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_255\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_257:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_258:\n        /* \"#utility.yul\":2341:2365   */\n      tag_296\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_257\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_297:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_259:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_299\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_258\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_31:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_302\n      tag_251\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2634:2753   */\n    tag_301:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_303\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_256\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_304\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_259\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_260:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_261:\n        /* \"#utility.yul\":3198:3219   */\n      tag_307\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_260\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_34:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_309\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_261\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_262:\n        /* \"#utility.yul\":3535:3559   */\n      tag_311\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_257\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_38:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_313\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_262\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_41:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_316\n      tag_251\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3910:4029   */\n    tag_315:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_317\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_256\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_318\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_256\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_319\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_259\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_263:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_264:\n        /* \"#utility.yul\":4600:4622   */\n      tag_322\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_263\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_47:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_324\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_264\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5184   */\n    tag_61:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:5050   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":4969:5048   */\n      tag_327\n      tag_251\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4931:5050   */\n    tag_326:\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5114:5167   */\n      tag_328\n        /* \"#utility.yul\":5159:5166   */\n      dup5\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      dup6\n        /* \"#utility.yul\":5135:5157   */\n      add\n        /* \"#utility.yul\":5114:5167   */\n      tag_256\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5104:5167   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5177   */\n      pop\n        /* \"#utility.yul\":4855:5184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5308   */\n    tag_265:\n        /* \"#utility.yul\":5277:5301   */\n      tag_330\n        /* \"#utility.yul\":5295:5300   */\n      dup2\n        /* \"#utility.yul\":5277:5301   */\n      tag_254\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5272:5275   */\n      dup3\n        /* \"#utility.yul\":5265:5302   */\n      mstore\n        /* \"#utility.yul\":5190:5308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5536   */\n    tag_71:\n        /* \"#utility.yul\":5407:5411   */\n      0x00\n        /* \"#utility.yul\":5445:5447   */\n      0x20\n        /* \"#utility.yul\":5434:5443   */\n      dup3\n        /* \"#utility.yul\":5430:5448   */\n      add\n        /* \"#utility.yul\":5422:5448   */\n      swap1\n      pop\n        /* \"#utility.yul\":5458:5529   */\n      tag_332\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5515:5524   */\n      dup4\n        /* \"#utility.yul\":5511:5528   */\n      add\n        /* \"#utility.yul\":5502:5508   */\n      dup5\n        /* \"#utility.yul\":5458:5529   */\n      tag_265\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5314:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:6016   */\n    tag_84:\n        /* \"#utility.yul\":5610:5616   */\n      0x00\n        /* \"#utility.yul\":5618:5624   */\n      dup1\n        /* \"#utility.yul\":5667:5669   */\n      0x40\n        /* \"#utility.yul\":5655:5664   */\n      dup4\n        /* \"#utility.yul\":5646:5653   */\n      dup6\n        /* \"#utility.yul\":5642:5665   */\n      sub\n        /* \"#utility.yul\":5638:5670   */\n      slt\n        /* \"#utility.yul\":5635:5754   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":5673:5752   */\n      tag_335\n      tag_251\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5635:5754   */\n    tag_334:\n        /* \"#utility.yul\":5793:5794   */\n      0x00\n        /* \"#utility.yul\":5818:5871   */\n      tag_336\n        /* \"#utility.yul\":5863:5870   */\n      dup6\n        /* \"#utility.yul\":5854:5860   */\n      dup3\n        /* \"#utility.yul\":5843:5852   */\n      dup7\n        /* \"#utility.yul\":5839:5861   */\n      add\n        /* \"#utility.yul\":5818:5871   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5808:5871   */\n      swap3\n      pop\n        /* \"#utility.yul\":5764:5881   */\n      pop\n        /* \"#utility.yul\":5920:5922   */\n      0x20\n        /* \"#utility.yul\":5946:5999   */\n      tag_337\n        /* \"#utility.yul\":5991:5998   */\n      dup6\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5971:5980   */\n      dup7\n        /* \"#utility.yul\":5967:5989   */\n      add\n        /* \"#utility.yul\":5946:5999   */\n      tag_256\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5936:5999   */\n      swap2\n      pop\n        /* \"#utility.yul\":5891:6009   */\n      pop\n        /* \"#utility.yul\":5542:6016   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6202   */\n    tag_266:\n        /* \"#utility.yul\":6070:6147   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6067:6068   */\n      0x00\n        /* \"#utility.yul\":6060:6148   */\n      mstore\n        /* \"#utility.yul\":6167:6171   */\n      0x22\n        /* \"#utility.yul\":6164:6165   */\n      0x04\n        /* \"#utility.yul\":6157:6172   */\n      mstore\n        /* \"#utility.yul\":6191:6195   */\n      0x24\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6181:6196   */\n      revert\n        /* \"#utility.yul\":6208:6528   */\n    tag_95:\n        /* \"#utility.yul\":6252:6258   */\n      0x00\n        /* \"#utility.yul\":6289:6290   */\n      0x02\n        /* \"#utility.yul\":6283:6287   */\n      dup3\n        /* \"#utility.yul\":6279:6291   */\n      div\n        /* \"#utility.yul\":6269:6291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6337   */\n      0x01\n        /* \"#utility.yul\":6330:6334   */\n      dup3\n        /* \"#utility.yul\":6326:6338   */\n      and\n        /* \"#utility.yul\":6357:6375   */\n      dup1\n        /* \"#utility.yul\":6347:6428   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6413:6417   */\n      0x7f\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6401:6418   */\n      and\n        /* \"#utility.yul\":6391:6418   */\n      swap2\n      pop\n        /* \"#utility.yul\":6347:6428   */\n    tag_340:\n        /* \"#utility.yul\":6475:6477   */\n      0x20\n        /* \"#utility.yul\":6467:6473   */\n      dup3\n        /* \"#utility.yul\":6464:6478   */\n      lt\n        /* \"#utility.yul\":6444:6462   */\n      dup2\n        /* \"#utility.yul\":6441:6479   */\n      sub\n        /* \"#utility.yul\":6438:6522   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6494:6512   */\n      tag_342\n      tag_266\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6438:6522   */\n    tag_341:\n        /* \"#utility.yul\":6259:6528   */\n      pop\n        /* \"#utility.yul\":6208:6528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6534:6976   */\n    tag_169:\n        /* \"#utility.yul\":6683:6687   */\n      0x00\n        /* \"#utility.yul\":6721:6723   */\n      0x60\n        /* \"#utility.yul\":6710:6719   */\n      dup3\n        /* \"#utility.yul\":6706:6724   */\n      add\n        /* \"#utility.yul\":6698:6724   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:6805   */\n      tag_344\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6791:6800   */\n      dup4\n        /* \"#utility.yul\":6787:6804   */\n      add\n        /* \"#utility.yul\":6778:6784   */\n      dup7\n        /* \"#utility.yul\":6734:6805   */\n      tag_265\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6815:6887   */\n      tag_345\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup4\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6859:6865   */\n      dup6\n        /* \"#utility.yul\":6815:6887   */\n      tag_262\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6897:6969   */\n      tag_346\n        /* \"#utility.yul\":6965:6967   */\n      0x40\n        /* \"#utility.yul\":6954:6963   */\n      dup4\n        /* \"#utility.yul\":6950:6968   */\n      add\n        /* \"#utility.yul\":6941:6947   */\n      dup5\n        /* \"#utility.yul\":6897:6969   */\n      tag_262\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6534:6976   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7314   */\n    tag_229:\n        /* \"#utility.yul\":7103:7107   */\n      0x00\n        /* \"#utility.yul\":7141:7143   */\n      0x40\n        /* \"#utility.yul\":7130:7139   */\n      dup3\n        /* \"#utility.yul\":7126:7144   */\n      add\n        /* \"#utility.yul\":7118:7144   */\n      swap1\n      pop\n        /* \"#utility.yul\":7154:7225   */\n      tag_348\n        /* \"#utility.yul\":7222:7223   */\n      0x00\n        /* \"#utility.yul\":7211:7220   */\n      dup4\n        /* \"#utility.yul\":7207:7224   */\n      add\n        /* \"#utility.yul\":7198:7204   */\n      dup6\n        /* \"#utility.yul\":7154:7225   */\n      tag_262\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7235:7307   */\n      tag_349\n        /* \"#utility.yul\":7303:7305   */\n      0x20\n        /* \"#utility.yul\":7292:7301   */\n      dup4\n        /* \"#utility.yul\":7288:7306   */\n      add\n        /* \"#utility.yul\":7279:7285   */\n      dup5\n        /* \"#utility.yul\":7235:7307   */\n      tag_262\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6982:7314   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7320:7500   */\n    tag_267:\n        /* \"#utility.yul\":7368:7445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7365:7366   */\n      0x00\n        /* \"#utility.yul\":7358:7446   */\n      mstore\n        /* \"#utility.yul\":7465:7469   */\n      0x11\n        /* \"#utility.yul\":7462:7463   */\n      0x04\n        /* \"#utility.yul\":7455:7470   */\n      mstore\n        /* \"#utility.yul\":7489:7493   */\n      0x24\n        /* \"#utility.yul\":7486:7487   */\n      0x00\n        /* \"#utility.yul\":7479:7494   */\n      revert\n        /* \"#utility.yul\":7506:7697   */\n    tag_238:\n        /* \"#utility.yul\":7546:7549   */\n      0x00\n        /* \"#utility.yul\":7565:7585   */\n      tag_352\n        /* \"#utility.yul\":7583:7584   */\n      dup3\n        /* \"#utility.yul\":7565:7585   */\n      tag_257\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7560:7585   */\n      swap2\n      pop\n        /* \"#utility.yul\":7599:7619   */\n      tag_353\n        /* \"#utility.yul\":7617:7618   */\n      dup4\n        /* \"#utility.yul\":7599:7619   */\n      tag_257\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7594:7619   */\n      swap3\n      pop\n        /* \"#utility.yul\":7642:7643   */\n      dup3\n        /* \"#utility.yul\":7639:7640   */\n      dup3\n        /* \"#utility.yul\":7635:7644   */\n      add\n        /* \"#utility.yul\":7628:7644   */\n      swap1\n      pop\n        /* \"#utility.yul\":7663:7666   */\n      dup1\n        /* \"#utility.yul\":7660:7661   */\n      dup3\n        /* \"#utility.yul\":7657:7667   */\n      gt\n        /* \"#utility.yul\":7654:7690   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7670:7688   */\n      tag_355\n      tag_267\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7654:7690   */\n    tag_354:\n        /* \"#utility.yul\":7506:7697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207653d840f3fadb299407e8548914e0fb527fbc2ac577b74d87af02d095f56d1a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1100": {
									"entryPoint": null,
									"id": 1100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1235": {
									"entryPoint": null,
									"id": 1235,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_918": {
									"entryPoint": null,
									"id": 918,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 597,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_1137": {
									"entryPoint": 995,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 401,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1009": {
									"entryPoint": 939,
									"id": 1009,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1313": {
									"entryPoint": 733,
									"id": 1313,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1066,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_975": {
									"entryPoint": 755,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cap_927": {
									"entryPoint": 975,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1125": {
									"entryPoint": 1618,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 985,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15617:10",
										"nodeType": "YulBlock",
										"src": "0:15617:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1294:28:10",
													"nodeType": "YulBlock",
													"src": "1294:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1311:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1311:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1314:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1314:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1304:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1304:6:10"
																},
																"nativeSrc": "1304:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1304:12:10"
															},
															"nativeSrc": "1304:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1304:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1205:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1205:117:10"
											},
											{
												"body": {
													"nativeSrc": "1417:28:10",
													"nodeType": "YulBlock",
													"src": "1417:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1434:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1434:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1437:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1427:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:10"
																},
																"nativeSrc": "1427:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1427:12:10"
															},
															"nativeSrc": "1427:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1427:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1328:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1328:117:10"
											},
											{
												"body": {
													"nativeSrc": "1499:54:10",
													"nodeType": "YulBlock",
													"src": "1499:54:10",
													"statements": [
														{
															"nativeSrc": "1509:38:10",
															"nodeType": "YulAssignment",
															"src": "1509:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1527:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1527:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1534:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1534:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:10"
																		},
																		"nativeSrc": "1523:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1543:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1543:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1539:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:10"
																		},
																		"nativeSrc": "1539:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:10"
																},
																"nativeSrc": "1519:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1519:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1509:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1451:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1482:5:10",
														"nodeType": "YulTypedName",
														"src": "1482:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1492:6:10",
														"nodeType": "YulTypedName",
														"src": "1492:6:10",
														"type": ""
													}
												],
												"src": "1451:102:10"
											},
											{
												"body": {
													"nativeSrc": "1587:152:10",
													"nodeType": "YulBlock",
													"src": "1587:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1604:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1607:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1607:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:10"
																},
																"nativeSrc": "1597:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1597:88:10"
															},
															"nativeSrc": "1597:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1597:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1701:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1701:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1704:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1704:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1694:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:10"
																},
																"nativeSrc": "1694:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1694:15:10"
															},
															"nativeSrc": "1694:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1694:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1725:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1725:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1728:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1718:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1718:6:10"
																},
																"nativeSrc": "1718:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1718:15:10"
															},
															"nativeSrc": "1718:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1718:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1559:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1559:180:10"
											},
											{
												"body": {
													"nativeSrc": "1788:238:10",
													"nodeType": "YulBlock",
													"src": "1788:238:10",
													"statements": [
														{
															"nativeSrc": "1798:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1798:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1820:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1820:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1850:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1850:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1828:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1828:21:10"
																		},
																		"nativeSrc": "1828:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1828:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:10"
																},
																"nativeSrc": "1816:40:10",
																"nodeType": "YulFunctionCall",
																"src": "1816:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1802:10:10",
																	"nodeType": "YulTypedName",
																	"src": "1802:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1967:22:10",
																"nodeType": "YulBlock",
																"src": "1967:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1969:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1969:16:10"
																			},
																			"nativeSrc": "1969:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1969:18:10"
																		},
																		"nativeSrc": "1969:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1969:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1910:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1910:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1922:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1907:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1907:2:10"
																		},
																		"nativeSrc": "1907:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1907:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1946:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1946:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1958:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1958:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1943:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1943:2:10"
																		},
																		"nativeSrc": "1943:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1943:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1904:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:10"
																},
																"nativeSrc": "1904:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1904:62:10"
															},
															"nativeSrc": "1901:88:10",
															"nodeType": "YulIf",
															"src": "1901:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2009:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2009:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:10"
																},
																"nativeSrc": "1998:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1998:22:10"
															},
															"nativeSrc": "1998:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1998:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1745:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1774:6:10",
														"nodeType": "YulTypedName",
														"src": "1774:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1782:4:10",
														"nodeType": "YulTypedName",
														"src": "1782:4:10",
														"type": ""
													}
												],
												"src": "1745:281:10"
											},
											{
												"body": {
													"nativeSrc": "2073:88:10",
													"nodeType": "YulBlock",
													"src": "2073:88:10",
													"statements": [
														{
															"nativeSrc": "2083:30:10",
															"nodeType": "YulAssignment",
															"src": "2083:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2093:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2093:18:10"
																},
																"nativeSrc": "2093:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2093:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2083:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2142:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2142:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2150:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2150:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2122:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "2122:19:10"
																},
																"nativeSrc": "2122:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2122:33:10"
															},
															"nativeSrc": "2122:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2122:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2032:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2057:4:10",
														"nodeType": "YulTypedName",
														"src": "2057:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2066:6:10",
														"nodeType": "YulTypedName",
														"src": "2066:6:10",
														"type": ""
													}
												],
												"src": "2032:129:10"
											},
											{
												"body": {
													"nativeSrc": "2234:241:10",
													"nodeType": "YulBlock",
													"src": "2234:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2339:22:10",
																"nodeType": "YulBlock",
																"src": "2339:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2341:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2341:16:10"
																			},
																			"nativeSrc": "2341:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2341:18:10"
																		},
																		"nativeSrc": "2341:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2341:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2311:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2311:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2319:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2319:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2308:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:10"
																},
																"nativeSrc": "2308:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2308:30:10"
															},
															"nativeSrc": "2305:56:10",
															"nodeType": "YulIf",
															"src": "2305:56:10"
														},
														{
															"nativeSrc": "2371:37:10",
															"nodeType": "YulAssignment",
															"src": "2371:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2401:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2379:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "2379:21:10"
																},
																"nativeSrc": "2379:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2379:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2371:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2371:4:10"
																}
															]
														},
														{
															"nativeSrc": "2445:23:10",
															"nodeType": "YulAssignment",
															"src": "2445:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2457:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2457:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2453:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:10"
																},
																"nativeSrc": "2453:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2453:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2445:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2445:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2167:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2218:6:10",
														"nodeType": "YulTypedName",
														"src": "2218:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2229:4:10",
														"nodeType": "YulTypedName",
														"src": "2229:4:10",
														"type": ""
													}
												],
												"src": "2167:308:10"
											},
											{
												"body": {
													"nativeSrc": "2543:186:10",
													"nodeType": "YulBlock",
													"src": "2543:186:10",
													"statements": [
														{
															"nativeSrc": "2554:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2554:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2563:1:10",
																"nodeType": "YulLiteral",
																"src": "2563:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2558:1:10",
																	"nodeType": "YulTypedName",
																	"src": "2558:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2623:63:10",
																"nodeType": "YulBlock",
																"src": "2623:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2648:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2648:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2653:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "2653:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2644:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2644:3:10"
																					},
																					"nativeSrc": "2644:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2644:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2667:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2667:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2672:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "2672:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2663:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2663:3:10"
																							},
																							"nativeSrc": "2663:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2663:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2657:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2657:5:10"
																					},
																					"nativeSrc": "2657:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2657:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2637:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2637:6:10"
																			},
																			"nativeSrc": "2637:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:39:10"
																		},
																		"nativeSrc": "2637:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2584:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2584:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2587:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2581:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2581:2:10"
																},
																"nativeSrc": "2581:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2581:13:10"
															},
															"nativeSrc": "2573:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2595:19:10",
																"nodeType": "YulBlock",
																"src": "2595:19:10",
																"statements": [
																	{
																		"nativeSrc": "2597:15:10",
																		"nodeType": "YulAssignment",
																		"src": "2597:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2606:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "2606:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2609:2:10",
																					"nodeType": "YulLiteral",
																					"src": "2609:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2602:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2602:3:10"
																			},
																			"nativeSrc": "2602:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2602:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2597:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2597:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2577:3:10",
																"nodeType": "YulBlock",
																"src": "2577:3:10",
																"statements": []
															},
															"src": "2573:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2706:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2706:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2711:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2711:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2702:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:10"
																		},
																		"nativeSrc": "2702:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2720:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2720:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2695:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:10"
																},
																"nativeSrc": "2695:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2695:27:10"
															},
															"nativeSrc": "2695:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2695:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2481:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2525:3:10",
														"nodeType": "YulTypedName",
														"src": "2525:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2530:3:10",
														"nodeType": "YulTypedName",
														"src": "2530:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2535:6:10",
														"nodeType": "YulTypedName",
														"src": "2535:6:10",
														"type": ""
													}
												],
												"src": "2481:248:10"
											},
											{
												"body": {
													"nativeSrc": "2830:339:10",
													"nodeType": "YulBlock",
													"src": "2830:339:10",
													"statements": [
														{
															"nativeSrc": "2840:75:10",
															"nodeType": "YulAssignment",
															"src": "2840:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2907:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2907:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2865:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "2865:41:10"
																		},
																		"nativeSrc": "2865:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2849:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2849:15:10"
																},
																"nativeSrc": "2849:66:10",
																"nodeType": "YulFunctionCall",
																"src": "2849:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2840:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2840:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2931:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2931:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2938:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2938:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2924:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:10"
																},
																"nativeSrc": "2924:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2924:21:10"
															},
															"nativeSrc": "2924:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2924:21:10"
														},
														{
															"nativeSrc": "2954:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2954:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2969:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2976:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2976:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2965:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:10"
																},
																"nativeSrc": "2965:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2965:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2958:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2958:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3019:83:10",
																"nodeType": "YulBlock",
																"src": "3019:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3021:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3021:77:10"
																			},
																			"nativeSrc": "3021:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3021:79:10"
																		},
																		"nativeSrc": "3021:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3021:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3000:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3000:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3005:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3005:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:10"
																		},
																		"nativeSrc": "2996:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3014:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3014:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2993:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:2:10"
																},
																"nativeSrc": "2993:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2993:25:10"
															},
															"nativeSrc": "2990:112:10",
															"nodeType": "YulIf",
															"src": "2990:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3146:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3146:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3151:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3156:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3111:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "3111:34:10"
																},
																"nativeSrc": "3111:52:10",
																"nodeType": "YulFunctionCall",
																"src": "3111:52:10"
															},
															"nativeSrc": "3111:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "3111:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2735:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2803:3:10",
														"nodeType": "YulTypedName",
														"src": "2803:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2808:6:10",
														"nodeType": "YulTypedName",
														"src": "2808:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2816:3:10",
														"nodeType": "YulTypedName",
														"src": "2816:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2824:5:10",
														"nodeType": "YulTypedName",
														"src": "2824:5:10",
														"type": ""
													}
												],
												"src": "2735:434:10"
											},
											{
												"body": {
													"nativeSrc": "3262:282:10",
													"nodeType": "YulBlock",
													"src": "3262:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3311:83:10",
																"nodeType": "YulBlock",
																"src": "3311:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3313:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3313:77:10"
																			},
																			"nativeSrc": "3313:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3313:79:10"
																		},
																		"nativeSrc": "3313:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3290:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3290:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3298:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3298:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3286:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3286:3:10"
																				},
																				"nativeSrc": "3286:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3286:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3305:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3305:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3282:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:10"
																		},
																		"nativeSrc": "3282:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3275:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:10"
																},
																"nativeSrc": "3275:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3275:35:10"
															},
															"nativeSrc": "3272:122:10",
															"nodeType": "YulIf",
															"src": "3272:122:10"
														},
														{
															"nativeSrc": "3403:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3403:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3423:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3423:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3417:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3417:5:10"
																},
																"nativeSrc": "3417:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3417:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3407:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3407:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3439:99:10",
															"nodeType": "YulAssignment",
															"src": "3439:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3511:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3519:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3519:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3507:3:10"
																		},
																		"nativeSrc": "3507:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3507:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3526:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3534:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3534:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3448:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3448:58:10"
																},
																"nativeSrc": "3448:90:10",
																"nodeType": "YulFunctionCall",
																"src": "3448:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3439:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3439:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3189:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3240:6:10",
														"nodeType": "YulTypedName",
														"src": "3240:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3248:3:10",
														"nodeType": "YulTypedName",
														"src": "3248:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3256:5:10",
														"nodeType": "YulTypedName",
														"src": "3256:5:10",
														"type": ""
													}
												],
												"src": "3189:355:10"
											},
											{
												"body": {
													"nativeSrc": "3593:43:10",
													"nodeType": "YulBlock",
													"src": "3593:43:10",
													"statements": [
														{
															"nativeSrc": "3603:27:10",
															"nodeType": "YulAssignment",
															"src": "3603:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3618:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3618:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3625:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3625:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3614:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:10"
																},
																"nativeSrc": "3614:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3614:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3550:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:10",
														"nodeType": "YulTypedName",
														"src": "3575:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:10",
														"nodeType": "YulTypedName",
														"src": "3585:7:10",
														"type": ""
													}
												],
												"src": "3550:86:10"
											},
											{
												"body": {
													"nativeSrc": "3683:77:10",
													"nodeType": "YulBlock",
													"src": "3683:77:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3738:16:10",
																"nodeType": "YulBlock",
																"src": "3738:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3747:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3747:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3750:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3750:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3740:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:10"
																			},
																			"nativeSrc": "3740:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3740:12:10"
																		},
																		"nativeSrc": "3740:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3706:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3706:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3729:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3729:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "3713:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "3713:15:10"
																				},
																				"nativeSrc": "3713:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3703:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3703:2:10"
																		},
																		"nativeSrc": "3703:33:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3696:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:10"
																},
																"nativeSrc": "3696:41:10",
																"nodeType": "YulFunctionCall",
																"src": "3696:41:10"
															},
															"nativeSrc": "3693:61:10",
															"nodeType": "YulIf",
															"src": "3693:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "3642:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3676:5:10",
														"nodeType": "YulTypedName",
														"src": "3676:5:10",
														"type": ""
													}
												],
												"src": "3642:118:10"
											},
											{
												"body": {
													"nativeSrc": "3827:78:10",
													"nodeType": "YulBlock",
													"src": "3827:78:10",
													"statements": [
														{
															"nativeSrc": "3837:22:10",
															"nodeType": "YulAssignment",
															"src": "3837:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3852:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3852:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3846:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3846:5:10"
																},
																"nativeSrc": "3846:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3846:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3837:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3837:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3893:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3893:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "3868:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3868:24:10"
																},
																"nativeSrc": "3868:31:10",
																"nodeType": "YulFunctionCall",
																"src": "3868:31:10"
															},
															"nativeSrc": "3868:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "3868:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "3766:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3805:6:10",
														"nodeType": "YulTypedName",
														"src": "3805:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3813:3:10",
														"nodeType": "YulTypedName",
														"src": "3813:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3821:5:10",
														"nodeType": "YulTypedName",
														"src": "3821:5:10",
														"type": ""
													}
												],
												"src": "3766:139:10"
											},
											{
												"body": {
													"nativeSrc": "4091:1296:10",
													"nodeType": "YulBlock",
													"src": "4091:1296:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4138:83:10",
																"nodeType": "YulBlock",
																"src": "4138:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4140:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4140:77:10"
																			},
																			"nativeSrc": "4140:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4140:79:10"
																		},
																		"nativeSrc": "4140:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4140:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4112:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4112:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4121:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4108:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:10"
																		},
																		"nativeSrc": "4108:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4133:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4104:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4104:3:10"
																},
																"nativeSrc": "4104:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4104:33:10"
															},
															"nativeSrc": "4101:120:10",
															"nodeType": "YulIf",
															"src": "4101:120:10"
														},
														{
															"nativeSrc": "4231:128:10",
															"nodeType": "YulBlock",
															"src": "4231:128:10",
															"statements": [
																{
																	"nativeSrc": "4246:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4260:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4275:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4275:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4321:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4321:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4332:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4332:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4317:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4317:3:10"
																				},
																				"nativeSrc": "4317:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4317:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4341:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4341:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4285:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4285:31:10"
																		},
																		"nativeSrc": "4285:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4275:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4275:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4369:129:10",
															"nodeType": "YulBlock",
															"src": "4369:129:10",
															"statements": [
																{
																	"nativeSrc": "4384:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4384:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4398:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4388:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4388:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4414:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4414:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4460:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4460:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4471:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4471:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4456:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4456:3:10"
																				},
																				"nativeSrc": "4456:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4456:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4480:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4480:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4424:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4424:31:10"
																		},
																		"nativeSrc": "4424:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4424:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4414:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4414:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4508:292:10",
															"nodeType": "YulBlock",
															"src": "4508:292:10",
															"statements": [
																{
																	"nativeSrc": "4523:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4523:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4547:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4547:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4558:2:10",
																						"nodeType": "YulLiteral",
																						"src": "4558:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4543:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4543:3:10"
																				},
																				"nativeSrc": "4543:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4543:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4537:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4537:5:10"
																		},
																		"nativeSrc": "4537:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4537:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4527:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4527:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4609:83:10",
																		"nodeType": "YulBlock",
																		"src": "4609:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4611:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "4611:77:10"
																					},
																					"nativeSrc": "4611:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4611:79:10"
																				},
																				"nativeSrc": "4611:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4611:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4581:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4589:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4589:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4578:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4578:2:10"
																		},
																		"nativeSrc": "4578:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4578:30:10"
																	},
																	"nativeSrc": "4575:117:10",
																	"nodeType": "YulIf",
																	"src": "4575:117:10"
																},
																{
																	"nativeSrc": "4706:84:10",
																	"nodeType": "YulAssignment",
																	"src": "4706:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4762:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4762:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4773:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4773:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4758:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4758:3:10"
																				},
																				"nativeSrc": "4758:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4758:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4782:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4782:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4716:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "4716:41:10"
																		},
																		"nativeSrc": "4716:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4716:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4706:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4706:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4810:292:10",
															"nodeType": "YulBlock",
															"src": "4810:292:10",
															"statements": [
																{
																	"nativeSrc": "4825:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4825:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4849:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4849:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4860:2:10",
																						"nodeType": "YulLiteral",
																						"src": "4860:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4845:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4845:3:10"
																				},
																				"nativeSrc": "4845:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4845:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4839:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4839:5:10"
																		},
																		"nativeSrc": "4839:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4839:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4829:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4829:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4911:83:10",
																		"nodeType": "YulBlock",
																		"src": "4911:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4913:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "4913:77:10"
																					},
																					"nativeSrc": "4913:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4913:79:10"
																				},
																				"nativeSrc": "4913:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4913:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4883:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4883:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4891:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4891:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4880:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4880:2:10"
																		},
																		"nativeSrc": "4880:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4880:30:10"
																	},
																	"nativeSrc": "4877:117:10",
																	"nodeType": "YulIf",
																	"src": "4877:117:10"
																},
																{
																	"nativeSrc": "5008:84:10",
																	"nodeType": "YulAssignment",
																	"src": "5008:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5064:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5064:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5075:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5075:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5060:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5060:3:10"
																				},
																				"nativeSrc": "5060:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5060:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5084:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5084:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "5018:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "5018:41:10"
																		},
																		"nativeSrc": "5018:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5008:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5008:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5112:128:10",
															"nodeType": "YulBlock",
															"src": "5112:128:10",
															"statements": [
																{
																	"nativeSrc": "5127:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5127:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5141:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5141:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5131:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5131:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5158:72:10",
																	"nodeType": "YulAssignment",
																	"src": "5158:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5202:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5213:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5213:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5198:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:10"
																				},
																				"nativeSrc": "5198:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5198:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5222:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5222:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "5168:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "5168:29:10"
																		},
																		"nativeSrc": "5168:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5158:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5158:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5250:130:10",
															"nodeType": "YulBlock",
															"src": "5250:130:10",
															"statements": [
																{
																	"nativeSrc": "5265:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5265:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5279:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5279:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5269:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5269:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5296:74:10",
																	"nodeType": "YulAssignment",
																	"src": "5296:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5342:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5342:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5353:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5353:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5338:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5338:3:10"
																				},
																				"nativeSrc": "5338:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5338:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5362:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5362:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5306:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "5306:31:10"
																		},
																		"nativeSrc": "5306:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5306:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5296:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5296:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
												"nativeSrc": "3911:1476:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4021:9:10",
														"nodeType": "YulTypedName",
														"src": "4021:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4032:7:10",
														"nodeType": "YulTypedName",
														"src": "4032:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4044:6:10",
														"nodeType": "YulTypedName",
														"src": "4044:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4052:6:10",
														"nodeType": "YulTypedName",
														"src": "4052:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4060:6:10",
														"nodeType": "YulTypedName",
														"src": "4060:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4068:6:10",
														"nodeType": "YulTypedName",
														"src": "4068:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4076:6:10",
														"nodeType": "YulTypedName",
														"src": "4076:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4084:6:10",
														"nodeType": "YulTypedName",
														"src": "4084:6:10",
														"type": ""
													}
												],
												"src": "3911:1476:10"
											},
											{
												"body": {
													"nativeSrc": "5421:152:10",
													"nodeType": "YulBlock",
													"src": "5421:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5438:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5438:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5441:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5441:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5431:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:10"
																},
																"nativeSrc": "5431:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5431:88:10"
															},
															"nativeSrc": "5431:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5431:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5535:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5535:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5538:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5538:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5528:6:10"
																},
																"nativeSrc": "5528:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5528:15:10"
															},
															"nativeSrc": "5528:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5528:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5559:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5559:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5562:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5562:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:10"
																},
																"nativeSrc": "5552:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5552:15:10"
															},
															"nativeSrc": "5552:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5552:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5393:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5393:180:10"
											},
											{
												"body": {
													"nativeSrc": "5630:51:10",
													"nodeType": "YulBlock",
													"src": "5630:51:10",
													"statements": [
														{
															"nativeSrc": "5640:34:10",
															"nodeType": "YulAssignment",
															"src": "5640:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5665:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5665:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5668:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5668:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5661:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:10"
																},
																"nativeSrc": "5661:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5661:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5640:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5640:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5579:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5611:5:10",
														"nodeType": "YulTypedName",
														"src": "5611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5621:8:10",
														"nodeType": "YulTypedName",
														"src": "5621:8:10",
														"type": ""
													}
												],
												"src": "5579:102:10"
											},
											{
												"body": {
													"nativeSrc": "5760:775:10",
													"nodeType": "YulBlock",
													"src": "5760:775:10",
													"statements": [
														{
															"nativeSrc": "5770:15:10",
															"nodeType": "YulAssignment",
															"src": "5770:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "5779:6:10",
																"nodeType": "YulIdentifier",
																"src": "5779:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5770:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5770:5:10"
																}
															]
														},
														{
															"nativeSrc": "5794:14:10",
															"nodeType": "YulAssignment",
															"src": "5794:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "5803:5:10",
																"nodeType": "YulIdentifier",
																"src": "5803:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5794:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5852:677:10",
																"nodeType": "YulBlock",
																"src": "5852:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5940:22:10",
																			"nodeType": "YulBlock",
																			"src": "5940:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5942:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "5942:16:10"
																						},
																						"nativeSrc": "5942:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5942:18:10"
																					},
																					"nativeSrc": "5942:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "5942:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5918:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "5918:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5928:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5928:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5933:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5933:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5924:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5924:3:10"
																					},
																					"nativeSrc": "5924:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5924:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5915:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "5915:2:10"
																			},
																			"nativeSrc": "5915:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:24:10"
																		},
																		"nativeSrc": "5912:50:10",
																		"nodeType": "YulIf",
																		"src": "5912:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "6007:419:10",
																			"nodeType": "YulBlock",
																			"src": "6007:419:10",
																			"statements": [
																				{
																					"nativeSrc": "6387:25:10",
																					"nodeType": "YulAssignment",
																					"src": "6387:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6400:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "6400:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6407:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6407:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6396:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6396:3:10"
																						},
																						"nativeSrc": "6396:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6396:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6387:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "6387:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5982:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "5982:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5992:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5992:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5978:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5978:3:10"
																			},
																			"nativeSrc": "5978:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5978:16:10"
																		},
																		"nativeSrc": "5975:451:10",
																		"nodeType": "YulIf",
																		"src": "5975:451:10"
																	},
																	{
																		"nativeSrc": "6439:23:10",
																		"nodeType": "YulAssignment",
																		"src": "6439:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6451:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6451:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6457:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6457:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6447:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6447:3:10"
																			},
																			"nativeSrc": "6447:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6447:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6439:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6439:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6475:44:10",
																		"nodeType": "YulAssignment",
																		"src": "6475:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6510:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6510:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6487:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "6487:22:10"
																			},
																			"nativeSrc": "6487:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6487:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6475:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "6475:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5828:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5828:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5838:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5825:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:10"
																},
																"nativeSrc": "5825:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5825:15:10"
															},
															"nativeSrc": "5817:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5841:2:10",
																"nodeType": "YulBlock",
																"src": "5841:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5821:3:10",
																"nodeType": "YulBlock",
																"src": "5821:3:10",
																"statements": []
															},
															"src": "5817:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5687:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5715:6:10",
														"nodeType": "YulTypedName",
														"src": "5715:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5723:5:10",
														"nodeType": "YulTypedName",
														"src": "5723:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5730:8:10",
														"nodeType": "YulTypedName",
														"src": "5730:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5740:3:10",
														"nodeType": "YulTypedName",
														"src": "5740:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5748:5:10",
														"nodeType": "YulTypedName",
														"src": "5748:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5755:4:10",
														"nodeType": "YulTypedName",
														"src": "5755:4:10",
														"type": ""
													}
												],
												"src": "5687:848:10"
											},
											{
												"body": {
													"nativeSrc": "6601:1013:10",
													"nodeType": "YulBlock",
													"src": "6601:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6796:20:10",
																"nodeType": "YulBlock",
																"src": "6796:20:10",
																"statements": [
																	{
																		"nativeSrc": "6798:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6798:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6807:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6807:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6798:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6798:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6809:5:10",
																		"nodeType": "YulLeave",
																		"src": "6809:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6786:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "6786:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6779:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:10"
																},
																"nativeSrc": "6779:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6779:16:10"
															},
															"nativeSrc": "6776:40:10",
															"nodeType": "YulIf",
															"src": "6776:40:10"
														},
														{
															"body": {
																"nativeSrc": "6841:20:10",
																"nodeType": "YulBlock",
																"src": "6841:20:10",
																"statements": [
																	{
																		"nativeSrc": "6843:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6843:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6852:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6852:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6843:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6843:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6854:5:10",
																		"nodeType": "YulLeave",
																		"src": "6854:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6835:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6835:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6828:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:10"
																},
																"nativeSrc": "6828:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6828:12:10"
															},
															"nativeSrc": "6825:36:10",
															"nodeType": "YulIf",
															"src": "6825:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6971:20:10",
																		"nodeType": "YulBlock",
																		"src": "6971:20:10",
																		"statements": [
																			{
																				"nativeSrc": "6973:10:10",
																				"nodeType": "YulAssignment",
																				"src": "6973:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6982:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6982:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6973:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6973:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6984:5:10",
																				"nodeType": "YulLeave",
																				"src": "6984:5:10"
																			}
																		]
																	},
																	"nativeSrc": "6964:27:10",
																	"nodeType": "YulCase",
																	"src": "6964:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6969:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6969:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7015:176:10",
																		"nodeType": "YulBlock",
																		"src": "7015:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7050:22:10",
																					"nodeType": "YulBlock",
																					"src": "7050:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7052:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "7052:16:10"
																								},
																								"nativeSrc": "7052:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7052:18:10"
																							},
																							"nativeSrc": "7052:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7052:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7035:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7035:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7045:3:10",
																							"nodeType": "YulLiteral",
																							"src": "7045:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7032:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7032:2:10"
																					},
																					"nativeSrc": "7032:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7032:17:10"
																				},
																				"nativeSrc": "7029:43:10",
																				"nodeType": "YulIf",
																				"src": "7029:43:10"
																			},
																			{
																				"nativeSrc": "7085:25:10",
																				"nodeType": "YulAssignment",
																				"src": "7085:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7098:1:10",
																							"nodeType": "YulLiteral",
																							"src": "7098:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7101:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7101:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7094:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7094:3:10"
																					},
																					"nativeSrc": "7094:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7094:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7085:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7085:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7141:22:10",
																					"nodeType": "YulBlock",
																					"src": "7141:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7143:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "7143:16:10"
																								},
																								"nativeSrc": "7143:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7143:18:10"
																							},
																							"nativeSrc": "7143:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7143:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7129:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "7129:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7136:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7136:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7126:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7126:2:10"
																					},
																					"nativeSrc": "7126:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7126:14:10"
																				},
																				"nativeSrc": "7123:40:10",
																				"nodeType": "YulIf",
																				"src": "7123:40:10"
																			},
																			{
																				"nativeSrc": "7176:5:10",
																				"nodeType": "YulLeave",
																				"src": "7176:5:10"
																			}
																		]
																	},
																	"nativeSrc": "7000:191:10",
																	"nodeType": "YulCase",
																	"src": "7000:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7005:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7005:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6921:4:10",
																"nodeType": "YulIdentifier",
																"src": "6921:4:10"
															},
															"nativeSrc": "6914:277:10",
															"nodeType": "YulSwitch",
															"src": "6914:277:10"
														},
														{
															"body": {
																"nativeSrc": "7323:123:10",
																"nodeType": "YulBlock",
																"src": "7323:123:10",
																"statements": [
																	{
																		"nativeSrc": "7337:28:10",
																		"nodeType": "YulAssignment",
																		"src": "7337:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7350:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7350:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7356:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "7356:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7346:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7346:3:10"
																			},
																			"nativeSrc": "7346:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7346:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7337:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7337:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7396:22:10",
																			"nodeType": "YulBlock",
																			"src": "7396:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7398:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "7398:16:10"
																						},
																						"nativeSrc": "7398:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7398:18:10"
																					},
																					"nativeSrc": "7398:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "7398:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7384:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "7384:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7391:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7391:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7381:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7381:2:10"
																			},
																			"nativeSrc": "7381:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7381:14:10"
																		},
																		"nativeSrc": "7378:40:10",
																		"nodeType": "YulIf",
																		"src": "7378:40:10"
																	},
																	{
																		"nativeSrc": "7431:5:10",
																		"nodeType": "YulLeave",
																		"src": "7431:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7226:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7226:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7232:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7232:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7223:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7223:2:10"
																				},
																				"nativeSrc": "7223:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7223:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7240:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7240:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7250:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7250:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7237:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7237:2:10"
																				},
																				"nativeSrc": "7237:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7237:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7219:3:10"
																		},
																		"nativeSrc": "7219:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7219:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7275:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7275:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7281:3:10",
																						"nodeType": "YulLiteral",
																						"src": "7281:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7272:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7272:2:10"
																				},
																				"nativeSrc": "7272:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7272:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7290:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7290:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7300:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7300:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7287:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7287:2:10"
																				},
																				"nativeSrc": "7287:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7287:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7268:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7268:3:10"
																		},
																		"nativeSrc": "7268:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7268:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7203:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7203:2:10"
																},
																"nativeSrc": "7203:111:10",
																"nodeType": "YulFunctionCall",
																"src": "7203:111:10"
															},
															"nativeSrc": "7200:246:10",
															"nodeType": "YulIf",
															"src": "7200:246:10"
														},
														{
															"nativeSrc": "7456:57:10",
															"nodeType": "YulAssignment",
															"src": "7456:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7490:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7490:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7493:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7493:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7499:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7499:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7509:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7509:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7471:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7471:18:10"
																},
																"nativeSrc": "7471:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7471:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7456:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7456:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "7463:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7463:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7552:22:10",
																"nodeType": "YulBlock",
																"src": "7552:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7554:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7554:16:10"
																			},
																			"nativeSrc": "7554:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7554:18:10"
																		},
																		"nativeSrc": "7554:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7554:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7540:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7540:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7545:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7545:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:10"
																		},
																		"nativeSrc": "7536:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7526:2:10"
																},
																"nativeSrc": "7526:25:10",
																"nodeType": "YulFunctionCall",
																"src": "7526:25:10"
															},
															"nativeSrc": "7523:51:10",
															"nodeType": "YulIf",
															"src": "7523:51:10"
														},
														{
															"nativeSrc": "7583:25:10",
															"nodeType": "YulAssignment",
															"src": "7583:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7596:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7596:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7603:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7603:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7592:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:10"
																},
																"nativeSrc": "7592:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7592:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7583:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7583:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6541:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6571:4:10",
														"nodeType": "YulTypedName",
														"src": "6571:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6577:8:10",
														"nodeType": "YulTypedName",
														"src": "6577:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6587:3:10",
														"nodeType": "YulTypedName",
														"src": "6587:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6595:5:10",
														"nodeType": "YulTypedName",
														"src": "6595:5:10",
														"type": ""
													}
												],
												"src": "6541:1073:10"
											},
											{
												"body": {
													"nativeSrc": "7684:217:10",
													"nodeType": "YulBlock",
													"src": "7684:217:10",
													"statements": [
														{
															"nativeSrc": "7694:31:10",
															"nodeType": "YulAssignment",
															"src": "7694:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7720:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7720:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7702:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7702:17:10"
																},
																"nativeSrc": "7702:23:10",
																"nodeType": "YulFunctionCall",
																"src": "7702:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7694:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7694:4:10"
																}
															]
														},
														{
															"nativeSrc": "7734:37:10",
															"nodeType": "YulAssignment",
															"src": "7734:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7762:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7762:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7746:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "7746:15:10"
																},
																"nativeSrc": "7746:25:10",
																"nodeType": "YulFunctionCall",
																"src": "7746:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7734:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7734:8:10"
																}
															]
														},
														{
															"nativeSrc": "7781:113:10",
															"nodeType": "YulAssignment",
															"src": "7781:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7811:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7811:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7817:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7817:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7827:66:10",
																		"nodeType": "YulLiteral",
																		"src": "7827:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7790:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "7790:20:10"
																},
																"nativeSrc": "7790:104:10",
																"nodeType": "YulFunctionCall",
																"src": "7790:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7781:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7781:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7620:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7659:4:10",
														"nodeType": "YulTypedName",
														"src": "7659:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7665:8:10",
														"nodeType": "YulTypedName",
														"src": "7665:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7678:5:10",
														"nodeType": "YulTypedName",
														"src": "7678:5:10",
														"type": ""
													}
												],
												"src": "7620:281:10"
											},
											{
												"body": {
													"nativeSrc": "7955:362:10",
													"nodeType": "YulBlock",
													"src": "7955:362:10",
													"statements": [
														{
															"nativeSrc": "7965:25:10",
															"nodeType": "YulAssignment",
															"src": "7965:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7988:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7988:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7970:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7970:17:10"
																},
																"nativeSrc": "7970:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7970:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7965:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7965:1:10"
																}
															]
														},
														{
															"nativeSrc": "7999:25:10",
															"nodeType": "YulAssignment",
															"src": "7999:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8022:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8022:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8004:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8004:17:10"
																},
																"nativeSrc": "8004:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8004:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7999:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7999:1:10"
																}
															]
														},
														{
															"nativeSrc": "8033:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8033:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8056:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8056:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8059:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8059:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:10"
																},
																"nativeSrc": "8052:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8052:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8037:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8037:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8070:41:10",
															"nodeType": "YulAssignment",
															"src": "8070:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8099:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8099:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8081:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8081:17:10"
																},
																"nativeSrc": "8081:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8081:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8070:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8070:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8288:22:10",
																"nodeType": "YulBlock",
																"src": "8288:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8290:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8290:16:10"
																			},
																			"nativeSrc": "8290:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8290:18:10"
																		},
																		"nativeSrc": "8290:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8290:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8221:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8221:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8214:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8214:6:10"
																				},
																				"nativeSrc": "8214:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8214:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8244:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8244:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8251:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8251:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8260:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8260:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8247:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8247:3:10"
																						},
																						"nativeSrc": "8247:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8247:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8241:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8241:2:10"
																				},
																				"nativeSrc": "8241:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8241:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8194:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8194:2:10"
																		},
																		"nativeSrc": "8194:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8174:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8174:6:10"
																},
																"nativeSrc": "8174:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8174:113:10"
															},
															"nativeSrc": "8171:139:10",
															"nodeType": "YulIf",
															"src": "8171:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7907:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7938:1:10",
														"nodeType": "YulTypedName",
														"src": "7938:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7941:1:10",
														"nodeType": "YulTypedName",
														"src": "7941:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7947:7:10",
														"nodeType": "YulTypedName",
														"src": "7947:7:10",
														"type": ""
													}
												],
												"src": "7907:410:10"
											},
											{
												"body": {
													"nativeSrc": "8388:53:10",
													"nodeType": "YulBlock",
													"src": "8388:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8405:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8405:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8428:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8428:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8410:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8410:17:10"
																		},
																		"nativeSrc": "8410:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8410:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8398:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:10"
																},
																"nativeSrc": "8398:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8398:37:10"
															},
															"nativeSrc": "8398:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8398:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8323:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8376:5:10",
														"nodeType": "YulTypedName",
														"src": "8376:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8383:3:10",
														"nodeType": "YulTypedName",
														"src": "8383:3:10",
														"type": ""
													}
												],
												"src": "8323:118:10"
											},
											{
												"body": {
													"nativeSrc": "8545:124:10",
													"nodeType": "YulBlock",
													"src": "8545:124:10",
													"statements": [
														{
															"nativeSrc": "8555:26:10",
															"nodeType": "YulAssignment",
															"src": "8555:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8567:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8567:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:10"
																},
																"nativeSrc": "8563:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8563:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8555:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8635:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8648:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8648:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8659:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8659:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8644:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8644:3:10"
																		},
																		"nativeSrc": "8644:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8644:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8591:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8591:43:10"
																},
																"nativeSrc": "8591:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8591:71:10"
															},
															"nativeSrc": "8591:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8591:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8447:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8517:9:10",
														"nodeType": "YulTypedName",
														"src": "8517:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8529:6:10",
														"nodeType": "YulTypedName",
														"src": "8529:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8540:4:10",
														"nodeType": "YulTypedName",
														"src": "8540:4:10",
														"type": ""
													}
												],
												"src": "8447:222:10"
											},
											{
												"body": {
													"nativeSrc": "8734:40:10",
													"nodeType": "YulBlock",
													"src": "8734:40:10",
													"statements": [
														{
															"nativeSrc": "8745:22:10",
															"nodeType": "YulAssignment",
															"src": "8745:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8761:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8761:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8755:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8755:5:10"
																},
																"nativeSrc": "8755:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8755:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8745:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "8675:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8717:5:10",
														"nodeType": "YulTypedName",
														"src": "8717:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8727:6:10",
														"nodeType": "YulTypedName",
														"src": "8727:6:10",
														"type": ""
													}
												],
												"src": "8675:99:10"
											},
											{
												"body": {
													"nativeSrc": "8808:152:10",
													"nodeType": "YulBlock",
													"src": "8808:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8825:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8825:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8828:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8828:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8818:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:10"
																},
																"nativeSrc": "8818:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8818:88:10"
															},
															"nativeSrc": "8818:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8818:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8922:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8922:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8925:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8925:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:10"
																},
																"nativeSrc": "8915:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8915:15:10"
															},
															"nativeSrc": "8915:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8915:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8946:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8946:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8949:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8949:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8939:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:10"
																},
																"nativeSrc": "8939:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8939:15:10"
															},
															"nativeSrc": "8939:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8939:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8780:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8780:180:10"
											},
											{
												"body": {
													"nativeSrc": "9017:269:10",
													"nodeType": "YulBlock",
													"src": "9017:269:10",
													"statements": [
														{
															"nativeSrc": "9027:22:10",
															"nodeType": "YulAssignment",
															"src": "9027:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9041:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9041:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9047:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9047:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9037:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9037:3:10"
																},
																"nativeSrc": "9037:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9037:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9027:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9027:6:10"
																}
															]
														},
														{
															"nativeSrc": "9058:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9058:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9088:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9088:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9094:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9094:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:10"
																},
																"nativeSrc": "9084:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9084:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9062:18:10",
																	"nodeType": "YulTypedName",
																	"src": "9062:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9135:51:10",
																"nodeType": "YulBlock",
																"src": "9135:51:10",
																"statements": [
																	{
																		"nativeSrc": "9149:27:10",
																		"nodeType": "YulAssignment",
																		"src": "9149:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9163:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9163:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9171:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9171:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9159:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9159:3:10"
																			},
																			"nativeSrc": "9159:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9159:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9149:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9149:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9115:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9115:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9108:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:10"
																},
																"nativeSrc": "9108:26:10",
																"nodeType": "YulFunctionCall",
																"src": "9108:26:10"
															},
															"nativeSrc": "9105:81:10",
															"nodeType": "YulIf",
															"src": "9105:81:10"
														},
														{
															"body": {
																"nativeSrc": "9238:42:10",
																"nodeType": "YulBlock",
																"src": "9238:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9252:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9252:16:10"
																			},
																			"nativeSrc": "9252:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9252:18:10"
																		},
																		"nativeSrc": "9252:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9252:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9202:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9202:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9225:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9225:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9233:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9233:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9222:2:10"
																		},
																		"nativeSrc": "9222:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9222:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9199:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9199:2:10"
																},
																"nativeSrc": "9199:38:10",
																"nodeType": "YulFunctionCall",
																"src": "9199:38:10"
															},
															"nativeSrc": "9196:84:10",
															"nodeType": "YulIf",
															"src": "9196:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8966:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9001:4:10",
														"nodeType": "YulTypedName",
														"src": "9001:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9010:6:10",
														"nodeType": "YulTypedName",
														"src": "9010:6:10",
														"type": ""
													}
												],
												"src": "8966:320:10"
											},
											{
												"body": {
													"nativeSrc": "9346:87:10",
													"nodeType": "YulBlock",
													"src": "9346:87:10",
													"statements": [
														{
															"nativeSrc": "9356:11:10",
															"nodeType": "YulAssignment",
															"src": "9356:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "9364:3:10",
																"nodeType": "YulIdentifier",
																"src": "9364:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9356:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9356:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9384:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9384:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9387:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9377:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:10"
																},
																"nativeSrc": "9377:14:10",
																"nodeType": "YulFunctionCall",
																"src": "9377:14:10"
															},
															"nativeSrc": "9377:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "9377:14:10"
														},
														{
															"nativeSrc": "9400:26:10",
															"nodeType": "YulAssignment",
															"src": "9400:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9418:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9418:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9421:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9421:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9408:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9408:9:10"
																},
																"nativeSrc": "9408:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9408:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9400:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9400:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "9292:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9333:3:10",
														"nodeType": "YulTypedName",
														"src": "9333:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9341:4:10",
														"nodeType": "YulTypedName",
														"src": "9341:4:10",
														"type": ""
													}
												],
												"src": "9292:141:10"
											},
											{
												"body": {
													"nativeSrc": "9483:49:10",
													"nodeType": "YulBlock",
													"src": "9483:49:10",
													"statements": [
														{
															"nativeSrc": "9493:33:10",
															"nodeType": "YulAssignment",
															"src": "9493:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9511:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9511:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9518:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9518:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9507:3:10"
																		},
																		"nativeSrc": "9507:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9507:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9523:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:10"
																},
																"nativeSrc": "9503:23:10",
																"nodeType": "YulFunctionCall",
																"src": "9503:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "9439:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9466:5:10",
														"nodeType": "YulTypedName",
														"src": "9466:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9476:6:10",
														"nodeType": "YulTypedName",
														"src": "9476:6:10",
														"type": ""
													}
												],
												"src": "9439:93:10"
											},
											{
												"body": {
													"nativeSrc": "9591:54:10",
													"nodeType": "YulBlock",
													"src": "9591:54:10",
													"statements": [
														{
															"nativeSrc": "9601:37:10",
															"nodeType": "YulAssignment",
															"src": "9601:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "9626:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9626:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9632:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9632:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "9622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9622:3:10"
																},
																"nativeSrc": "9622:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9622:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9601:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "9601:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "9538:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "9566:4:10",
														"nodeType": "YulTypedName",
														"src": "9566:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "9572:5:10",
														"nodeType": "YulTypedName",
														"src": "9572:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9582:8:10",
														"nodeType": "YulTypedName",
														"src": "9582:8:10",
														"type": ""
													}
												],
												"src": "9538:107:10"
											},
											{
												"body": {
													"nativeSrc": "9727:317:10",
													"nodeType": "YulBlock",
													"src": "9727:317:10",
													"statements": [
														{
															"nativeSrc": "9737:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9737:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "9758:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "9758:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9770:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9770:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9754:3:10"
																},
																"nativeSrc": "9754:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9754:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "9741:9:10",
																	"nodeType": "YulTypedName",
																	"src": "9741:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9781:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9781:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "9812:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9812:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9823:66:10",
																		"nodeType": "YulLiteral",
																		"src": "9823:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "9793:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "9793:18:10"
																},
																"nativeSrc": "9793:97:10",
																"nodeType": "YulFunctionCall",
																"src": "9793:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "9785:4:10",
																	"nodeType": "YulTypedName",
																	"src": "9785:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9899:51:10",
															"nodeType": "YulAssignment",
															"src": "9899:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "9930:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9930:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "9941:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "9941:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "9911:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "9911:18:10"
																},
																"nativeSrc": "9911:39:10",
																"nodeType": "YulFunctionCall",
																"src": "9911:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "9899:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "9899:8:10"
																}
															]
														},
														{
															"nativeSrc": "9959:30:10",
															"nodeType": "YulAssignment",
															"src": "9959:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9972:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9972:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "9983:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9983:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9979:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:10"
																		},
																		"nativeSrc": "9979:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9979:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9968:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:10"
																},
																"nativeSrc": "9968:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9968:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9959:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9959:5:10"
																}
															]
														},
														{
															"nativeSrc": "9998:40:10",
															"nodeType": "YulAssignment",
															"src": "9998:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10011:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10011:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "10022:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "10022:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "10032:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10032:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10018:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10018:3:10"
																		},
																		"nativeSrc": "10018:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10018:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10008:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10008:2:10"
																},
																"nativeSrc": "10008:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10008:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9998:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9998:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "9651:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9688:5:10",
														"nodeType": "YulTypedName",
														"src": "9688:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "9695:10:10",
														"nodeType": "YulTypedName",
														"src": "9695:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "9707:8:10",
														"nodeType": "YulTypedName",
														"src": "9707:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9720:6:10",
														"nodeType": "YulTypedName",
														"src": "9720:6:10",
														"type": ""
													}
												],
												"src": "9651:393:10"
											},
											{
												"body": {
													"nativeSrc": "10082:28:10",
													"nodeType": "YulBlock",
													"src": "10082:28:10",
													"statements": [
														{
															"nativeSrc": "10092:12:10",
															"nodeType": "YulAssignment",
															"src": "10092:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "10099:5:10",
																"nodeType": "YulIdentifier",
																"src": "10099:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10092:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10050:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10068:5:10",
														"nodeType": "YulTypedName",
														"src": "10068:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10078:3:10",
														"nodeType": "YulTypedName",
														"src": "10078:3:10",
														"type": ""
													}
												],
												"src": "10050:60:10"
											},
											{
												"body": {
													"nativeSrc": "10176:82:10",
													"nodeType": "YulBlock",
													"src": "10176:82:10",
													"statements": [
														{
															"nativeSrc": "10186:66:10",
															"nodeType": "YulAssignment",
															"src": "10186:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10244:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10244:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10226:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "10226:17:10"
																				},
																				"nativeSrc": "10226:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10226:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10217:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "10217:8:10"
																		},
																		"nativeSrc": "10217:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10217:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10199:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10199:17:10"
																},
																"nativeSrc": "10199:53:10",
																"nodeType": "YulFunctionCall",
																"src": "10199:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10186:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "10186:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "10116:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10156:5:10",
														"nodeType": "YulTypedName",
														"src": "10156:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10166:9:10",
														"nodeType": "YulTypedName",
														"src": "10166:9:10",
														"type": ""
													}
												],
												"src": "10116:142:10"
											},
											{
												"body": {
													"nativeSrc": "10311:28:10",
													"nodeType": "YulBlock",
													"src": "10311:28:10",
													"statements": [
														{
															"nativeSrc": "10321:12:10",
															"nodeType": "YulAssignment",
															"src": "10321:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "10328:5:10",
																"nodeType": "YulIdentifier",
																"src": "10328:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10321:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10321:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "10264:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10297:5:10",
														"nodeType": "YulTypedName",
														"src": "10297:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10307:3:10",
														"nodeType": "YulTypedName",
														"src": "10307:3:10",
														"type": ""
													}
												],
												"src": "10264:75:10"
											},
											{
												"body": {
													"nativeSrc": "10421:193:10",
													"nodeType": "YulBlock",
													"src": "10421:193:10",
													"statements": [
														{
															"nativeSrc": "10431:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10431:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "10486:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "10486:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "10455:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "10455:30:10"
																},
																"nativeSrc": "10455:39:10",
																"nodeType": "YulFunctionCall",
																"src": "10455:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "10435:16:10",
																	"nodeType": "YulTypedName",
																	"src": "10435:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10510:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10510:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "10550:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "10550:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10544:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "10544:5:10"
																				},
																				"nativeSrc": "10544:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10544:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "10557:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10557:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "10589:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "10589:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "10565:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "10565:23:10"
																				},
																				"nativeSrc": "10565:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10565:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "10516:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "10516:27:10"
																		},
																		"nativeSrc": "10516:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10516:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10503:6:10"
																},
																"nativeSrc": "10503:105:10",
																"nodeType": "YulFunctionCall",
																"src": "10503:105:10"
															},
															"nativeSrc": "10503:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "10503:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "10345:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10398:4:10",
														"nodeType": "YulTypedName",
														"src": "10398:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10404:6:10",
														"nodeType": "YulTypedName",
														"src": "10404:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "10412:7:10",
														"nodeType": "YulTypedName",
														"src": "10412:7:10",
														"type": ""
													}
												],
												"src": "10345:269:10"
											},
											{
												"body": {
													"nativeSrc": "10669:24:10",
													"nodeType": "YulBlock",
													"src": "10669:24:10",
													"statements": [
														{
															"nativeSrc": "10679:8:10",
															"nodeType": "YulAssignment",
															"src": "10679:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "10686:1:10",
																"nodeType": "YulLiteral",
																"src": "10686:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10679:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10679:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "10620:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10665:3:10",
														"nodeType": "YulTypedName",
														"src": "10665:3:10",
														"type": ""
													}
												],
												"src": "10620:73:10"
											},
											{
												"body": {
													"nativeSrc": "10752:136:10",
													"nodeType": "YulBlock",
													"src": "10752:136:10",
													"statements": [
														{
															"nativeSrc": "10762:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10762:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "10776:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "10776:30:10"
																},
																"nativeSrc": "10776:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10776:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "10766:6:10",
																	"nodeType": "YulTypedName",
																	"src": "10766:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10861:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10861:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "10867:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10867:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "10875:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10875:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "10817:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10817:43:10"
																},
																"nativeSrc": "10817:65:10",
																"nodeType": "YulFunctionCall",
																"src": "10817:65:10"
															},
															"nativeSrc": "10817:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "10817:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "10699:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10738:4:10",
														"nodeType": "YulTypedName",
														"src": "10738:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10744:6:10",
														"nodeType": "YulTypedName",
														"src": "10744:6:10",
														"type": ""
													}
												],
												"src": "10699:189:10"
											},
											{
												"body": {
													"nativeSrc": "10944:136:10",
													"nodeType": "YulBlock",
													"src": "10944:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11011:63:10",
																"nodeType": "YulBlock",
																"src": "11011:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11055:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11055:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11062:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11062:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "11025:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "11025:29:10"
																			},
																			"nativeSrc": "11025:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11025:39:10"
																		},
																		"nativeSrc": "11025:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11025:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "10964:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10964:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10971:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10971:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10961:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10961:2:10"
																},
																"nativeSrc": "10961:14:10",
																"nodeType": "YulFunctionCall",
																"src": "10961:14:10"
															},
															"nativeSrc": "10954:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10976:26:10",
																"nodeType": "YulBlock",
																"src": "10976:26:10",
																"statements": [
																	{
																		"nativeSrc": "10978:22:10",
																		"nodeType": "YulAssignment",
																		"src": "10978:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10991:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "10991:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10998:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10998:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10987:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10987:3:10"
																			},
																			"nativeSrc": "10987:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10987:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "10978:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10978:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10958:2:10",
																"nodeType": "YulBlock",
																"src": "10958:2:10",
																"statements": []
															},
															"src": "10954:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "10894:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "10932:5:10",
														"nodeType": "YulTypedName",
														"src": "10932:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10939:3:10",
														"nodeType": "YulTypedName",
														"src": "10939:3:10",
														"type": ""
													}
												],
												"src": "10894:186:10"
											},
											{
												"body": {
													"nativeSrc": "11165:464:10",
													"nodeType": "YulBlock",
													"src": "11165:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11191:431:10",
																"nodeType": "YulBlock",
																"src": "11191:431:10",
																"statements": [
																	{
																		"nativeSrc": "11205:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11205:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "11253:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11253:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "11221:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "11221:31:10"
																			},
																			"nativeSrc": "11221:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11221:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11209:8:10",
																				"nodeType": "YulTypedName",
																				"src": "11209:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11272:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11272:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "11295:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "11295:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "11323:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "11323:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "11305:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "11305:17:10"
																					},
																					"nativeSrc": "11305:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11305:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11291:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11291:3:10"
																			},
																			"nativeSrc": "11291:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11291:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11276:11:10",
																				"nodeType": "YulTypedName",
																				"src": "11276:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11492:27:10",
																			"nodeType": "YulBlock",
																			"src": "11492:27:10",
																			"statements": [
																				{
																					"nativeSrc": "11494:23:10",
																					"nodeType": "YulAssignment",
																					"src": "11494:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "11509:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "11509:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11494:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "11494:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11476:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "11476:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11488:2:10",
																					"nodeType": "YulLiteral",
																					"src": "11488:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11473:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "11473:2:10"
																			},
																			"nativeSrc": "11473:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11473:18:10"
																		},
																		"nativeSrc": "11470:49:10",
																		"nodeType": "YulIf",
																		"src": "11470:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "11561:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "11561:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "11578:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "11578:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11606:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "11606:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "11588:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "11588:17:10"
																							},
																							"nativeSrc": "11588:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "11588:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11574:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "11574:3:10"
																					},
																					"nativeSrc": "11574:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11574:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "11532:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "11532:28:10"
																			},
																			"nativeSrc": "11532:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11532:80:10"
																		},
																		"nativeSrc": "11532:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11532:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11182:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11182:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11187:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11179:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11179:2:10"
																},
																"nativeSrc": "11179:11:10",
																"nodeType": "YulFunctionCall",
																"src": "11179:11:10"
															},
															"nativeSrc": "11176:446:10",
															"nodeType": "YulIf",
															"src": "11176:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "11086:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11141:5:10",
														"nodeType": "YulTypedName",
														"src": "11141:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11148:3:10",
														"nodeType": "YulTypedName",
														"src": "11148:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11153:10:10",
														"nodeType": "YulTypedName",
														"src": "11153:10:10",
														"type": ""
													}
												],
												"src": "11086:543:10"
											},
											{
												"body": {
													"nativeSrc": "11698:54:10",
													"nodeType": "YulBlock",
													"src": "11698:54:10",
													"statements": [
														{
															"nativeSrc": "11708:37:10",
															"nodeType": "YulAssignment",
															"src": "11708:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11733:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11733:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11739:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11739:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11729:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11729:3:10"
																},
																"nativeSrc": "11729:16:10",
																"nodeType": "YulFunctionCall",
																"src": "11729:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11708:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "11708:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "11635:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11673:4:10",
														"nodeType": "YulTypedName",
														"src": "11673:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11679:5:10",
														"nodeType": "YulTypedName",
														"src": "11679:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11689:8:10",
														"nodeType": "YulTypedName",
														"src": "11689:8:10",
														"type": ""
													}
												],
												"src": "11635:117:10"
											},
											{
												"body": {
													"nativeSrc": "11809:118:10",
													"nodeType": "YulBlock",
													"src": "11809:118:10",
													"statements": [
														{
															"nativeSrc": "11819:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11819:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11868:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11868:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "11871:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "11871:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11864:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11864:3:10"
																				},
																				"nativeSrc": "11864:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11864:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11883:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11883:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11879:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11879:3:10"
																				},
																				"nativeSrc": "11879:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11879:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "11835:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "11835:28:10"
																		},
																		"nativeSrc": "11835:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11835:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "11831:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11831:3:10"
																},
																"nativeSrc": "11831:56:10",
																"nodeType": "YulFunctionCall",
																"src": "11831:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11823:4:10",
																	"nodeType": "YulTypedName",
																	"src": "11823:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11896:25:10",
															"nodeType": "YulAssignment",
															"src": "11896:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11910:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11910:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "11916:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11916:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11906:3:10"
																},
																"nativeSrc": "11906:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11906:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11896:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "11758:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11786:4:10",
														"nodeType": "YulTypedName",
														"src": "11786:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "11792:5:10",
														"nodeType": "YulTypedName",
														"src": "11792:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11802:6:10",
														"nodeType": "YulTypedName",
														"src": "11802:6:10",
														"type": ""
													}
												],
												"src": "11758:169:10"
											},
											{
												"body": {
													"nativeSrc": "12013:214:10",
													"nodeType": "YulBlock",
													"src": "12013:214:10",
													"statements": [
														{
															"nativeSrc": "12146:37:10",
															"nodeType": "YulAssignment",
															"src": "12146:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12173:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12173:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12179:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12179:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "12154:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "12154:18:10"
																},
																"nativeSrc": "12154:29:10",
																"nodeType": "YulFunctionCall",
																"src": "12154:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12146:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12146:4:10"
																}
															]
														},
														{
															"nativeSrc": "12192:29:10",
															"nodeType": "YulAssignment",
															"src": "12192:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12203:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12203:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12213:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12213:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12216:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12216:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12209:3:10"
																		},
																		"nativeSrc": "12209:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12209:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12200:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12200:2:10"
																},
																"nativeSrc": "12200:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12200:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12192:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12192:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11932:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11994:4:10",
														"nodeType": "YulTypedName",
														"src": "11994:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12000:3:10",
														"nodeType": "YulTypedName",
														"src": "12000:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12008:4:10",
														"nodeType": "YulTypedName",
														"src": "12008:4:10",
														"type": ""
													}
												],
												"src": "11932:295:10"
											},
											{
												"body": {
													"nativeSrc": "12324:1303:10",
													"nodeType": "YulBlock",
													"src": "12324:1303:10",
													"statements": [
														{
															"nativeSrc": "12335:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12335:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12382:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12382:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12349:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "12349:32:10"
																},
																"nativeSrc": "12349:37:10",
																"nodeType": "YulFunctionCall",
																"src": "12349:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12339:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12339:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12471:22:10",
																"nodeType": "YulBlock",
																"src": "12471:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12473:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12473:16:10"
																			},
																			"nativeSrc": "12473:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12473:18:10"
																		},
																		"nativeSrc": "12473:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12473:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12443:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12443:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12451:18:10",
																		"nodeType": "YulLiteral",
																		"src": "12451:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12440:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12440:2:10"
																},
																"nativeSrc": "12440:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12440:30:10"
															},
															"nativeSrc": "12437:56:10",
															"nodeType": "YulIf",
															"src": "12437:56:10"
														},
														{
															"nativeSrc": "12503:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12503:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12549:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12549:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "12543:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12543:5:10"
																		},
																		"nativeSrc": "12543:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12543:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "12517:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "12517:25:10"
																},
																"nativeSrc": "12517:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12517:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "12507:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12507:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12648:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12648:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "12654:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12654:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12662:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12662:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "12602:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "12602:45:10"
																},
																"nativeSrc": "12602:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12602:67:10"
															},
															"nativeSrc": "12602:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "12602:67:10"
														},
														{
															"nativeSrc": "12679:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12679:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12696:1:10",
																"nodeType": "YulLiteral",
																"src": "12696:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12683:9:10",
																	"nodeType": "YulTypedName",
																	"src": "12683:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12707:17:10",
															"nodeType": "YulAssignment",
															"src": "12707:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12720:4:10",
																"nodeType": "YulLiteral",
																"src": "12720:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12707:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "12707:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12771:611:10",
																		"nodeType": "YulBlock",
																		"src": "12771:611:10",
																		"statements": [
																			{
																				"nativeSrc": "12785:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12785:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12804:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "12804:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12816:4:10",
																									"nodeType": "YulLiteral",
																									"src": "12816:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12812:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "12812:3:10"
																							},
																							"nativeSrc": "12812:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "12812:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12800:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12800:3:10"
																					},
																					"nativeSrc": "12800:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12800:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12789:7:10",
																						"nodeType": "YulTypedName",
																						"src": "12789:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12836:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12836:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12882:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "12882:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "12850:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "12850:31:10"
																					},
																					"nativeSrc": "12850:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12850:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12840:6:10",
																						"nodeType": "YulTypedName",
																						"src": "12840:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12900:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12900:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12909:1:10",
																					"nodeType": "YulLiteral",
																					"src": "12909:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12904:1:10",
																						"nodeType": "YulTypedName",
																						"src": "12904:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12968:163:10",
																					"nodeType": "YulBlock",
																					"src": "12968:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12993:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "12993:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13011:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "13011:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13016:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "13016:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13007:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "13007:3:10"
																												},
																												"nativeSrc": "13007:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "13007:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13001:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "13001:5:10"
																										},
																										"nativeSrc": "13001:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13001:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12986:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "12986:6:10"
																								},
																								"nativeSrc": "12986:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "12986:42:10"
																							},
																							"nativeSrc": "12986:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "12986:42:10"
																						},
																						{
																							"nativeSrc": "13045:24:10",
																							"nodeType": "YulAssignment",
																							"src": "13045:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13059:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "13059:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13067:1:10",
																										"nodeType": "YulLiteral",
																										"src": "13067:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13055:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "13055:3:10"
																								},
																								"nativeSrc": "13055:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13055:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13045:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13045:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13086:31:10",
																							"nodeType": "YulAssignment",
																							"src": "13086:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13103:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "13103:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13114:2:10",
																										"nodeType": "YulLiteral",
																										"src": "13114:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13099:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "13099:3:10"
																								},
																								"nativeSrc": "13099:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13099:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13086:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "13086:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12934:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "12934:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12937:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "12937:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12931:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "12931:2:10"
																					},
																					"nativeSrc": "12931:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12931:14:10"
																				},
																				"nativeSrc": "12923:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12946:21:10",
																					"nodeType": "YulBlock",
																					"src": "12946:21:10",
																					"statements": [
																						{
																							"nativeSrc": "12948:17:10",
																							"nodeType": "YulAssignment",
																							"src": "12948:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12957:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "12957:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12960:4:10",
																										"nodeType": "YulLiteral",
																										"src": "12960:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12953:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "12953:3:10"
																								},
																								"nativeSrc": "12953:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "12953:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12948:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "12948:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12927:3:10",
																					"nodeType": "YulBlock",
																					"src": "12927:3:10",
																					"statements": []
																				},
																				"src": "12923:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "13167:156:10",
																					"nodeType": "YulBlock",
																					"src": "13167:156:10",
																					"statements": [
																						{
																							"nativeSrc": "13185:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13185:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13212:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "13212:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13217:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13217:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13208:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "13208:3:10"
																										},
																										"nativeSrc": "13208:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13208:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13202:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13202:5:10"
																								},
																								"nativeSrc": "13202:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13202:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13189:9:10",
																									"nodeType": "YulTypedName",
																									"src": "13189:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13252:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "13252:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13279:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13279:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "13294:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "13294:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "13302:4:10",
																														"nodeType": "YulLiteral",
																														"src": "13302:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "13290:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "13290:3:10"
																												},
																												"nativeSrc": "13290:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "13290:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "13260:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "13260:18:10"
																										},
																										"nativeSrc": "13260:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13260:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13245:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13245:6:10"
																								},
																								"nativeSrc": "13245:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13245:64:10"
																							},
																							"nativeSrc": "13245:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "13245:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13150:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "13150:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13159:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "13159:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13147:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "13147:2:10"
																					},
																					"nativeSrc": "13147:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13147:19:10"
																				},
																				"nativeSrc": "13144:179:10",
																				"nodeType": "YulIf",
																				"src": "13144:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13343:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "13343:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "13357:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "13357:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "13365:1:10",
																											"nodeType": "YulLiteral",
																											"src": "13365:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "13353:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "13353:3:10"
																									},
																									"nativeSrc": "13353:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "13353:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13369:1:10",
																									"nodeType": "YulLiteral",
																									"src": "13369:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13349:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "13349:3:10"
																							},
																							"nativeSrc": "13349:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "13349:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13336:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13336:6:10"
																					},
																					"nativeSrc": "13336:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13336:36:10"
																				},
																				"nativeSrc": "13336:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13336:36:10"
																			}
																		]
																	},
																	"nativeSrc": "12764:618:10",
																	"nodeType": "YulCase",
																	"src": "12764:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12769:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12769:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13399:222:10",
																		"nodeType": "YulBlock",
																		"src": "13399:222:10",
																		"statements": [
																			{
																				"nativeSrc": "13413:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13413:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13426:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13426:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13417:5:10",
																						"nodeType": "YulTypedName",
																						"src": "13417:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13450:67:10",
																					"nodeType": "YulBlock",
																					"src": "13450:67:10",
																					"statements": [
																						{
																							"nativeSrc": "13468:35:10",
																							"nodeType": "YulAssignment",
																							"src": "13468:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13487:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "13487:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13492:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13492:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13483:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "13483:3:10"
																										},
																										"nativeSrc": "13483:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13483:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13477:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13477:5:10"
																								},
																								"nativeSrc": "13477:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13477:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13468:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13468:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13443:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "13443:6:10"
																				},
																				"nativeSrc": "13440:77:10",
																				"nodeType": "YulIf",
																				"src": "13440:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13537:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "13537:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13596:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13596:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13603:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13603:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13543:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "13543:52:10"
																							},
																							"nativeSrc": "13543:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "13543:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13530:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13530:6:10"
																					},
																					"nativeSrc": "13530:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13530:81:10"
																				},
																				"nativeSrc": "13530:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13530:81:10"
																			}
																		]
																	},
																	"nativeSrc": "13391:230:10",
																	"nodeType": "YulCase",
																	"src": "13391:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12744:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12744:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12752:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12752:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12741:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12741:2:10"
																},
																"nativeSrc": "12741:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12741:14:10"
															},
															"nativeSrc": "12734:887:10",
															"nodeType": "YulSwitch",
															"src": "12734:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12232:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12313:4:10",
														"nodeType": "YulTypedName",
														"src": "12313:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12319:3:10",
														"nodeType": "YulTypedName",
														"src": "12319:3:10",
														"type": ""
													}
												],
												"src": "12232:1395:10"
											},
											{
												"body": {
													"nativeSrc": "13686:32:10",
													"nodeType": "YulBlock",
													"src": "13686:32:10",
													"statements": [
														{
															"nativeSrc": "13696:16:10",
															"nodeType": "YulAssignment",
															"src": "13696:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "13707:5:10",
																"nodeType": "YulIdentifier",
																"src": "13707:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13696:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "13696:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "13633:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13668:5:10",
														"nodeType": "YulTypedName",
														"src": "13668:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13678:7:10",
														"nodeType": "YulTypedName",
														"src": "13678:7:10",
														"type": ""
													}
												],
												"src": "13633:85:10"
											},
											{
												"body": {
													"nativeSrc": "13792:90:10",
													"nodeType": "YulBlock",
													"src": "13792:90:10",
													"statements": [
														{
															"nativeSrc": "13802:74:10",
															"nodeType": "YulAssignment",
															"src": "13802:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13868:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13868:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "13842:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "13842:25:10"
																				},
																				"nativeSrc": "13842:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13842:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13833:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "13833:8:10"
																		},
																		"nativeSrc": "13833:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13833:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13815:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13815:17:10"
																},
																"nativeSrc": "13815:61:10",
																"nodeType": "YulFunctionCall",
																"src": "13815:61:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13802:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "13802:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "13724:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13772:5:10",
														"nodeType": "YulTypedName",
														"src": "13772:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13782:9:10",
														"nodeType": "YulTypedName",
														"src": "13782:9:10",
														"type": ""
													}
												],
												"src": "13724:158:10"
											},
											{
												"body": {
													"nativeSrc": "13961:74:10",
													"nodeType": "YulBlock",
													"src": "13961:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13978:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13978:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14022:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14022:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "13983:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "13983:38:10"
																		},
																		"nativeSrc": "13983:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13983:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13971:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13971:6:10"
																},
																"nativeSrc": "13971:58:10",
																"nodeType": "YulFunctionCall",
																"src": "13971:58:10"
															},
															"nativeSrc": "13971:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "13971:58:10"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "13888:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13949:5:10",
														"nodeType": "YulTypedName",
														"src": "13949:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13956:3:10",
														"nodeType": "YulTypedName",
														"src": "13956:3:10",
														"type": ""
													}
												],
												"src": "13888:147:10"
											},
											{
												"body": {
													"nativeSrc": "14147:132:10",
													"nodeType": "YulBlock",
													"src": "14147:132:10",
													"statements": [
														{
															"nativeSrc": "14157:26:10",
															"nodeType": "YulAssignment",
															"src": "14157:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14169:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14169:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14180:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14180:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14165:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14165:3:10"
																},
																"nativeSrc": "14165:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14165:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14157:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14157:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14269:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:10"
																		},
																		"nativeSrc": "14254:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "14193:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "14193:51:10"
																},
																"nativeSrc": "14193:79:10",
																"nodeType": "YulFunctionCall",
																"src": "14193:79:10"
															},
															"nativeSrc": "14193:79:10",
															"nodeType": "YulExpressionStatement",
															"src": "14193:79:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14041:238:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14119:9:10",
														"nodeType": "YulTypedName",
														"src": "14119:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14131:6:10",
														"nodeType": "YulTypedName",
														"src": "14131:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14142:4:10",
														"nodeType": "YulTypedName",
														"src": "14142:4:10",
														"type": ""
													}
												],
												"src": "14041:238:10"
											},
											{
												"body": {
													"nativeSrc": "14350:53:10",
													"nodeType": "YulBlock",
													"src": "14350:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14367:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14367:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14390:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14390:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14372:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "14372:17:10"
																		},
																		"nativeSrc": "14372:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14372:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14360:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14360:6:10"
																},
																"nativeSrc": "14360:37:10",
																"nodeType": "YulFunctionCall",
																"src": "14360:37:10"
															},
															"nativeSrc": "14360:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "14360:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14285:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14338:5:10",
														"nodeType": "YulTypedName",
														"src": "14338:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14345:3:10",
														"nodeType": "YulTypedName",
														"src": "14345:3:10",
														"type": ""
													}
												],
												"src": "14285:118:10"
											},
											{
												"body": {
													"nativeSrc": "14535:206:10",
													"nodeType": "YulBlock",
													"src": "14535:206:10",
													"statements": [
														{
															"nativeSrc": "14545:26:10",
															"nodeType": "YulAssignment",
															"src": "14545:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14557:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14557:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14568:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14568:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14553:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14553:3:10"
																},
																"nativeSrc": "14553:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14553:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14545:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14545:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14625:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14625:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14638:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14638:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14649:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14649:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14634:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14634:3:10"
																		},
																		"nativeSrc": "14634:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14634:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14581:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14581:43:10"
																},
																"nativeSrc": "14581:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14581:71:10"
															},
															"nativeSrc": "14581:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14581:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14730:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14730:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14715:3:10"
																		},
																		"nativeSrc": "14715:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14715:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14662:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14662:43:10"
																},
																"nativeSrc": "14662:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14662:72:10"
															},
															"nativeSrc": "14662:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14662:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14409:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14499:9:10",
														"nodeType": "YulTypedName",
														"src": "14499:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14511:6:10",
														"nodeType": "YulTypedName",
														"src": "14511:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14519:6:10",
														"nodeType": "YulTypedName",
														"src": "14519:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14530:4:10",
														"nodeType": "YulTypedName",
														"src": "14530:4:10",
														"type": ""
													}
												],
												"src": "14409:332:10"
											},
											{
												"body": {
													"nativeSrc": "14791:147:10",
													"nodeType": "YulBlock",
													"src": "14791:147:10",
													"statements": [
														{
															"nativeSrc": "14801:25:10",
															"nodeType": "YulAssignment",
															"src": "14801:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14824:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14824:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14806:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14806:17:10"
																},
																"nativeSrc": "14806:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14806:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14801:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14801:1:10"
																}
															]
														},
														{
															"nativeSrc": "14835:25:10",
															"nodeType": "YulAssignment",
															"src": "14835:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14858:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14858:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14840:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14840:17:10"
																},
																"nativeSrc": "14840:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14840:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14835:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14835:1:10"
																}
															]
														},
														{
															"nativeSrc": "14869:16:10",
															"nodeType": "YulAssignment",
															"src": "14869:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14880:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14880:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14883:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14883:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14876:3:10"
																},
																"nativeSrc": "14876:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14876:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14869:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14909:22:10",
																"nodeType": "YulBlock",
																"src": "14909:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14911:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14911:16:10"
																			},
																			"nativeSrc": "14911:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14911:18:10"
																		},
																		"nativeSrc": "14911:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14911:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14901:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14901:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14904:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14904:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14898:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14898:2:10"
																},
																"nativeSrc": "14898:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14898:10:10"
															},
															"nativeSrc": "14895:36:10",
															"nodeType": "YulIf",
															"src": "14895:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14747:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14778:1:10",
														"nodeType": "YulTypedName",
														"src": "14778:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14781:1:10",
														"nodeType": "YulTypedName",
														"src": "14781:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14787:3:10",
														"nodeType": "YulTypedName",
														"src": "14787:3:10",
														"type": ""
													}
												],
												"src": "14747:191:10"
											},
											{
												"body": {
													"nativeSrc": "15098:288:10",
													"nodeType": "YulBlock",
													"src": "15098:288:10",
													"statements": [
														{
															"nativeSrc": "15108:26:10",
															"nodeType": "YulAssignment",
															"src": "15108:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15120:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15120:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15131:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15131:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15116:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15116:3:10"
																},
																"nativeSrc": "15116:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15116:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15108:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15108:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15188:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15188:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15201:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15201:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15212:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15212:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15197:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15197:3:10"
																		},
																		"nativeSrc": "15197:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15197:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15144:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15144:43:10"
																},
																"nativeSrc": "15144:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15144:71:10"
															},
															"nativeSrc": "15144:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15144:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15269:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15269:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15282:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15282:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15293:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15293:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15278:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15278:3:10"
																		},
																		"nativeSrc": "15278:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15278:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15225:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15225:43:10"
																},
																"nativeSrc": "15225:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15225:72:10"
															},
															"nativeSrc": "15225:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15225:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15351:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15351:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15364:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15364:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15375:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15375:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15360:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15360:3:10"
																		},
																		"nativeSrc": "15360:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15360:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15307:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15307:43:10"
																},
																"nativeSrc": "15307:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15307:72:10"
															},
															"nativeSrc": "15307:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15307:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14944:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15054:9:10",
														"nodeType": "YulTypedName",
														"src": "15054:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15066:6:10",
														"nodeType": "YulTypedName",
														"src": "15066:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15074:6:10",
														"nodeType": "YulTypedName",
														"src": "15074:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15082:6:10",
														"nodeType": "YulTypedName",
														"src": "15082:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15093:4:10",
														"nodeType": "YulTypedName",
														"src": "15093:4:10",
														"type": ""
													}
												],
												"src": "14944:442:10"
											},
											{
												"body": {
													"nativeSrc": "15490:124:10",
													"nodeType": "YulBlock",
													"src": "15490:124:10",
													"statements": [
														{
															"nativeSrc": "15500:26:10",
															"nodeType": "YulAssignment",
															"src": "15500:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15512:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15512:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15523:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15508:3:10"
																},
																"nativeSrc": "15508:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15508:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15500:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15580:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15580:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15593:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15593:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15604:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15604:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15589:3:10"
																		},
																		"nativeSrc": "15589:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15589:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15536:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15536:43:10"
																},
																"nativeSrc": "15536:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15536:71:10"
															},
															"nativeSrc": "15536:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15536:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15392:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15462:9:10",
														"nodeType": "YulTypedName",
														"src": "15462:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15474:6:10",
														"nodeType": "YulTypedName",
														"src": "15474:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15485:4:10",
														"nodeType": "YulTypedName",
														"src": "15485:4:10",
														"type": ""
													}
												],
												"src": "15392:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051612576380380612576833981810160405281019061003291906108ab565b81600a61003f9190610ad2565b8561004a9190610b1d565b848488600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100bf5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b69190610b6e565b60405180910390fd5b6100ce8161019160201b60201c565b5081600490816100de9190610da0565b5080600590816100ee9190610da0565b5050506000600660006101000a81548160ff021916908315150217905550600081036101525760006040517f392e1e270000000000000000000000000000000000000000000000000000000081526004016101499190610ead565b60405180910390fd5b80608081815250505081600660016101000a81548160ff021916908360ff160217905550610186868261025560201b60201c565b505050505050610f86565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c75760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102be9190610b6e565b60405180910390fd5b6102d9600083836102dd60201b60201c565b5050565b6102ee8383836102f360201b60201c565b505050565b6103048383836103ab60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103a65760006103486103cf60201b60201c565b9050600061035a6103d960201b60201c565b9050818111156103a35780826040517f9e79f85400000000000000000000000000000000000000000000000000000000815260040161039a929190610ed7565b60405180910390fd5b50505b505050565b6103b96103e360201b60201c565b6103ca83838361042a60201b60201c565b505050565b6000608051905090565b6000600354905090565b6103f161065260201b60201c565b15610428576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361047c5780600360008282546104709190610f00565b92505081905550610551565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610509578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161050093929190610f34565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361059a57806003600082825403925050819055506105e8565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106459190610f6b565b60405180910390a3505050565b6000600660009054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106a88261067d565b9050919050565b6106b88161069d565b81146106c357600080fd5b50565b6000815190506106d5816106af565b92915050565b6000819050919050565b6106ee816106db565b81146106f957600080fd5b50565b60008151905061070b816106e5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107648261071b565b810181811067ffffffffffffffff821117156107835761078261072c565b5b80604052505050565b6000610796610669565b90506107a2828261075b565b919050565b600067ffffffffffffffff8211156107c2576107c161072c565b5b6107cb8261071b565b9050602081019050919050565b60005b838110156107f65780820151818401526020810190506107db565b60008484015250505050565b6000610815610810846107a7565b61078c565b90508281526020810184848401111561083157610830610716565b5b61083c8482856107d8565b509392505050565b600082601f83011261085957610858610711565b5b8151610869848260208601610802565b91505092915050565b600060ff82169050919050565b61088881610872565b811461089357600080fd5b50565b6000815190506108a58161087f565b92915050565b60008060008060008060c087890312156108c8576108c7610673565b5b60006108d689828a016106c6565b96505060206108e789828a016106fc565b955050604087015167ffffffffffffffff81111561090857610907610678565b5b61091489828a01610844565b945050606087015167ffffffffffffffff81111561093557610934610678565b5b61094189828a01610844565b935050608061095289828a01610896565b92505060a061096389828a016106fc565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109f6578086048111156109d2576109d1610970565b5b60018516156109e15780820291505b80810290506109ef8561099f565b94506109b6565b94509492505050565b600082610a0f5760019050610acb565b81610a1d5760009050610acb565b8160018114610a335760028114610a3d57610a6c565b6001915050610acb565b60ff841115610a4f57610a4e610970565b5b8360020a915084821115610a6657610a65610970565b5b50610acb565b5060208310610133831016604e8410600b8410161715610aa15782820a905083811115610a9c57610a9b610970565b5b610acb565b610aae84848460016109ac565b92509050818404811115610ac557610ac4610970565b5b81810290505b9392505050565b6000610add826106db565b9150610ae883610872565b9250610b157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109ff565b905092915050565b6000610b28826106db565b9150610b33836106db565b9250828202610b41816106db565b91508282048414831517610b5857610b57610970565b5b5092915050565b610b688161069d565b82525050565b6000602082019050610b836000830184610b5f565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bdb57607f821691505b602082108103610bee57610bed610b94565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c19565b610c608683610c19565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c9d610c98610c93846106db565b610c78565b6106db565b9050919050565b6000819050919050565b610cb783610c82565b610ccb610cc382610ca4565b848454610c26565b825550505050565b600090565b610ce0610cd3565b610ceb818484610cae565b505050565b5b81811015610d0f57610d04600082610cd8565b600181019050610cf1565b5050565b601f821115610d5457610d2581610bf4565b610d2e84610c09565b81016020851015610d3d578190505b610d51610d4985610c09565b830182610cf0565b50505b505050565b600082821c905092915050565b6000610d7760001984600802610d59565b1980831691505092915050565b6000610d908383610d66565b9150826002028217905092915050565b610da982610b89565b67ffffffffffffffff811115610dc257610dc161072c565b5b610dcc8254610bc3565b610dd7828285610d13565b600060209050601f831160018114610e0a5760008415610df8578287015190505b610e028582610d84565b865550610e6a565b601f198416610e1886610bf4565b60005b82811015610e4057848901518255600182019150602085019450602081019050610e1b565b86831015610e5d5784890151610e59601f891682610d66565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6000610e97610e92610e8d84610e72565b610c78565b6106db565b9050919050565b610ea781610e7c565b82525050565b6000602082019050610ec26000830184610e9e565b92915050565b610ed1816106db565b82525050565b6000604082019050610eec6000830185610ec8565b610ef96020830184610ec8565b9392505050565b6000610f0b826106db565b9150610f16836106db565b9250828201905080821115610f2e57610f2d610970565b5b92915050565b6000606082019050610f496000830186610b5f565b610f566020830185610ec8565b610f636040830184610ec8565b949350505050565b6000602082019050610f806000830184610ec8565b92915050565b6080516115d5610fa1600039600061048101526115d56000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad5780639dc29fac116100715780639dc29fac146102c2578063a9059cbb146102de578063dd62ed3e1461030e578063f0141d841461033e578063f2fde38b1461035c57610121565b806370a0823114610242578063715018a6146102725780638456cb591461027c5780638da5cb5b1461028657806395d89b41146102a457610121565b8063313ce567116100f4578063313ce567146101c2578063355274ea146101e05780633f4ba83a146101fe57806340c10f19146102085780635c975abb1461022457610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e610378565b60405161013b9190611200565b60405180910390f35b61015e600480360381019061015991906112bb565b61040a565b60405161016b9190611316565b60405180910390f35b61017c61042d565b6040516101899190611340565b60405180910390f35b6101ac60048036038101906101a7919061135b565b610437565b6040516101b99190611316565b60405180910390f35b6101ca610466565b6040516101d791906113ca565b60405180910390f35b6101e861047d565b6040516101f59190611340565b60405180910390f35b6102066104a5565b005b610222600480360381019061021d91906112bb565b6104b7565b005b61022c6104cd565b6040516102399190611316565b60405180910390f35b61025c600480360381019061025791906113e5565b6104e4565b6040516102699190611340565b60405180910390f35b61027a61052d565b005b610284610541565b005b61028e610553565b60405161029b9190611421565b60405180910390f35b6102ac61057c565b6040516102b99190611200565b60405180910390f35b6102dc60048036038101906102d791906112bb565b61060e565b005b6102f860048036038101906102f391906112bb565b610624565b6040516103059190611316565b60405180910390f35b6103286004803603810190610323919061143c565b610647565b6040516103359190611340565b60405180910390f35b6103466106ce565b60405161035391906113ca565b60405180910390f35b610376600480360381019061037191906113e5565b6106e5565b005b606060048054610387906114ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103b3906114ab565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b5050505050905090565b60008061041561076b565b9050610422818585610773565b600191505092915050565b6000600354905090565b60008061044261076b565b905061044f858285610785565b61045a858585610819565b60019150509392505050565b6000600660019054906101000a900460ff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6104ad61090d565b6104b5610994565b565b6104bf61090d565b6104c982826109f7565b5050565b6000600660009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61053561090d565b61053f6000610a79565b565b61054961090d565b610551610b3d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461058b906114ab565b80601f01602080910402602001604051908101604052809291908181526020018280546105b7906114ab565b80156106045780601f106105d957610100808354040283529160200191610604565b820191906000526020600020905b8154815290600101906020018083116105e757829003601f168201915b5050505050905090565b61061661090d565b6106208282610ba0565b5050565b60008061062f61076b565b905061063c818585610819565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600660019054906101000a900460ff16905090565b6106ed61090d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361075f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107569190611421565b60405180910390fd5b61076881610a79565b50565b600033905090565b6107808383836001610c22565b505050565b60006107918484610647565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108135781811015610803578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107fa939291906114dc565b60405180910390fd5b61081284848484036000610c22565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108829190611421565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108fd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108f49190611421565b60405180910390fd5b610908838383610df9565b505050565b61091561076b565b73ffffffffffffffffffffffffffffffffffffffff16610933610553565b73ffffffffffffffffffffffffffffffffffffffff16146109925761095661076b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109899190611421565b60405180910390fd5b565b61099c610e09565b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109e061076b565b6040516109ed9190611421565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a695760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a609190611421565b60405180910390fd5b610a7560008383610df9565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b45610e49565b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b8961076b565b604051610b969190611421565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c125760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c099190611421565b60405180910390fd5b610c1e82600083610df9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c945760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c8b9190611421565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d065760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cfd9190611421565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610df3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dea9190611340565b60405180910390a35b50505050565b610e04838383610e8a565b505050565b610e116104cd565b610e47576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e516104cd565b15610e88576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e95838383610f30565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b576000610ed361047d565b90506000610edf61042d565b905081811115610f285780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610f1f929190611513565b60405180910390fd5b50505b505050565b610f38610e49565b610f43838383610f48565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f9a578060036000828254610f8e919061156b565b9250508190555061106f565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611027578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161101e939291906114dc565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110b85780600360008282540392505081905550611106565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111639190611340565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111aa57808201518184015260208101905061118f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111d282611170565b6111dc818561117b565b93506111ec81856020860161118c565b6111f5816111b6565b840191505092915050565b6000602082019050818103600083015261121a81846111c7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061125282611227565b9050919050565b61126281611247565b811461126d57600080fd5b50565b60008135905061127f81611259565b92915050565b6000819050919050565b61129881611285565b81146112a357600080fd5b50565b6000813590506112b58161128f565b92915050565b600080604083850312156112d2576112d1611222565b5b60006112e085828601611270565b92505060206112f1858286016112a6565b9150509250929050565b60008115159050919050565b611310816112fb565b82525050565b600060208201905061132b6000830184611307565b92915050565b61133a81611285565b82525050565b60006020820190506113556000830184611331565b92915050565b60008060006060848603121561137457611373611222565b5b600061138286828701611270565b935050602061139386828701611270565b92505060406113a4868287016112a6565b9150509250925092565b600060ff82169050919050565b6113c4816113ae565b82525050565b60006020820190506113df60008301846113bb565b92915050565b6000602082840312156113fb576113fa611222565b5b600061140984828501611270565b91505092915050565b61141b81611247565b82525050565b60006020820190506114366000830184611412565b92915050565b6000806040838503121561145357611452611222565b5b600061146185828601611270565b925050602061147285828601611270565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114c357607f821691505b6020821081036114d6576114d561147c565b5b50919050565b60006060820190506114f16000830186611412565b6114fe6020830185611331565b61150b6040830184611331565b949350505050565b60006040820190506115286000830185611331565b6115356020830184611331565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157682611285565b915061158183611285565b92508282019050808211156115995761159861153c565b5b9291505056fea26469706673582212207653d840f3fadb299407e8548914e0fb527fbc2ac577b74d87af02d095f56d1a64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2576 CODESIZE SUB DUP1 PUSH2 0x2576 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x3F SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST DUP6 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST DUP5 DUP5 DUP9 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE DUP2 PUSH2 0x191 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 SUB PUSH2 0x152 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP DUP2 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x186 DUP7 DUP3 PUSH2 0x255 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2EE DUP4 DUP4 DUP4 PUSH2 0x2F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x304 DUP4 DUP4 DUP4 PUSH2 0x3AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A6 JUMPI PUSH1 0x0 PUSH2 0x348 PUSH2 0x3CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35A PUSH2 0x3D9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP3 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x3E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3CA DUP4 DUP4 DUP4 PUSH2 0x42A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x652 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47C JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x551 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x509 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59A JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5E8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A8 DUP3 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B8 DUP2 PUSH2 0x69D JUMP JUMPDEST DUP2 EQ PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D5 DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EE DUP2 PUSH2 0x6DB JUMP JUMPDEST DUP2 EQ PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x70B DUP2 PUSH2 0x6E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x764 DUP3 PUSH2 0x71B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x783 JUMPI PUSH2 0x782 PUSH2 0x72C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x796 PUSH2 0x669 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A2 DUP3 DUP3 PUSH2 0x75B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x72C JUMP JUMPDEST JUMPDEST PUSH2 0x7CB DUP3 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0x810 DUP5 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x830 PUSH2 0x716 JUMP JUMPDEST JUMPDEST PUSH2 0x83C DUP5 DUP3 DUP6 PUSH2 0x7D8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x859 JUMPI PUSH2 0x858 PUSH2 0x711 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x869 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x802 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x888 DUP2 PUSH2 0x872 JUMP JUMPDEST DUP2 EQ PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A5 DUP2 PUSH2 0x87F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0x673 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP10 DUP3 DUP11 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x8E7 DUP10 DUP3 DUP11 ADD PUSH2 0x6FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x678 JUMP JUMPDEST JUMPDEST PUSH2 0x914 DUP10 DUP3 DUP11 ADD PUSH2 0x844 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0x678 JUMP JUMPDEST JUMPDEST PUSH2 0x941 DUP10 DUP3 DUP11 ADD PUSH2 0x844 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x952 DUP10 DUP3 DUP11 ADD PUSH2 0x896 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x963 DUP10 DUP3 DUP11 ADD PUSH2 0x6FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x9F6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D1 PUSH2 0x970 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x9E1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x9EF DUP6 PUSH2 0x99F JUMP JUMPDEST SWAP5 POP PUSH2 0x9B6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA0F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xACB JUMP JUMPDEST DUP2 PUSH2 0xA1D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xACB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA33 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA3D JUMPI PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xACB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA4F JUMPI PUSH2 0xA4E PUSH2 0x970 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA65 PUSH2 0x970 JUMP JUMPDEST JUMPDEST POP PUSH2 0xACB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAA1 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9B PUSH2 0x970 JUMP JUMPDEST JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH2 0xAAE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x9AC JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0xAC4 PUSH2 0x970 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADD DUP3 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0xAE8 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP3 POP PUSH2 0xB15 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x9FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0xB33 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB41 DUP2 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB58 JUMPI PUSH2 0xB57 PUSH2 0x970 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB68 DUP2 PUSH2 0x69D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xBDB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBEE JUMPI PUSH2 0xBED PUSH2 0xB94 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xC56 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xC60 DUP7 DUP4 PUSH2 0xC19 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D PUSH2 0xC98 PUSH2 0xC93 DUP5 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB7 DUP4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0xCCB PUSH2 0xCC3 DUP3 PUSH2 0xCA4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xC26 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xCE0 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0xCEB DUP2 DUP5 DUP5 PUSH2 0xCAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD04 PUSH1 0x0 DUP3 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD54 JUMPI PUSH2 0xD25 DUP2 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xD2E DUP5 PUSH2 0xC09 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xD3D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xD51 PUSH2 0xD49 DUP6 PUSH2 0xC09 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xCF0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xD59 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD90 DUP4 DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA9 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x72C JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP3 SLOAD PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0xDD7 DUP3 DUP3 DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xE0A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xDF8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xE02 DUP6 DUP3 PUSH2 0xD84 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xE18 DUP7 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE40 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xE5D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xE59 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xD66 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE97 PUSH2 0xE92 PUSH2 0xE8D DUP5 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xED1 DUP2 PUSH2 0x6DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEEC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xEF9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0B DUP3 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0xF16 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0x970 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF49 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xF56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xF63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEC8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x15D5 PUSH2 0xFA1 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x481 ADD MSTORE PUSH2 0x15D5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A4 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x224 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH2 0x541 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x415 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x442 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x44F DUP6 DUP3 DUP6 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x45A DUP6 DUP6 DUP6 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AD PUSH2 0x90D JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0x994 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x90D JUMP JUMPDEST PUSH2 0x4C9 DUP3 DUP3 PUSH2 0x9F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x53F PUSH1 0x0 PUSH2 0xA79 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x549 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x551 PUSH2 0xB3D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x604 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x604 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x616 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xBA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62F PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x63C DUP2 DUP6 DUP6 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x768 DUP2 PUSH2 0xA79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x780 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP5 DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x813 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x803 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x812 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xC22 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP4 DUP4 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0x76B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0x553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x992 JUMPI PUSH2 0x956 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x99C PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x9E0 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA69 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB45 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB89 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E DUP3 PUSH1 0x0 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8B SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD06 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDF3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE04 DUP4 DUP4 DUP4 PUSH2 0xE8A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE11 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE51 PUSH2 0x4CD JUMP JUMPDEST ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE95 DUP4 DUP4 DUP4 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH1 0x0 PUSH2 0xED3 PUSH2 0x47D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEDF PUSH2 0x42D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF28 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP3 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF38 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xF43 DUP4 DUP4 DUP4 PUSH2 0xF48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9A JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x106F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1027 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B8 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1106 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1163 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D2 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0x117B JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x121A DUP2 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1252 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x1247 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127F DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1298 DUP2 PUSH2 0x1285 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x128F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F1 DUP6 DUP3 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1310 DUP2 PUSH2 0x12FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x1285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1373 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP7 DUP3 DUP8 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1393 DUP7 DUP3 DUP8 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A4 DUP7 DUP3 DUP8 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C4 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x141B DUP2 PUSH2 0x1247 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1461 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1472 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x147C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14F1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x14FE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x150B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1528 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1576 DUP3 PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP PUSH2 0x1581 DUP4 PUSH2 0x1285 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x153C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x53D840F3FADB299407E8548914E0FB527FBC2AC577B74D DUP8 0xAF MUL 0xD0 SWAP6 CREATE2 PUSH14 0x1A64736F6C634300081A00330000 ",
							"sourceMap": "267:1207:9:-:0;;;359:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;643:4;637:2;:10;;;;:::i;:::-;628:6;:19;;;;:::i;:::-;562:4;568:6;593:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:8;1231:7;;:15;;;;;;;;;;;;;;;;;;764:1:4;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;673:4:9::3;665:5;;:12;;;;;;;;;;;;;;;;;;688:34;694:12;708:13;688:5;;;:34;;:::i;:::-;359:371:::0;;;;;;267:1207;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1192:187:9:-;1341:30;1355:4;1361:2;1365:5;1341:13;;;:30;;:::i;:::-;1192:187;;;:::o;1059:371:4:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;:30;;:::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;;;:5;;:::i;:::-;1232:25;;1271:14;1288:13;:11;;;:13;;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;1112:145:5:-;1474:19:8;:17;;;:19;;:::i;:::-;1220:30:5::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;923:81:4:-;967:7;993:4;;986:11;;923:81;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;2002:128:8:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:8:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:117::-;1314:1;1311;1304:12;1328:117;1437:1;1434;1427:12;1451:102;1492:6;1543:2;1539:7;1534:2;1527:5;1523:14;1519:28;1509:38;;1451:102;;;:::o;1559:180::-;1607:77;1604:1;1597:88;1704:4;1701:1;1694:15;1728:4;1725:1;1718:15;1745:281;1828:27;1850:4;1828:27;:::i;:::-;1820:6;1816:40;1958:6;1946:10;1943:22;1922:18;1910:10;1907:34;1904:62;1901:88;;;1969:18;;:::i;:::-;1901:88;2009:10;2005:2;1998:22;1788:238;1745:281;;:::o;2032:129::-;2066:6;2093:20;;:::i;:::-;2083:30;;2122:33;2150:4;2142:6;2122:33;:::i;:::-;2032:129;;;:::o;2167:308::-;2229:4;2319:18;2311:6;2308:30;2305:56;;;2341:18;;:::i;:::-;2305:56;2379:29;2401:6;2379:29;:::i;:::-;2371:37;;2463:4;2457;2453:15;2445:23;;2167:308;;;:::o;2481:248::-;2563:1;2573:113;2587:6;2584:1;2581:13;2573:113;;;2672:1;2667:3;2663:11;2657:18;2653:1;2648:3;2644:11;2637:39;2609:2;2606:1;2602:10;2597:15;;2573:113;;;2720:1;2711:6;2706:3;2702:16;2695:27;2543:186;2481:248;;;:::o;2735:434::-;2824:5;2849:66;2865:49;2907:6;2865:49;:::i;:::-;2849:66;:::i;:::-;2840:75;;2938:6;2931:5;2924:21;2976:4;2969:5;2965:16;3014:3;3005:6;3000:3;2996:16;2993:25;2990:112;;;3021:79;;:::i;:::-;2990:112;3111:52;3156:6;3151:3;3146;3111:52;:::i;:::-;2830:339;2735:434;;;;;:::o;3189:355::-;3256:5;3305:3;3298:4;3290:6;3286:17;3282:27;3272:122;;3313:79;;:::i;:::-;3272:122;3423:6;3417:13;3448:90;3534:3;3526:6;3519:4;3511:6;3507:17;3448:90;:::i;:::-;3439:99;;3262:282;3189:355;;;;:::o;3550:86::-;3585:7;3625:4;3618:5;3614:16;3603:27;;3550:86;;;:::o;3642:118::-;3713:22;3729:5;3713:22;:::i;:::-;3706:5;3703:33;3693:61;;3750:1;3747;3740:12;3693:61;3642:118;:::o;3766:139::-;3821:5;3852:6;3846:13;3837:22;;3868:31;3893:5;3868:31;:::i;:::-;3766:139;;;;:::o;3911:1476::-;4044:6;4052;4060;4068;4076;4084;4133:3;4121:9;4112:7;4108:23;4104:33;4101:120;;;4140:79;;:::i;:::-;4101:120;4260:1;4285:64;4341:7;4332:6;4321:9;4317:22;4285:64;:::i;:::-;4275:74;;4231:128;4398:2;4424:64;4480:7;4471:6;4460:9;4456:22;4424:64;:::i;:::-;4414:74;;4369:129;4558:2;4547:9;4543:18;4537:25;4589:18;4581:6;4578:30;4575:117;;;4611:79;;:::i;:::-;4575:117;4716:74;4782:7;4773:6;4762:9;4758:22;4716:74;:::i;:::-;4706:84;;4508:292;4860:2;4849:9;4845:18;4839:25;4891:18;4883:6;4880:30;4877:117;;;4913:79;;:::i;:::-;4877:117;5018:74;5084:7;5075:6;5064:9;5060:22;5018:74;:::i;:::-;5008:84;;4810:292;5141:3;5168:62;5222:7;5213:6;5202:9;5198:22;5168:62;:::i;:::-;5158:72;;5112:128;5279:3;5306:64;5362:7;5353:6;5342:9;5338:22;5306:64;:::i;:::-;5296:74;;5250:130;3911:1476;;;;;;;;:::o;5393:180::-;5441:77;5438:1;5431:88;5538:4;5535:1;5528:15;5562:4;5559:1;5552:15;5579:102;5621:8;5668:5;5665:1;5661:13;5640:34;;5579:102;;;:::o;5687:848::-;5748:5;5755:4;5779:6;5770:15;;5803:5;5794:14;;5817:712;5838:1;5828:8;5825:15;5817:712;;;5933:4;5928:3;5924:14;5918:4;5915:24;5912:50;;;5942:18;;:::i;:::-;5912:50;5992:1;5982:8;5978:16;5975:451;;;6407:4;6400:5;6396:16;6387:25;;5975:451;6457:4;6451;6447:15;6439:23;;6487:32;6510:8;6487:32;:::i;:::-;6475:44;;5817:712;;;5687:848;;;;;;;:::o;6541:1073::-;6595:5;6786:8;6776:40;;6807:1;6798:10;;6809:5;;6776:40;6835:4;6825:36;;6852:1;6843:10;;6854:5;;6825:36;6921:4;6969:1;6964:27;;;;7005:1;7000:191;;;;6914:277;;6964:27;6982:1;6973:10;;6984:5;;;7000:191;7045:3;7035:8;7032:17;7029:43;;;7052:18;;:::i;:::-;7029:43;7101:8;7098:1;7094:16;7085:25;;7136:3;7129:5;7126:14;7123:40;;;7143:18;;:::i;:::-;7123:40;7176:5;;;6914:277;;7300:2;7290:8;7287:16;7281:3;7275:4;7272:13;7268:36;7250:2;7240:8;7237:16;7232:2;7226:4;7223:12;7219:35;7203:111;7200:246;;;7356:8;7350:4;7346:19;7337:28;;7391:3;7384:5;7381:14;7378:40;;;7398:18;;:::i;:::-;7378:40;7431:5;;7200:246;7471:42;7509:3;7499:8;7493:4;7490:1;7471:42;:::i;:::-;7456:57;;;;7545:4;7540:3;7536:14;7529:5;7526:25;7523:51;;;7554:18;;:::i;:::-;7523:51;7603:4;7596:5;7592:16;7583:25;;6541:1073;;;;;;:::o;7620:281::-;7678:5;7702:23;7720:4;7702:23;:::i;:::-;7694:31;;7746:25;7762:8;7746:25;:::i;:::-;7734:37;;7790:104;7827:66;7817:8;7811:4;7790:104;:::i;:::-;7781:113;;7620:281;;;;:::o;7907:410::-;7947:7;7970:20;7988:1;7970:20;:::i;:::-;7965:25;;8004:20;8022:1;8004:20;:::i;:::-;7999:25;;8059:1;8056;8052:9;8081:30;8099:11;8081:30;:::i;:::-;8070:41;;8260:1;8251:7;8247:15;8244:1;8241:22;8221:1;8214:9;8194:83;8171:139;;8290:18;;:::i;:::-;8171:139;7955:362;7907:410;;;;:::o;8323:118::-;8410:24;8428:5;8410:24;:::i;:::-;8405:3;8398:37;8323:118;;:::o;8447:222::-;8540:4;8578:2;8567:9;8563:18;8555:26;;8591:71;8659:1;8648:9;8644:17;8635:6;8591:71;:::i;:::-;8447:222;;;;:::o;8675:99::-;8727:6;8761:5;8755:12;8745:22;;8675:99;;;:::o;8780:180::-;8828:77;8825:1;8818:88;8925:4;8922:1;8915:15;8949:4;8946:1;8939:15;8966:320;9010:6;9047:1;9041:4;9037:12;9027:22;;9094:1;9088:4;9084:12;9115:18;9105:81;;9171:4;9163:6;9159:17;9149:27;;9105:81;9233:2;9225:6;9222:14;9202:18;9199:38;9196:84;;9252:18;;:::i;:::-;9196:84;9017:269;8966:320;;;:::o;9292:141::-;9341:4;9364:3;9356:11;;9387:3;9384:1;9377:14;9421:4;9418:1;9408:18;9400:26;;9292:141;;;:::o;9439:93::-;9476:6;9523:2;9518;9511:5;9507:14;9503:23;9493:33;;9439:93;;;:::o;9538:107::-;9582:8;9632:5;9626:4;9622:16;9601:37;;9538:107;;;;:::o;9651:393::-;9720:6;9770:1;9758:10;9754:18;9793:97;9823:66;9812:9;9793:97;:::i;:::-;9911:39;9941:8;9930:9;9911:39;:::i;:::-;9899:51;;9983:4;9979:9;9972:5;9968:21;9959:30;;10032:4;10022:8;10018:19;10011:5;10008:30;9998:40;;9727:317;;9651:393;;;;;:::o;10050:60::-;10078:3;10099:5;10092:12;;10050:60;;;:::o;10116:142::-;10166:9;10199:53;10217:34;10226:24;10244:5;10226:24;:::i;:::-;10217:34;:::i;:::-;10199:53;:::i;:::-;10186:66;;10116:142;;;:::o;10264:75::-;10307:3;10328:5;10321:12;;10264:75;;;:::o;10345:269::-;10455:39;10486:7;10455:39;:::i;:::-;10516:91;10565:41;10589:16;10565:41;:::i;:::-;10557:6;10550:4;10544:11;10516:91;:::i;:::-;10510:4;10503:105;10421:193;10345:269;;;:::o;10620:73::-;10665:3;10620:73;:::o;10699:189::-;10776:32;;:::i;:::-;10817:65;10875:6;10867;10861:4;10817:65;:::i;:::-;10752:136;10699:189;;:::o;10894:186::-;10954:120;10971:3;10964:5;10961:14;10954:120;;;11025:39;11062:1;11055:5;11025:39;:::i;:::-;10998:1;10991:5;10987:13;10978:22;;10954:120;;;10894:186;;:::o;11086:543::-;11187:2;11182:3;11179:11;11176:446;;;11221:38;11253:5;11221:38;:::i;:::-;11305:29;11323:10;11305:29;:::i;:::-;11295:8;11291:44;11488:2;11476:10;11473:18;11470:49;;;11509:8;11494:23;;11470:49;11532:80;11588:22;11606:3;11588:22;:::i;:::-;11578:8;11574:37;11561:11;11532:80;:::i;:::-;11191:431;;11176:446;11086:543;;;:::o;11635:117::-;11689:8;11739:5;11733:4;11729:16;11708:37;;11635:117;;;;:::o;11758:169::-;11802:6;11835:51;11883:1;11879:6;11871:5;11868:1;11864:13;11835:51;:::i;:::-;11831:56;11916:4;11910;11906:15;11896:25;;11809:118;11758:169;;;;:::o;11932:295::-;12008:4;12154:29;12179:3;12173:4;12154:29;:::i;:::-;12146:37;;12216:3;12213:1;12209:11;12203:4;12200:21;12192:29;;11932:295;;;;:::o;12232:1395::-;12349:37;12382:3;12349:37;:::i;:::-;12451:18;12443:6;12440:30;12437:56;;;12473:18;;:::i;:::-;12437:56;12517:38;12549:4;12543:11;12517:38;:::i;:::-;12602:67;12662:6;12654;12648:4;12602:67;:::i;:::-;12696:1;12720:4;12707:17;;12752:2;12744:6;12741:14;12769:1;12764:618;;;;13426:1;13443:6;13440:77;;;13492:9;13487:3;13483:19;13477:26;13468:35;;13440:77;13543:67;13603:6;13596:5;13543:67;:::i;:::-;13537:4;13530:81;13399:222;12734:887;;12764:618;12816:4;12812:9;12804:6;12800:22;12850:37;12882:4;12850:37;:::i;:::-;12909:1;12923:208;12937:7;12934:1;12931:14;12923:208;;;13016:9;13011:3;13007:19;13001:26;12993:6;12986:42;13067:1;13059:6;13055:14;13045:24;;13114:2;13103:9;13099:18;13086:31;;12960:4;12957:1;12953:12;12948:17;;12923:208;;;13159:6;13150:7;13147:19;13144:179;;;13217:9;13212:3;13208:19;13202:26;13260:48;13302:4;13294:6;13290:17;13279:9;13260:48;:::i;:::-;13252:6;13245:64;13167:156;13144:179;13369:1;13365;13357:6;13353:14;13349:22;13343:4;13336:36;12771:611;;;12734:887;;12324:1303;;;12232:1395;;:::o;13633:85::-;13678:7;13707:5;13696:16;;13633:85;;;:::o;13724:158::-;13782:9;13815:61;13833:42;13842:32;13868:5;13842:32;:::i;:::-;13833:42;:::i;:::-;13815:61;:::i;:::-;13802:74;;13724:158;;;:::o;13888:147::-;13983:45;14022:5;13983:45;:::i;:::-;13978:3;13971:58;13888:147;;:::o;14041:238::-;14142:4;14180:2;14169:9;14165:18;14157:26;;14193:79;14269:1;14258:9;14254:17;14245:6;14193:79;:::i;:::-;14041:238;;;;:::o;14285:118::-;14372:24;14390:5;14372:24;:::i;:::-;14367:3;14360:37;14285:118;;:::o;14409:332::-;14530:4;14568:2;14557:9;14553:18;14545:26;;14581:71;14649:1;14638:9;14634:17;14625:6;14581:71;:::i;:::-;14662:72;14730:2;14719:9;14715:18;14706:6;14662:72;:::i;:::-;14409:332;;;;;:::o;14747:191::-;14787:3;14806:20;14824:1;14806:20;:::i;:::-;14801:25;;14840:20;14858:1;14840:20;:::i;:::-;14835:25;;14883:1;14880;14876:9;14869:16;;14904:3;14901:1;14898:10;14895:36;;;14911:18;;:::i;:::-;14895:36;14747:191;;;;:::o;14944:442::-;15093:4;15131:2;15120:9;15116:18;15108:26;;15144:71;15212:1;15201:9;15197:17;15188:6;15144:71;:::i;:::-;15225:72;15293:2;15282:9;15278:18;15269:6;15225:72;:::i;:::-;15307;15375:2;15364:9;15360:18;15351:6;15307:72;:::i;:::-;14944:442;;;;;;:::o;15392:222::-;15485:4;15523:2;15512:9;15508:18;15500:26;;15536:71;15604:1;15593:9;15589:17;15580:6;15536:71;:::i;:::-;15392:222;;;;:::o;267:1207:9:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1907,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3106,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2976,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2317,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2551,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1048": {
									"entryPoint": 1899,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1166": {
									"entryPoint": 2877,
									"id": 1166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1137": {
									"entryPoint": 3657,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1150": {
									"entryPoint": 3593,
									"id": 1150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 1925,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2681,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2073,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1182": {
									"entryPoint": 2452,
									"id": 1182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1009": {
									"entryPoint": 3888,
									"id": 1009,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1313": {
									"entryPoint": 3577,
									"id": 1313,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3912,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_975": {
									"entryPoint": 3722,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1607,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1034,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1252,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1274": {
									"entryPoint": 1550,
									"id": 1274,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cap_927": {
									"entryPoint": 1149,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1244": {
									"entryPoint": 1126,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDecimals_1321": {
									"entryPoint": 1742,
									"id": 1321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1259": {
									"entryPoint": 1207,
									"id": 1259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 888,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1363,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1283": {
									"entryPoint": 1345,
									"id": 1283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1125": {
									"entryPoint": 1229,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1325,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1404,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1069,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1079,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1765,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1572,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1292": {
									"entryPoint": 1189,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7700:10",
										"nodeType": "YulBlock",
										"src": "0:7700:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:186:10",
													"nodeType": "YulBlock",
													"src": "349:186:10",
													"statements": [
														{
															"nativeSrc": "360:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:10",
																"nodeType": "YulLiteral",
																"src": "369:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:10",
																	"nodeType": "YulTypedName",
																	"src": "364:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:10",
																"nodeType": "YulBlock",
																"src": "429:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:10"
																					},
																					"nativeSrc": "450:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:10"
																							},
																							"nativeSrc": "469:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:10"
																					},
																					"nativeSrc": "463:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:10"
																			},
																			"nativeSrc": "443:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:10"
																		},
																		"nativeSrc": "443:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:10"
																},
																"nativeSrc": "387:13:10",
																"nodeType": "YulFunctionCall",
																"src": "387:13:10"
															},
															"nativeSrc": "379:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:10",
																"nodeType": "YulBlock",
																"src": "401:19:10",
																"statements": [
																	{
																		"nativeSrc": "403:15:10",
																		"nodeType": "YulAssignment",
																		"src": "403:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:10",
																					"nodeType": "YulLiteral",
																					"src": "415:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:10"
																			},
																			"nativeSrc": "408:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:10",
																"nodeType": "YulBlock",
																"src": "383:3:10",
																"statements": []
															},
															"src": "379:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:10"
																		},
																		"nativeSrc": "508:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:10",
																		"nodeType": "YulLiteral",
																		"src": "526:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:10"
																},
																"nativeSrc": "501:27:10",
																"nodeType": "YulFunctionCall",
																"src": "501:27:10"
															},
															"nativeSrc": "501:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:248:10"
											},
											{
												"body": {
													"nativeSrc": "589:54:10",
													"nodeType": "YulBlock",
													"src": "589:54:10",
													"statements": [
														{
															"nativeSrc": "599:38:10",
															"nodeType": "YulAssignment",
															"src": "599:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:10",
																				"nodeType": "YulLiteral",
																				"src": "624:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:10"
																		},
																		"nativeSrc": "613:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:10",
																				"nodeType": "YulLiteral",
																				"src": "633:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:10"
																		},
																		"nativeSrc": "629:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:10"
																},
																"nativeSrc": "609:28:10",
																"nodeType": "YulFunctionCall",
																"src": "609:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:10",
														"nodeType": "YulTypedName",
														"src": "572:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:10",
														"nodeType": "YulTypedName",
														"src": "582:6:10",
														"type": ""
													}
												],
												"src": "541:102:10"
											},
											{
												"body": {
													"nativeSrc": "741:285:10",
													"nodeType": "YulBlock",
													"src": "741:285:10",
													"statements": [
														{
															"nativeSrc": "751:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:10"
																},
																"nativeSrc": "765:39:10",
																"nodeType": "YulFunctionCall",
																"src": "765:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:10",
																	"nodeType": "YulTypedName",
																	"src": "755:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:10",
															"nodeType": "YulAssignment",
															"src": "813:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:10"
																},
																"nativeSrc": "820:71:10",
																"nodeType": "YulFunctionCall",
																"src": "820:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:10",
																				"nodeType": "YulLiteral",
																				"src": "946:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:10"
																		},
																		"nativeSrc": "935:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:10"
																},
																"nativeSrc": "900:65:10",
																"nodeType": "YulFunctionCall",
																"src": "900:65:10"
															},
															"nativeSrc": "900:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:10"
														},
														{
															"nativeSrc": "974:46:10",
															"nodeType": "YulAssignment",
															"src": "974:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:10"
																		},
																		"nativeSrc": "990:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:10"
																},
																"nativeSrc": "981:39:10",
																"nodeType": "YulFunctionCall",
																"src": "981:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:10",
														"nodeType": "YulTypedName",
														"src": "722:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:10",
														"nodeType": "YulTypedName",
														"src": "729:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:10",
														"nodeType": "YulTypedName",
														"src": "737:3:10",
														"type": ""
													}
												],
												"src": "649:377:10"
											},
											{
												"body": {
													"nativeSrc": "1150:195:10",
													"nodeType": "YulBlock",
													"src": "1150:195:10",
													"statements": [
														{
															"nativeSrc": "1160:26:10",
															"nodeType": "YulAssignment",
															"src": "1160:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:10"
																},
																"nativeSrc": "1168:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:10"
																		},
																		"nativeSrc": "1203:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:10"
																		},
																		"nativeSrc": "1222:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:10"
																},
																"nativeSrc": "1196:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:10"
															},
															"nativeSrc": "1196:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:10"
														},
														{
															"nativeSrc": "1252:86:10",
															"nodeType": "YulAssignment",
															"src": "1252:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:10"
																},
																"nativeSrc": "1260:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:10",
														"nodeType": "YulTypedName",
														"src": "1122:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:10",
														"nodeType": "YulTypedName",
														"src": "1134:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:10",
														"nodeType": "YulTypedName",
														"src": "1145:4:10",
														"type": ""
													}
												],
												"src": "1032:313:10"
											},
											{
												"body": {
													"nativeSrc": "1391:35:10",
													"nodeType": "YulBlock",
													"src": "1391:35:10",
													"statements": [
														{
															"nativeSrc": "1401:19:10",
															"nodeType": "YulAssignment",
															"src": "1401:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:10"
																},
																"nativeSrc": "1411:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:10",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													}
												],
												"src": "1351:75:10"
											},
											{
												"body": {
													"nativeSrc": "1521:28:10",
													"nodeType": "YulBlock",
													"src": "1521:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:10"
																},
																"nativeSrc": "1531:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:10"
															},
															"nativeSrc": "1531:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:10"
											},
											{
												"body": {
													"nativeSrc": "1644:28:10",
													"nodeType": "YulBlock",
													"src": "1644:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:10"
																},
																"nativeSrc": "1654:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:10"
															},
															"nativeSrc": "1654:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:10"
											},
											{
												"body": {
													"nativeSrc": "1723:81:10",
													"nodeType": "YulBlock",
													"src": "1723:81:10",
													"statements": [
														{
															"nativeSrc": "1733:65:10",
															"nodeType": "YulAssignment",
															"src": "1733:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:10"
																},
																"nativeSrc": "1744:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:10",
														"nodeType": "YulTypedName",
														"src": "1705:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:10",
														"nodeType": "YulTypedName",
														"src": "1715:7:10",
														"type": ""
													}
												],
												"src": "1678:126:10"
											},
											{
												"body": {
													"nativeSrc": "1855:51:10",
													"nodeType": "YulBlock",
													"src": "1855:51:10",
													"statements": [
														{
															"nativeSrc": "1865:35:10",
															"nodeType": "YulAssignment",
															"src": "1865:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:10"
																},
																"nativeSrc": "1876:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:10",
														"nodeType": "YulTypedName",
														"src": "1837:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:10",
														"nodeType": "YulTypedName",
														"src": "1847:7:10",
														"type": ""
													}
												],
												"src": "1810:96:10"
											},
											{
												"body": {
													"nativeSrc": "1955:79:10",
													"nodeType": "YulBlock",
													"src": "1955:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:10",
																"nodeType": "YulBlock",
																"src": "2012:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:10"
																			},
																			"nativeSrc": "2014:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:10"
																		},
																		"nativeSrc": "2014:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:10"
																				},
																				"nativeSrc": "1985:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:10"
																		},
																		"nativeSrc": "1975:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:10"
																},
																"nativeSrc": "1968:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:10"
															},
															"nativeSrc": "1965:63:10",
															"nodeType": "YulIf",
															"src": "1965:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:10",
														"nodeType": "YulTypedName",
														"src": "1948:5:10",
														"type": ""
													}
												],
												"src": "1912:122:10"
											},
											{
												"body": {
													"nativeSrc": "2092:87:10",
													"nodeType": "YulBlock",
													"src": "2092:87:10",
													"statements": [
														{
															"nativeSrc": "2102:29:10",
															"nodeType": "YulAssignment",
															"src": "2102:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:10"
																},
																"nativeSrc": "2111:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:10"
																},
																"nativeSrc": "2140:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:10"
															},
															"nativeSrc": "2140:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:10",
														"nodeType": "YulTypedName",
														"src": "2070:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:10",
														"nodeType": "YulTypedName",
														"src": "2078:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:10",
														"nodeType": "YulTypedName",
														"src": "2086:5:10",
														"type": ""
													}
												],
												"src": "2040:139:10"
											},
											{
												"body": {
													"nativeSrc": "2230:32:10",
													"nodeType": "YulBlock",
													"src": "2230:32:10",
													"statements": [
														{
															"nativeSrc": "2240:16:10",
															"nodeType": "YulAssignment",
															"src": "2240:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:10",
																"nodeType": "YulIdentifier",
																"src": "2251:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:10",
														"nodeType": "YulTypedName",
														"src": "2212:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:10",
														"nodeType": "YulTypedName",
														"src": "2222:7:10",
														"type": ""
													}
												],
												"src": "2185:77:10"
											},
											{
												"body": {
													"nativeSrc": "2311:79:10",
													"nodeType": "YulBlock",
													"src": "2311:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:10",
																"nodeType": "YulBlock",
																"src": "2368:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:10"
																			},
																			"nativeSrc": "2370:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:10"
																		},
																		"nativeSrc": "2370:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:10"
																				},
																				"nativeSrc": "2341:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:10"
																		},
																		"nativeSrc": "2331:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:10"
																},
																"nativeSrc": "2324:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:10"
															},
															"nativeSrc": "2321:63:10",
															"nodeType": "YulIf",
															"src": "2321:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:10",
														"nodeType": "YulTypedName",
														"src": "2304:5:10",
														"type": ""
													}
												],
												"src": "2268:122:10"
											},
											{
												"body": {
													"nativeSrc": "2448:87:10",
													"nodeType": "YulBlock",
													"src": "2448:87:10",
													"statements": [
														{
															"nativeSrc": "2458:29:10",
															"nodeType": "YulAssignment",
															"src": "2458:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:10"
																},
																"nativeSrc": "2467:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:10"
																},
																"nativeSrc": "2496:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:10"
															},
															"nativeSrc": "2496:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:10",
														"nodeType": "YulTypedName",
														"src": "2426:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:10",
														"nodeType": "YulTypedName",
														"src": "2434:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:10",
														"nodeType": "YulTypedName",
														"src": "2442:5:10",
														"type": ""
													}
												],
												"src": "2396:139:10"
											},
											{
												"body": {
													"nativeSrc": "2624:391:10",
													"nodeType": "YulBlock",
													"src": "2624:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:10",
																"nodeType": "YulBlock",
																"src": "2670:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:10"
																			},
																			"nativeSrc": "2672:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:10"
																		},
																		"nativeSrc": "2672:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:10"
																		},
																		"nativeSrc": "2641:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:10"
																},
																"nativeSrc": "2637:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:10"
															},
															"nativeSrc": "2634:119:10",
															"nodeType": "YulIf",
															"src": "2634:119:10"
														},
														{
															"nativeSrc": "2763:117:10",
															"nodeType": "YulBlock",
															"src": "2763:117:10",
															"statements": [
																{
																	"nativeSrc": "2778:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:10"
																				},
																				"nativeSrc": "2838:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:10"
																		},
																		"nativeSrc": "2817:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:10",
															"nodeType": "YulBlock",
															"src": "2890:118:10",
															"statements": [
																{
																	"nativeSrc": "2905:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:10"
																				},
																				"nativeSrc": "2966:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:10"
																		},
																		"nativeSrc": "2945:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:10",
														"nodeType": "YulTypedName",
														"src": "2586:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:10",
														"nodeType": "YulTypedName",
														"src": "2597:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:10",
														"nodeType": "YulTypedName",
														"src": "2609:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:10",
														"nodeType": "YulTypedName",
														"src": "2617:6:10",
														"type": ""
													}
												],
												"src": "2541:474:10"
											},
											{
												"body": {
													"nativeSrc": "3063:48:10",
													"nodeType": "YulBlock",
													"src": "3063:48:10",
													"statements": [
														{
															"nativeSrc": "3073:32:10",
															"nodeType": "YulAssignment",
															"src": "3073:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:10"
																		},
																		"nativeSrc": "3091:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:10"
																},
																"nativeSrc": "3084:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:10",
														"nodeType": "YulTypedName",
														"src": "3045:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:10",
														"nodeType": "YulTypedName",
														"src": "3055:7:10",
														"type": ""
													}
												],
												"src": "3021:90:10"
											},
											{
												"body": {
													"nativeSrc": "3176:50:10",
													"nodeType": "YulBlock",
													"src": "3176:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:10"
																		},
																		"nativeSrc": "3198:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:10"
																},
																"nativeSrc": "3186:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:10"
															},
															"nativeSrc": "3186:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:10",
														"nodeType": "YulTypedName",
														"src": "3164:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:10",
														"nodeType": "YulTypedName",
														"src": "3171:3:10",
														"type": ""
													}
												],
												"src": "3117:109:10"
											},
											{
												"body": {
													"nativeSrc": "3324:118:10",
													"nodeType": "YulBlock",
													"src": "3324:118:10",
													"statements": [
														{
															"nativeSrc": "3334:26:10",
															"nodeType": "YulAssignment",
															"src": "3334:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:10"
																},
																"nativeSrc": "3342:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:10"
																		},
																		"nativeSrc": "3417:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:10"
																},
																"nativeSrc": "3370:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:10"
															},
															"nativeSrc": "3370:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:10",
														"nodeType": "YulTypedName",
														"src": "3296:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:10",
														"nodeType": "YulTypedName",
														"src": "3308:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:10",
														"nodeType": "YulTypedName",
														"src": "3319:4:10",
														"type": ""
													}
												],
												"src": "3232:210:10"
											},
											{
												"body": {
													"nativeSrc": "3513:53:10",
													"nodeType": "YulBlock",
													"src": "3513:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:10"
																		},
																		"nativeSrc": "3535:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:10"
																},
																"nativeSrc": "3523:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:10"
															},
															"nativeSrc": "3523:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:10",
														"nodeType": "YulTypedName",
														"src": "3501:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:10",
														"nodeType": "YulTypedName",
														"src": "3508:3:10",
														"type": ""
													}
												],
												"src": "3448:118:10"
											},
											{
												"body": {
													"nativeSrc": "3670:124:10",
													"nodeType": "YulBlock",
													"src": "3670:124:10",
													"statements": [
														{
															"nativeSrc": "3680:26:10",
															"nodeType": "YulAssignment",
															"src": "3680:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:10"
																},
																"nativeSrc": "3688:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:10"
																		},
																		"nativeSrc": "3769:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:10"
																},
																"nativeSrc": "3716:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:10"
															},
															"nativeSrc": "3716:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:10",
														"nodeType": "YulTypedName",
														"src": "3642:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:10",
														"nodeType": "YulTypedName",
														"src": "3654:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:10",
														"nodeType": "YulTypedName",
														"src": "3665:4:10",
														"type": ""
													}
												],
												"src": "3572:222:10"
											},
											{
												"body": {
													"nativeSrc": "3900:519:10",
													"nodeType": "YulBlock",
													"src": "3900:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:10",
																"nodeType": "YulBlock",
																"src": "3946:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:10"
																			},
																			"nativeSrc": "3948:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:10"
																		},
																		"nativeSrc": "3948:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:10"
																		},
																		"nativeSrc": "3917:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:10"
																},
																"nativeSrc": "3913:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:10"
															},
															"nativeSrc": "3910:119:10",
															"nodeType": "YulIf",
															"src": "3910:119:10"
														},
														{
															"nativeSrc": "4039:117:10",
															"nodeType": "YulBlock",
															"src": "4039:117:10",
															"statements": [
																{
																	"nativeSrc": "4054:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:10"
																				},
																				"nativeSrc": "4114:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:10"
																		},
																		"nativeSrc": "4093:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:10",
															"nodeType": "YulBlock",
															"src": "4166:118:10",
															"statements": [
																{
																	"nativeSrc": "4181:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:10"
																				},
																				"nativeSrc": "4242:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:10"
																		},
																		"nativeSrc": "4221:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:10",
															"nodeType": "YulBlock",
															"src": "4294:118:10",
															"statements": [
																{
																	"nativeSrc": "4309:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:10"
																				},
																				"nativeSrc": "4370:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:10"
																		},
																		"nativeSrc": "4349:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:10",
														"nodeType": "YulTypedName",
														"src": "3854:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:10",
														"nodeType": "YulTypedName",
														"src": "3865:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:10",
														"nodeType": "YulTypedName",
														"src": "3877:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:10",
														"nodeType": "YulTypedName",
														"src": "3885:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:10",
														"nodeType": "YulTypedName",
														"src": "3893:6:10",
														"type": ""
													}
												],
												"src": "3800:619:10"
											},
											{
												"body": {
													"nativeSrc": "4468:43:10",
													"nodeType": "YulBlock",
													"src": "4468:43:10",
													"statements": [
														{
															"nativeSrc": "4478:27:10",
															"nodeType": "YulAssignment",
															"src": "4478:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:10"
																},
																"nativeSrc": "4489:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:10",
														"nodeType": "YulTypedName",
														"src": "4450:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:10",
														"nodeType": "YulTypedName",
														"src": "4460:7:10",
														"type": ""
													}
												],
												"src": "4425:86:10"
											},
											{
												"body": {
													"nativeSrc": "4578:51:10",
													"nodeType": "YulBlock",
													"src": "4578:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:10"
																		},
																		"nativeSrc": "4600:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:10"
																},
																"nativeSrc": "4588:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:10"
															},
															"nativeSrc": "4588:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:10",
														"nodeType": "YulTypedName",
														"src": "4566:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:10",
														"nodeType": "YulTypedName",
														"src": "4573:3:10",
														"type": ""
													}
												],
												"src": "4517:112:10"
											},
											{
												"body": {
													"nativeSrc": "4729:120:10",
													"nodeType": "YulBlock",
													"src": "4729:120:10",
													"statements": [
														{
															"nativeSrc": "4739:26:10",
															"nodeType": "YulAssignment",
															"src": "4739:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:10"
																},
																"nativeSrc": "4747:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:10"
																		},
																		"nativeSrc": "4824:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:10"
																},
																"nativeSrc": "4775:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:10"
															},
															"nativeSrc": "4775:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:10",
														"nodeType": "YulTypedName",
														"src": "4701:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:10",
														"nodeType": "YulTypedName",
														"src": "4713:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:10",
														"nodeType": "YulTypedName",
														"src": "4724:4:10",
														"type": ""
													}
												],
												"src": "4635:214:10"
											},
											{
												"body": {
													"nativeSrc": "4921:263:10",
													"nodeType": "YulBlock",
													"src": "4921:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4967:83:10",
																"nodeType": "YulBlock",
																"src": "4967:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4969:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4969:77:10"
																			},
																			"nativeSrc": "4969:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:79:10"
																		},
																		"nativeSrc": "4969:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4938:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:10"
																		},
																		"nativeSrc": "4938:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4934:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:10"
																},
																"nativeSrc": "4934:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4934:32:10"
															},
															"nativeSrc": "4931:119:10",
															"nodeType": "YulIf",
															"src": "4931:119:10"
														},
														{
															"nativeSrc": "5060:117:10",
															"nodeType": "YulBlock",
															"src": "5060:117:10",
															"statements": [
																{
																	"nativeSrc": "5075:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5075:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5089:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5079:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5079:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5104:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5104:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5139:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5139:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5150:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5150:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5135:3:10"
																				},
																				"nativeSrc": "5135:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5114:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5114:20:10"
																		},
																		"nativeSrc": "5114:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5104:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5104:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4855:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:10",
														"nodeType": "YulTypedName",
														"src": "4891:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4902:7:10",
														"nodeType": "YulTypedName",
														"src": "4902:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4914:6:10",
														"nodeType": "YulTypedName",
														"src": "4914:6:10",
														"type": ""
													}
												],
												"src": "4855:329:10"
											},
											{
												"body": {
													"nativeSrc": "5255:53:10",
													"nodeType": "YulBlock",
													"src": "5255:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5272:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5295:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5295:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5277:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5277:17:10"
																		},
																		"nativeSrc": "5277:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:10"
																},
																"nativeSrc": "5265:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5265:37:10"
															},
															"nativeSrc": "5265:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5265:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5190:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:10",
														"nodeType": "YulTypedName",
														"src": "5243:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5250:3:10",
														"nodeType": "YulTypedName",
														"src": "5250:3:10",
														"type": ""
													}
												],
												"src": "5190:118:10"
											},
											{
												"body": {
													"nativeSrc": "5412:124:10",
													"nodeType": "YulBlock",
													"src": "5412:124:10",
													"statements": [
														{
															"nativeSrc": "5422:26:10",
															"nodeType": "YulAssignment",
															"src": "5422:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5434:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5434:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5445:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5430:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:10"
																},
																"nativeSrc": "5430:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5430:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5422:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5422:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5515:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5515:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5526:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5526:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5511:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:10"
																		},
																		"nativeSrc": "5511:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5458:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5458:43:10"
																},
																"nativeSrc": "5458:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5458:71:10"
															},
															"nativeSrc": "5458:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5458:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5314:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5384:9:10",
														"nodeType": "YulTypedName",
														"src": "5384:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5396:6:10",
														"nodeType": "YulTypedName",
														"src": "5396:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5407:4:10",
														"nodeType": "YulTypedName",
														"src": "5407:4:10",
														"type": ""
													}
												],
												"src": "5314:222:10"
											},
											{
												"body": {
													"nativeSrc": "5625:391:10",
													"nodeType": "YulBlock",
													"src": "5625:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5671:83:10",
																"nodeType": "YulBlock",
																"src": "5671:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5673:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5673:77:10"
																			},
																			"nativeSrc": "5673:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5673:79:10"
																		},
																		"nativeSrc": "5673:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5673:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5646:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5655:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5655:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5667:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:10"
																},
																"nativeSrc": "5638:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5638:32:10"
															},
															"nativeSrc": "5635:119:10",
															"nodeType": "YulIf",
															"src": "5635:119:10"
														},
														{
															"nativeSrc": "5764:117:10",
															"nodeType": "YulBlock",
															"src": "5764:117:10",
															"statements": [
																{
																	"nativeSrc": "5779:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5779:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5793:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5783:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5783:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5808:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5808:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5843:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5843:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5854:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5854:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5839:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5839:3:10"
																				},
																				"nativeSrc": "5839:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5839:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5863:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5863:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5818:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5818:20:10"
																		},
																		"nativeSrc": "5818:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5818:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5808:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5808:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5891:118:10",
															"nodeType": "YulBlock",
															"src": "5891:118:10",
															"statements": [
																{
																	"nativeSrc": "5906:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5906:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5920:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5920:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5910:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5910:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5936:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5936:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5971:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5971:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5982:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5982:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5967:3:10"
																				},
																				"nativeSrc": "5967:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5991:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5991:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5946:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5946:20:10"
																		},
																		"nativeSrc": "5946:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5946:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5936:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5936:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5542:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5587:9:10",
														"nodeType": "YulTypedName",
														"src": "5587:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5598:7:10",
														"nodeType": "YulTypedName",
														"src": "5598:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5610:6:10",
														"nodeType": "YulTypedName",
														"src": "5610:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5618:6:10",
														"nodeType": "YulTypedName",
														"src": "5618:6:10",
														"type": ""
													}
												],
												"src": "5542:474:10"
											},
											{
												"body": {
													"nativeSrc": "6050:152:10",
													"nodeType": "YulBlock",
													"src": "6050:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6067:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6067:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6070:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6070:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6060:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:10"
																},
																"nativeSrc": "6060:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6060:88:10"
															},
															"nativeSrc": "6060:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6060:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6164:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6167:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6167:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:10"
																},
																"nativeSrc": "6157:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6157:15:10"
															},
															"nativeSrc": "6157:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6157:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6188:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6188:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6191:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6181:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:10"
																},
																"nativeSrc": "6181:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6181:15:10"
															},
															"nativeSrc": "6181:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6181:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6022:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6022:180:10"
											},
											{
												"body": {
													"nativeSrc": "6259:269:10",
													"nodeType": "YulBlock",
													"src": "6259:269:10",
													"statements": [
														{
															"nativeSrc": "6269:22:10",
															"nodeType": "YulAssignment",
															"src": "6269:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6283:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6283:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6289:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6289:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																},
																"nativeSrc": "6279:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6279:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6269:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:10"
																}
															]
														},
														{
															"nativeSrc": "6300:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6300:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6330:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6330:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6336:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6336:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:10"
																},
																"nativeSrc": "6326:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6326:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6304:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6304:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6377:51:10",
																"nodeType": "YulBlock",
																"src": "6377:51:10",
																"statements": [
																	{
																		"nativeSrc": "6391:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6391:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6405:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6405:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6413:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6413:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6401:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6401:3:10"
																			},
																			"nativeSrc": "6401:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6401:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6391:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6391:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6357:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6357:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6350:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:10"
																},
																"nativeSrc": "6350:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6350:26:10"
															},
															"nativeSrc": "6347:81:10",
															"nodeType": "YulIf",
															"src": "6347:81:10"
														},
														{
															"body": {
																"nativeSrc": "6480:42:10",
																"nodeType": "YulBlock",
																"src": "6480:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6494:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6494:16:10"
																			},
																			"nativeSrc": "6494:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6494:18:10"
																		},
																		"nativeSrc": "6494:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6494:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6444:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6444:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6467:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6467:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6475:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6475:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6464:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6464:2:10"
																		},
																		"nativeSrc": "6464:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6464:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6441:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6441:2:10"
																},
																"nativeSrc": "6441:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6441:38:10"
															},
															"nativeSrc": "6438:84:10",
															"nodeType": "YulIf",
															"src": "6438:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6208:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6243:4:10",
														"nodeType": "YulTypedName",
														"src": "6243:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6252:6:10",
														"nodeType": "YulTypedName",
														"src": "6252:6:10",
														"type": ""
													}
												],
												"src": "6208:320:10"
											},
											{
												"body": {
													"nativeSrc": "6688:288:10",
													"nodeType": "YulBlock",
													"src": "6688:288:10",
													"statements": [
														{
															"nativeSrc": "6698:26:10",
															"nodeType": "YulAssignment",
															"src": "6698:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6710:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6710:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6721:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6721:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6706:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:10"
																},
																"nativeSrc": "6706:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6706:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6698:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6698:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6778:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6778:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6802:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:10"
																		},
																		"nativeSrc": "6787:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6734:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6734:43:10"
																},
																"nativeSrc": "6734:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6734:71:10"
															},
															"nativeSrc": "6734:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6734:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6859:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6883:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6868:3:10"
																		},
																		"nativeSrc": "6868:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6815:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6815:43:10"
																},
																"nativeSrc": "6815:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6815:72:10"
															},
															"nativeSrc": "6815:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6815:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6941:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6941:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6965:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6965:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6950:3:10"
																		},
																		"nativeSrc": "6950:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6897:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6897:43:10"
																},
																"nativeSrc": "6897:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6897:72:10"
															},
															"nativeSrc": "6897:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6897:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6534:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6644:9:10",
														"nodeType": "YulTypedName",
														"src": "6644:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6656:6:10",
														"nodeType": "YulTypedName",
														"src": "6656:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6664:6:10",
														"nodeType": "YulTypedName",
														"src": "6664:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6672:6:10",
														"nodeType": "YulTypedName",
														"src": "6672:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6683:4:10",
														"nodeType": "YulTypedName",
														"src": "6683:4:10",
														"type": ""
													}
												],
												"src": "6534:442:10"
											},
											{
												"body": {
													"nativeSrc": "7108:206:10",
													"nodeType": "YulBlock",
													"src": "7108:206:10",
													"statements": [
														{
															"nativeSrc": "7118:26:10",
															"nodeType": "YulAssignment",
															"src": "7118:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7130:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7130:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7141:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7126:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7126:3:10"
																},
																"nativeSrc": "7126:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7126:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7118:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7118:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7198:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7198:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7211:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7211:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7222:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7222:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:10"
																		},
																		"nativeSrc": "7207:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7207:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7154:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7154:43:10"
																},
																"nativeSrc": "7154:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7154:71:10"
															},
															"nativeSrc": "7154:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7154:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7279:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7279:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7303:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7303:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:10"
																		},
																		"nativeSrc": "7288:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7288:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7235:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7235:43:10"
																},
																"nativeSrc": "7235:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7235:72:10"
															},
															"nativeSrc": "7235:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7235:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6982:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7072:9:10",
														"nodeType": "YulTypedName",
														"src": "7072:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7084:6:10",
														"nodeType": "YulTypedName",
														"src": "7084:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7092:6:10",
														"nodeType": "YulTypedName",
														"src": "7092:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7103:4:10",
														"nodeType": "YulTypedName",
														"src": "7103:4:10",
														"type": ""
													}
												],
												"src": "6982:332:10"
											},
											{
												"body": {
													"nativeSrc": "7348:152:10",
													"nodeType": "YulBlock",
													"src": "7348:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7365:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7365:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7368:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7368:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7358:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7358:6:10"
																},
																"nativeSrc": "7358:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7358:88:10"
															},
															"nativeSrc": "7358:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7358:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7462:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7462:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7465:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7465:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7455:6:10"
																},
																"nativeSrc": "7455:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7455:15:10"
															},
															"nativeSrc": "7455:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7455:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7486:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7486:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7489:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7489:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7479:6:10"
																},
																"nativeSrc": "7479:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7479:15:10"
															},
															"nativeSrc": "7479:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7479:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7320:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7320:180:10"
											},
											{
												"body": {
													"nativeSrc": "7550:147:10",
													"nodeType": "YulBlock",
													"src": "7550:147:10",
													"statements": [
														{
															"nativeSrc": "7560:25:10",
															"nodeType": "YulAssignment",
															"src": "7560:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7583:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7565:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7565:17:10"
																},
																"nativeSrc": "7565:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7565:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7560:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7560:1:10"
																}
															]
														},
														{
															"nativeSrc": "7594:25:10",
															"nodeType": "YulAssignment",
															"src": "7594:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7617:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7617:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7599:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7599:17:10"
																},
																"nativeSrc": "7599:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7599:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7594:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7594:1:10"
																}
															]
														},
														{
															"nativeSrc": "7628:16:10",
															"nodeType": "YulAssignment",
															"src": "7628:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7639:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7639:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7642:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7642:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:10"
																},
																"nativeSrc": "7635:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7635:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7628:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7628:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7668:22:10",
																"nodeType": "YulBlock",
																"src": "7668:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7670:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7670:16:10"
																			},
																			"nativeSrc": "7670:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7670:18:10"
																		},
																		"nativeSrc": "7670:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7670:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7660:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7660:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7663:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7657:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7657:2:10"
																},
																"nativeSrc": "7657:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7657:10:10"
															},
															"nativeSrc": "7654:36:10",
															"nodeType": "YulIf",
															"src": "7654:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7506:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7537:1:10",
														"nodeType": "YulTypedName",
														"src": "7537:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7540:1:10",
														"nodeType": "YulTypedName",
														"src": "7540:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7546:3:10",
														"nodeType": "YulTypedName",
														"src": "7546:3:10",
														"type": ""
													}
												],
												"src": "7506:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"886": [
									{
										"length": 32,
										"start": 1153
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad5780639dc29fac116100715780639dc29fac146102c2578063a9059cbb146102de578063dd62ed3e1461030e578063f0141d841461033e578063f2fde38b1461035c57610121565b806370a0823114610242578063715018a6146102725780638456cb591461027c5780638da5cb5b1461028657806395d89b41146102a457610121565b8063313ce567116100f4578063313ce567146101c2578063355274ea146101e05780633f4ba83a146101fe57806340c10f19146102085780635c975abb1461022457610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e610378565b60405161013b9190611200565b60405180910390f35b61015e600480360381019061015991906112bb565b61040a565b60405161016b9190611316565b60405180910390f35b61017c61042d565b6040516101899190611340565b60405180910390f35b6101ac60048036038101906101a7919061135b565b610437565b6040516101b99190611316565b60405180910390f35b6101ca610466565b6040516101d791906113ca565b60405180910390f35b6101e861047d565b6040516101f59190611340565b60405180910390f35b6102066104a5565b005b610222600480360381019061021d91906112bb565b6104b7565b005b61022c6104cd565b6040516102399190611316565b60405180910390f35b61025c600480360381019061025791906113e5565b6104e4565b6040516102699190611340565b60405180910390f35b61027a61052d565b005b610284610541565b005b61028e610553565b60405161029b9190611421565b60405180910390f35b6102ac61057c565b6040516102b99190611200565b60405180910390f35b6102dc60048036038101906102d791906112bb565b61060e565b005b6102f860048036038101906102f391906112bb565b610624565b6040516103059190611316565b60405180910390f35b6103286004803603810190610323919061143c565b610647565b6040516103359190611340565b60405180910390f35b6103466106ce565b60405161035391906113ca565b60405180910390f35b610376600480360381019061037191906113e5565b6106e5565b005b606060048054610387906114ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103b3906114ab565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b5050505050905090565b60008061041561076b565b9050610422818585610773565b600191505092915050565b6000600354905090565b60008061044261076b565b905061044f858285610785565b61045a858585610819565b60019150509392505050565b6000600660019054906101000a900460ff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6104ad61090d565b6104b5610994565b565b6104bf61090d565b6104c982826109f7565b5050565b6000600660009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61053561090d565b61053f6000610a79565b565b61054961090d565b610551610b3d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461058b906114ab565b80601f01602080910402602001604051908101604052809291908181526020018280546105b7906114ab565b80156106045780601f106105d957610100808354040283529160200191610604565b820191906000526020600020905b8154815290600101906020018083116105e757829003601f168201915b5050505050905090565b61061661090d565b6106208282610ba0565b5050565b60008061062f61076b565b905061063c818585610819565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600660019054906101000a900460ff16905090565b6106ed61090d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361075f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107569190611421565b60405180910390fd5b61076881610a79565b50565b600033905090565b6107808383836001610c22565b505050565b60006107918484610647565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108135781811015610803578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107fa939291906114dc565b60405180910390fd5b61081284848484036000610c22565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108829190611421565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108fd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108f49190611421565b60405180910390fd5b610908838383610df9565b505050565b61091561076b565b73ffffffffffffffffffffffffffffffffffffffff16610933610553565b73ffffffffffffffffffffffffffffffffffffffff16146109925761095661076b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109899190611421565b60405180910390fd5b565b61099c610e09565b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109e061076b565b6040516109ed9190611421565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a695760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a609190611421565b60405180910390fd5b610a7560008383610df9565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b45610e49565b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b8961076b565b604051610b969190611421565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c125760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c099190611421565b60405180910390fd5b610c1e82600083610df9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c945760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c8b9190611421565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d065760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cfd9190611421565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610df3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dea9190611340565b60405180910390a35b50505050565b610e04838383610e8a565b505050565b610e116104cd565b610e47576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e516104cd565b15610e88576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e95838383610f30565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b576000610ed361047d565b90506000610edf61042d565b905081811115610f285780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610f1f929190611513565b60405180910390fd5b50505b505050565b610f38610e49565b610f43838383610f48565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f9a578060036000828254610f8e919061156b565b9250508190555061106f565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611027578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161101e939291906114dc565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110b85780600360008282540392505081905550611106565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111639190611340565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111aa57808201518184015260208101905061118f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111d282611170565b6111dc818561117b565b93506111ec81856020860161118c565b6111f5816111b6565b840191505092915050565b6000602082019050818103600083015261121a81846111c7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061125282611227565b9050919050565b61126281611247565b811461126d57600080fd5b50565b60008135905061127f81611259565b92915050565b6000819050919050565b61129881611285565b81146112a357600080fd5b50565b6000813590506112b58161128f565b92915050565b600080604083850312156112d2576112d1611222565b5b60006112e085828601611270565b92505060206112f1858286016112a6565b9150509250929050565b60008115159050919050565b611310816112fb565b82525050565b600060208201905061132b6000830184611307565b92915050565b61133a81611285565b82525050565b60006020820190506113556000830184611331565b92915050565b60008060006060848603121561137457611373611222565b5b600061138286828701611270565b935050602061139386828701611270565b92505060406113a4868287016112a6565b9150509250925092565b600060ff82169050919050565b6113c4816113ae565b82525050565b60006020820190506113df60008301846113bb565b92915050565b6000602082840312156113fb576113fa611222565b5b600061140984828501611270565b91505092915050565b61141b81611247565b82525050565b60006020820190506114366000830184611412565b92915050565b6000806040838503121561145357611452611222565b5b600061146185828601611270565b925050602061147285828601611270565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114c357607f821691505b6020821081036114d6576114d561147c565b5b50919050565b60006060820190506114f16000830186611412565b6114fe6020830185611331565b61150b6040830184611331565b949350505050565b60006040820190506115286000830185611331565b6115356020830184611331565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157682611285565b915061158183611285565b92508282019050808211156115995761159861153c565b5b9291505056fea26469706673582212207653d840f3fadb299407e8548914e0fb527fbc2ac577b74d87af02d095f56d1a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A4 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x224 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH2 0x541 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x415 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x442 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x44F DUP6 DUP3 DUP6 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x45A DUP6 DUP6 DUP6 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AD PUSH2 0x90D JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0x994 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x90D JUMP JUMPDEST PUSH2 0x4C9 DUP3 DUP3 PUSH2 0x9F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x53F PUSH1 0x0 PUSH2 0xA79 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x549 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x551 PUSH2 0xB3D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x604 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x604 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x616 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xBA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62F PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x63C DUP2 DUP6 DUP6 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x768 DUP2 PUSH2 0xA79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x780 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP5 DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x813 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x803 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x812 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xC22 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP4 DUP4 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0x76B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0x553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x992 JUMPI PUSH2 0x956 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x99C PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x9E0 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA69 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB45 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB89 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E DUP3 PUSH1 0x0 DUP4 PUSH2 0xDF9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8B SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD06 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDF3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE04 DUP4 DUP4 DUP4 PUSH2 0xE8A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE11 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE51 PUSH2 0x4CD JUMP JUMPDEST ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE95 DUP4 DUP4 DUP4 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH1 0x0 PUSH2 0xED3 PUSH2 0x47D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEDF PUSH2 0x42D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF28 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP3 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF38 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xF43 DUP4 DUP4 DUP4 PUSH2 0xF48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9A JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x106F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1027 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B8 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1106 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1163 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D2 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0x117B JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x121A DUP2 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1252 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x1247 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127F DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1298 DUP2 PUSH2 0x1285 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x128F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F1 DUP6 DUP3 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1310 DUP2 PUSH2 0x12FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x1285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1373 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP7 DUP3 DUP8 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1393 DUP7 DUP3 DUP8 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A4 DUP7 DUP3 DUP8 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C4 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x141B DUP2 PUSH2 0x1247 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1461 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1472 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x147C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14F1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x14FE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x150B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1528 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1576 DUP3 PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP PUSH2 0x1581 DUP4 PUSH2 0x1285 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x153C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x53D840F3FADB299407E8548914E0FB527FBC2AC577B74D DUP8 0xAF MUL 0xD0 SWAP6 CREATE2 PUSH14 0x1A64736F6C634300081A00330000 ",
							"sourceMap": "267:1207:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;738:88:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1119:65:9;;;:::i;:::-;;834:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1050:61:9;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:105:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1387:82:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;738:88:9:-;788:5;813;;;;;;;;;;;806:12;;738:88;:::o;923:81:4:-;967:7;993:4;986:11;;923:81;:::o;1119:65:9:-;1531:13:0;:11;:13::i;:::-;1166:10:9::1;:8;:10::i;:::-;1119:65::o:0;834:95::-;1531:13:0;:11;:13::i;:::-;904:17:9::1;910:2;914:6;904:5;:17::i;:::-;834:95:::0;;:::o;1850:84:8:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1050:61:9:-;1531:13:0;:11;:13::i;:::-;1095:8:9::1;:6;:8::i;:::-;1050:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;937:105:9:-;1531:13:0;:11;:13::i;:::-;1012:22:9::1;1018:7;1027:6;1012:5;:22::i;:::-;937:105:::0;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1387:82:9:-;1431:5;1456;;;;;;;;;;;1449:12;;1387:82;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:8:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:8:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;8247:206:2:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1192:187:9:-;1341:30;1355:4;1361:2;1365:5;1341:13;:30::i;:::-;1192:187;;;:::o;2202:126:8:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1059:371:4:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;1112:145:5:-;1474:19:8;:17;:19::i;:::-;1220:30:5::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:332::-;7103:4;7141:2;7130:9;7126:18;7118:26;;7154:71;7222:1;7211:9;7207:17;7198:6;7154:71;:::i;:::-;7235:72;7303:2;7292:9;7288:18;7279:6;7235:72;:::i;:::-;6982:332;;;;;:::o;7320:180::-;7368:77;7365:1;7358:88;7465:4;7462:1;7455:15;7489:4;7486:1;7479:15;7506:191;7546:3;7565:20;7583:1;7565:20;:::i;:::-;7560:25;;7599:20;7617:1;7599:20;:::i;:::-;7594:25;;7642:1;7639;7635:9;7628:16;;7663:3;7660:1;7657:10;7654:36;;;7670:18;;:::i;:::-;7654:36;7506:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1117800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"burn(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "2552",
								"getDecimals()": "2617",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2611",
								"pause()": "infinite",
								"paused()": "2590",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 359,
									"end": 730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 643,
									"end": 647,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 637,
									"end": 639,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 637,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 637,
									"end": 647,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 637,
									"end": 647,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 637,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 637,
									"end": 647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 637,
									"end": 647,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 637,
									"end": 647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 628,
									"end": 634,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 628,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 647,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 647,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 628,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 628,
									"end": 647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 628,
									"end": 647,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 562,
									"end": 566,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 568,
									"end": 574,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 593,
									"end": 605,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 673,
									"end": 677,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 665,
									"end": 670,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 665,
									"end": 670,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 665,
									"end": 677,
									"modifierDepth": 3,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 722,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 694,
									"end": 706,
									"modifierDepth": 3,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 708,
									"end": 721,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 688,
									"end": 693,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 688,
									"end": 693,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 688,
									"end": 693,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 688,
									"end": 722,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 688,
									"end": 722,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 688,
									"end": 722,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 722,
									"modifierDepth": 3,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 688,
									"end": 722,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 359,
									"end": 730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1379,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1192,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1355,
									"end": 1359,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1363,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1365,
									"end": 1370,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1354,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1341,
									"end": 1354,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1371,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1341,
									"end": 1371,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1341,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1379,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1379,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1379,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1173,
									"end": 1175,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1177,
									"end": 1182,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1328,
									"end": 1337,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1364,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1234,
									"end": 1238,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1242,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1244,
									"end": 1249,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 967,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3196,
									"end": 3203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1897,
									"end": 1901,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1322,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1205,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1316,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1445,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1328,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1438,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1439,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1543,
									"end": 1545,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1536,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1537,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1547,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1547,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1559,
									"end": 1739,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1559,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1607,
									"end": 1684,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1685,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 1708,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1694,
									"end": 1709,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1732,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1725,
									"end": 1726,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1718,
									"end": 1733,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 1850,
									"end": 1854,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1828,
									"end": 1855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1820,
									"end": 1826,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1816,
									"end": 1856,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 1956,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1965,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1940,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1910,
									"end": 1920,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1907,
									"end": 1941,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1904,
									"end": 1966,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1969,
									"end": 1987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2019,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2007,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1998,
									"end": 2020,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 2026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 2026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2066,
									"end": 2072,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2093,
									"end": 2113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2083,
									"end": 2113,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2083,
									"end": 2113,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 2150,
									"end": 2154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2122,
									"end": 2155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2229,
									"end": 2233,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2319,
									"end": 2337,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2317,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2338,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2341,
									"end": 2359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 2401,
									"end": 2407,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2379,
									"end": 2408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2408,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2408,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2457,
									"end": 2461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2468,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2445,
									"end": 2468,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2445,
									"end": 2468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2481,
									"end": 2729,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2481,
									"end": 2729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2563,
									"end": 2564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 2593,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2581,
									"end": 2594,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2672,
									"end": 2673,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2667,
									"end": 2670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2663,
									"end": 2674,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2657,
									"end": 2675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2654,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2648,
									"end": 2651,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2644,
									"end": 2655,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2637,
									"end": 2676,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2609,
									"end": 2611,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2606,
									"end": 2607,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2602,
									"end": 2612,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2597,
									"end": 2612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2597,
									"end": 2612,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 2721,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2711,
									"end": 2717,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2706,
									"end": 2709,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2695,
									"end": 2722,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2543,
									"end": 2729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2481,
									"end": 2729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2481,
									"end": 2729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2481,
									"end": 2729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2481,
									"end": 2729,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2849,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 2865,
									"end": 2914,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 2907,
									"end": 2913,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2865,
									"end": 2914,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2865,
									"end": 2914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2865,
									"end": 2914,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 2865,
									"end": 2914,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2849,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2849,
									"end": 2915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2849,
									"end": 2915,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 2849,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2840,
									"end": 2915,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2840,
									"end": 2915,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2938,
									"end": 2944,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2931,
									"end": 2936,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2924,
									"end": 2945,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2976,
									"end": 2980,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2969,
									"end": 2974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2981,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3014,
									"end": 3017,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3011,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3000,
									"end": 3003,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3012,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2993,
									"end": 3018,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2990,
									"end": 3102,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2990,
									"end": 3102,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 2990,
									"end": 3102,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3021,
									"end": 3100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 3021,
									"end": 3100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3021,
									"end": 3100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3021,
									"end": 3100,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 3021,
									"end": 3100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2990,
									"end": 3102,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 2990,
									"end": 3102,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3111,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 3156,
									"end": 3162,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3146,
									"end": 3149,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3111,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3111,
									"end": 3163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3111,
									"end": 3163,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 3111,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2830,
									"end": 3169,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 3169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3256,
									"end": 3261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3305,
									"end": 3308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3302,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3290,
									"end": 3296,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3286,
									"end": 3303,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3282,
									"end": 3309,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3272,
									"end": 3394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 3272,
									"end": 3394,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3313,
									"end": 3392,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 3313,
									"end": 3392,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3313,
									"end": 3392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3313,
									"end": 3392,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 3313,
									"end": 3392,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3272,
									"end": 3394,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 3272,
									"end": 3394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3430,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3448,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 3534,
									"end": 3537,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3526,
									"end": 3532,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3511,
									"end": 3517,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3524,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3448,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3448,
									"end": 3538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3448,
									"end": 3538,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 3448,
									"end": 3538,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3538,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3538,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3262,
									"end": 3544,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3550,
									"end": 3636,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3550,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3585,
									"end": 3592,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3625,
									"end": 3629,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 3618,
									"end": 3623,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3614,
									"end": 3630,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3603,
									"end": 3630,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3603,
									"end": 3630,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3550,
									"end": 3636,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3550,
									"end": 3636,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3550,
									"end": 3636,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3550,
									"end": 3636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3642,
									"end": 3760,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3642,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3713,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 3729,
									"end": 3734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3713,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3713,
									"end": 3735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3713,
									"end": 3735,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 3713,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3706,
									"end": 3711,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3703,
									"end": 3736,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 3693,
									"end": 3754,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3747,
									"end": 3748,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3740,
									"end": 3752,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3754,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 3693,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3642,
									"end": 3760,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3642,
									"end": 3760,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3821,
									"end": 3826,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3852,
									"end": 3858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3859,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3837,
									"end": 3859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3837,
									"end": 3859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 3893,
									"end": 3898,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3868,
									"end": 3899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4052,
									"end": 4058,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4060,
									"end": 4066,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4068,
									"end": 4074,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4084,
									"end": 4090,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4136,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 4121,
									"end": 4130,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4112,
									"end": 4119,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4108,
									"end": 4131,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4104,
									"end": 4137,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4221,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 4101,
									"end": 4221,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 4140,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4140,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4219,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 4140,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4221,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 4101,
									"end": 4221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4260,
									"end": 4261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4285,
									"end": 4349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 4341,
									"end": 4348,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4332,
									"end": 4338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4330,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 4317,
									"end": 4339,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4285,
									"end": 4349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4285,
									"end": 4349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4285,
									"end": 4349,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 4285,
									"end": 4349,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4275,
									"end": 4349,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 4275,
									"end": 4349,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4231,
									"end": 4359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4398,
									"end": 4400,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4424,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 4480,
									"end": 4487,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4471,
									"end": 4477,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4460,
									"end": 4469,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 4456,
									"end": 4478,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4424,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4424,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4424,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 4424,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4414,
									"end": 4488,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4414,
									"end": 4488,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4369,
									"end": 4498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4558,
									"end": 4560,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4547,
									"end": 4556,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4543,
									"end": 4561,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4537,
									"end": 4562,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4607,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4578,
									"end": 4608,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4692,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 4575,
									"end": 4692,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4611,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 4611,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4611,
									"end": 4690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4611,
									"end": 4690,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 4611,
									"end": 4690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4692,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 4575,
									"end": 4692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4716,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 4782,
									"end": 4789,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4773,
									"end": 4779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4762,
									"end": 4771,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 4758,
									"end": 4780,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4716,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4716,
									"end": 4790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4716,
									"end": 4790,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 4716,
									"end": 4790,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4706,
									"end": 4790,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4706,
									"end": 4790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4508,
									"end": 4800,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4862,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4849,
									"end": 4858,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4845,
									"end": 4863,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4839,
									"end": 4864,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4909,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4883,
									"end": 4889,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4910,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4877,
									"end": 4994,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4877,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 4877,
									"end": 4994,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 4913,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4913,
									"end": 4992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 4992,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 4913,
									"end": 4992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4877,
									"end": 4994,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 4877,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 5084,
									"end": 5091,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5081,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5073,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5082,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 5018,
									"end": 5092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5092,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 5018,
									"end": 5092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5008,
									"end": 5092,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5008,
									"end": 5092,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4810,
									"end": 5102,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5141,
									"end": 5144,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5168,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 5222,
									"end": 5229,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5213,
									"end": 5219,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5202,
									"end": 5211,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 5198,
									"end": 5220,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5168,
									"end": 5230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5230,
									"name": "tag",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 5168,
									"end": 5230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5158,
									"end": 5230,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5158,
									"end": 5230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5112,
									"end": 5240,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5279,
									"end": 5282,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 5306,
									"end": 5370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 5362,
									"end": 5369,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5353,
									"end": 5359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5342,
									"end": 5351,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 5338,
									"end": 5360,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5306,
									"end": 5370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5306,
									"end": 5370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5306,
									"end": 5370,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 5306,
									"end": 5370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5370,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5250,
									"end": 5380,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 5387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5393,
									"end": 5573,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5393,
									"end": 5573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5441,
									"end": 5518,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5438,
									"end": 5439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5431,
									"end": 5519,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5538,
									"end": 5542,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5535,
									"end": 5536,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5528,
									"end": 5543,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5562,
									"end": 5566,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5559,
									"end": 5560,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5552,
									"end": 5567,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5681,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5579,
									"end": 5681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5621,
									"end": 5629,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5668,
									"end": 5673,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5665,
									"end": 5666,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5661,
									"end": 5674,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5674,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5674,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5681,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5681,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5755,
									"end": 5759,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5779,
									"end": 5785,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5770,
									"end": 5785,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5770,
									"end": 5785,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5803,
									"end": 5808,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5794,
									"end": 5808,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5794,
									"end": 5808,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 5839,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5836,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5825,
									"end": 5840,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5933,
									"end": 5937,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5928,
									"end": 5931,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5924,
									"end": 5938,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5918,
									"end": 5922,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5915,
									"end": 5939,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5962,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5962,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 5912,
									"end": 5962,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5942,
									"end": 5960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 5942,
									"end": 5960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5942,
									"end": 5960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5942,
									"end": 5960,
									"name": "tag",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 5942,
									"end": 5960,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5962,
									"name": "tag",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 5912,
									"end": 5962,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5992,
									"end": 5993,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5982,
									"end": 5990,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5978,
									"end": 5994,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5975,
									"end": 6426,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5975,
									"end": 6426,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 5975,
									"end": 6426,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6400,
									"end": 6405,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6396,
									"end": 6412,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6387,
									"end": 6412,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6387,
									"end": 6412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5975,
									"end": 6426,
									"name": "tag",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 5975,
									"end": 6426,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6457,
									"end": 6461,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6447,
									"end": 6462,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6487,
									"end": 6519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 6510,
									"end": 6518,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6487,
									"end": 6519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 6487,
									"end": 6519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6487,
									"end": 6519,
									"name": "tag",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 6487,
									"end": 6519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6475,
									"end": 6519,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6475,
									"end": 6519,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "tag",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 5817,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5687,
									"end": 6535,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6595,
									"end": 6600,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6786,
									"end": 6794,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6776,
									"end": 6816,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 6776,
									"end": 6816,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6807,
									"end": 6808,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6798,
									"end": 6808,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6798,
									"end": 6808,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 6809,
									"end": 6814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6776,
									"end": 6816,
									"name": "tag",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 6776,
									"end": 6816,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6835,
									"end": 6839,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 6825,
									"end": 6861,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6852,
									"end": 6853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6843,
									"end": 6853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6843,
									"end": 6853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 6854,
									"end": 6859,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6861,
									"name": "tag",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 6825,
									"end": 6861,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 6925,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6969,
									"end": 6970,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7005,
									"end": 7006,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6914,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 6914,
									"end": 7191,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "tag",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 6964,
									"end": 6991,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6973,
									"end": 6983,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6973,
									"end": 6983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 6989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 6984,
									"end": 6989,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "tag",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 7000,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7045,
									"end": 7048,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 7035,
									"end": 7043,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7032,
									"end": 7049,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7029,
									"end": 7072,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7029,
									"end": 7072,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 7029,
									"end": 7072,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 7052,
									"end": 7070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 7052,
									"end": 7070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7070,
									"name": "tag",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 7052,
									"end": 7070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7029,
									"end": 7072,
									"name": "tag",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 7029,
									"end": 7072,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7101,
									"end": 7109,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7099,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7094,
									"end": 7110,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 7085,
									"end": 7110,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7085,
									"end": 7110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7139,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7129,
									"end": 7134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7126,
									"end": 7140,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7163,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 7123,
									"end": 7163,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7143,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 7143,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 7143,
									"end": 7161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7143,
									"end": 7161,
									"name": "tag",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 7143,
									"end": 7161,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7163,
									"name": "tag",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 7123,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 7181,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 7181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 7176,
									"end": 7181,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6914,
									"end": 7191,
									"name": "tag",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 6914,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6914,
									"end": 7191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7300,
									"end": 7302,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7290,
									"end": 7298,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7287,
									"end": 7303,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7281,
									"end": 7284,
									"name": "PUSH",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7275,
									"end": 7279,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7272,
									"end": 7285,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 7304,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7250,
									"end": 7252,
									"name": "PUSH",
									"source": 10,
									"value": "4E"
								},
								{
									"begin": 7240,
									"end": 7248,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7237,
									"end": 7253,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7232,
									"end": 7234,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 7226,
									"end": 7230,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7223,
									"end": 7235,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7254,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7203,
									"end": 7314,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7200,
									"end": 7446,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7200,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 7200,
									"end": 7446,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 7364,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7350,
									"end": 7354,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7346,
									"end": 7365,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 7337,
									"end": 7365,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7337,
									"end": 7365,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7391,
									"end": 7394,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7389,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7395,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7378,
									"end": 7418,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7378,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 7378,
									"end": 7418,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7398,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 7398,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 7398,
									"end": 7416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7398,
									"end": 7416,
									"name": "tag",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 7398,
									"end": 7416,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7378,
									"end": 7418,
									"name": "tag",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 7378,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7431,
									"end": 7436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 7431,
									"end": 7436,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7200,
									"end": 7446,
									"name": "tag",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 7200,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7471,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 7509,
									"end": 7512,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7499,
									"end": 7507,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7490,
									"end": 7491,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7471,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 7471,
									"end": 7513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7471,
									"end": 7513,
									"name": "tag",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 7471,
									"end": 7513,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7456,
									"end": 7513,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7456,
									"end": 7513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7456,
									"end": 7513,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7456,
									"end": 7513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7545,
									"end": 7549,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7540,
									"end": 7543,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7536,
									"end": 7550,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7526,
									"end": 7551,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7523,
									"end": 7574,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7523,
									"end": 7574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "217"
								},
								{
									"begin": 7523,
									"end": 7574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7554,
									"end": 7572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 7554,
									"end": 7572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 7554,
									"end": 7572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7554,
									"end": 7572,
									"name": "tag",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 7554,
									"end": 7572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7523,
									"end": 7574,
									"name": "tag",
									"source": 10,
									"value": "217"
								},
								{
									"begin": 7523,
									"end": 7574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7603,
									"end": 7607,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7596,
									"end": 7601,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7592,
									"end": 7608,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7583,
									"end": 7608,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7583,
									"end": 7608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "tag",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6541,
									"end": 7614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 7683,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7702,
									"end": 7725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "220"
								},
								{
									"begin": 7720,
									"end": 7724,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7702,
									"end": 7725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 7702,
									"end": 7725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7702,
									"end": 7725,
									"name": "tag",
									"source": 10,
									"value": "220"
								},
								{
									"begin": 7702,
									"end": 7725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7694,
									"end": 7725,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7694,
									"end": 7725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7746,
									"end": 7771,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 7762,
									"end": 7770,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7746,
									"end": 7771,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 7746,
									"end": 7771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7746,
									"end": 7771,
									"name": "tag",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 7746,
									"end": 7771,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7734,
									"end": 7771,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7734,
									"end": 7771,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 7827,
									"end": 7893,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7817,
									"end": 7825,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7811,
									"end": 7815,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 7790,
									"end": 7894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7894,
									"name": "tag",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 7790,
									"end": 7894,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7781,
									"end": 7894,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7781,
									"end": 7894,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7620,
									"end": 7901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7947,
									"end": 7954,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7970,
									"end": 7990,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 7988,
									"end": 7989,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7970,
									"end": 7990,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 7970,
									"end": 7990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7970,
									"end": 7990,
									"name": "tag",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 7970,
									"end": 7990,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7965,
									"end": 7990,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7965,
									"end": 7990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8004,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 8022,
									"end": 8023,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8004,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 8004,
									"end": 8024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8004,
									"end": 8024,
									"name": "tag",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 8004,
									"end": 8024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7999,
									"end": 8024,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7999,
									"end": 8024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8059,
									"end": 8060,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8056,
									"end": 8057,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8052,
									"end": 8061,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8081,
									"end": 8111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 8099,
									"end": 8110,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8081,
									"end": 8111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 8081,
									"end": 8111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8081,
									"end": 8111,
									"name": "tag",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 8081,
									"end": 8111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8070,
									"end": 8111,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8070,
									"end": 8111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8260,
									"end": 8261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8251,
									"end": 8258,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8247,
									"end": 8262,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 8244,
									"end": 8245,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8241,
									"end": 8263,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8221,
									"end": 8222,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8214,
									"end": 8223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8194,
									"end": 8277,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 8171,
									"end": 8310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 8171,
									"end": 8310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8290,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 8290,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 8290,
									"end": 8308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8290,
									"end": 8308,
									"name": "tag",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 8290,
									"end": 8308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8171,
									"end": 8310,
									"name": "tag",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 8171,
									"end": 8310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 8317,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7907,
									"end": 8317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8323,
									"end": 8441,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 8323,
									"end": 8441,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8410,
									"end": 8434,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 8428,
									"end": 8433,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8410,
									"end": 8434,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 8410,
									"end": 8434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8410,
									"end": 8434,
									"name": "tag",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 8410,
									"end": 8434,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8405,
									"end": 8408,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8398,
									"end": 8435,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8323,
									"end": 8441,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8323,
									"end": 8441,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8323,
									"end": 8441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8544,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8578,
									"end": 8580,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8567,
									"end": 8576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8563,
									"end": 8581,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8555,
									"end": 8581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8555,
									"end": 8581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 8659,
									"end": 8660,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8648,
									"end": 8657,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8644,
									"end": 8661,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8635,
									"end": 8641,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 8591,
									"end": 8662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8662,
									"name": "tag",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 8591,
									"end": 8662,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8447,
									"end": 8669,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8675,
									"end": 8774,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 8675,
									"end": 8774,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8727,
									"end": 8733,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8761,
									"end": 8766,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8755,
									"end": 8767,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8745,
									"end": 8767,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8745,
									"end": 8767,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8675,
									"end": 8774,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8675,
									"end": 8774,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8675,
									"end": 8774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8675,
									"end": 8774,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8780,
									"end": 8960,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 8780,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8828,
									"end": 8905,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8825,
									"end": 8826,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8818,
									"end": 8906,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8925,
									"end": 8929,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 8922,
									"end": 8923,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 8915,
									"end": 8930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8949,
									"end": 8953,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 8946,
									"end": 8947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8939,
									"end": 8954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 8966,
									"end": 9286,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 8966,
									"end": 9286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9010,
									"end": 9016,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9047,
									"end": 9048,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9037,
									"end": 9049,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 9027,
									"end": 9049,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9027,
									"end": 9049,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9094,
									"end": 9095,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 9088,
									"end": 9092,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9084,
									"end": 9096,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9115,
									"end": 9133,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9105,
									"end": 9186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 9105,
									"end": 9186,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9171,
									"end": 9175,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 9163,
									"end": 9169,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9159,
									"end": 9176,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9149,
									"end": 9176,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9149,
									"end": 9176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9105,
									"end": 9186,
									"name": "tag",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 9105,
									"end": 9186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9233,
									"end": 9235,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9225,
									"end": 9231,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9222,
									"end": 9236,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 9202,
									"end": 9220,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9199,
									"end": 9237,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 9196,
									"end": 9280,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 9196,
									"end": 9280,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9252,
									"end": 9270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 9252,
									"end": 9270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 9252,
									"end": 9270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9252,
									"end": 9270,
									"name": "tag",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 9252,
									"end": 9270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9196,
									"end": 9280,
									"name": "tag",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 9196,
									"end": 9280,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9017,
									"end": 9286,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8966,
									"end": 9286,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8966,
									"end": 9286,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8966,
									"end": 9286,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8966,
									"end": 9286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9292,
									"end": 9433,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 9292,
									"end": 9433,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9341,
									"end": 9345,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9364,
									"end": 9367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9356,
									"end": 9367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9356,
									"end": 9367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9387,
									"end": 9390,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9384,
									"end": 9385,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9377,
									"end": 9391,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9421,
									"end": 9425,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9418,
									"end": 9419,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9408,
									"end": 9426,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 9400,
									"end": 9426,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9400,
									"end": 9426,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9292,
									"end": 9433,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9292,
									"end": 9433,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9292,
									"end": 9433,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9292,
									"end": 9433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9532,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 9439,
									"end": 9532,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9476,
									"end": 9482,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9523,
									"end": 9525,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9518,
									"end": 9520,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 9511,
									"end": 9516,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9507,
									"end": 9521,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9503,
									"end": 9526,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 9493,
									"end": 9526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9493,
									"end": 9526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9532,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9532,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9532,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9532,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9582,
									"end": 9590,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9632,
									"end": 9637,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9626,
									"end": 9630,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9622,
									"end": 9638,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 9601,
									"end": 9638,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9601,
									"end": 9638,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9720,
									"end": 9726,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9770,
									"end": 9771,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 9758,
									"end": 9768,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9754,
									"end": 9772,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 9793,
									"end": 9890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 9823,
									"end": 9889,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9793,
									"end": 9890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 9793,
									"end": 9890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9793,
									"end": 9890,
									"name": "tag",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 9793,
									"end": 9890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9911,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 9941,
									"end": 9949,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9930,
									"end": 9939,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9911,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 9911,
									"end": 9950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9911,
									"end": 9950,
									"name": "tag",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 9911,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9899,
									"end": 9950,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 9899,
									"end": 9950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9983,
									"end": 9987,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9979,
									"end": 9988,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 9972,
									"end": 9977,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9968,
									"end": 9989,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9959,
									"end": 9989,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9959,
									"end": 9989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10032,
									"end": 10036,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 10022,
									"end": 10030,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10018,
									"end": 10037,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 10011,
									"end": 10016,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10008,
									"end": 10038,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 9998,
									"end": 10038,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9998,
									"end": 10038,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9727,
									"end": 10044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9727,
									"end": 10044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9651,
									"end": 10044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10050,
									"end": 10110,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 10050,
									"end": 10110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10078,
									"end": 10081,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10099,
									"end": 10104,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10092,
									"end": 10104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10092,
									"end": 10104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10050,
									"end": 10110,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10050,
									"end": 10110,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10050,
									"end": 10110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10050,
									"end": 10110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10116,
									"end": 10258,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 10116,
									"end": 10258,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10175,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10199,
									"end": 10252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "247"
								},
								{
									"begin": 10217,
									"end": 10251,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 10226,
									"end": 10250,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 10244,
									"end": 10249,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10226,
									"end": 10250,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 10226,
									"end": 10250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10226,
									"end": 10250,
									"name": "tag",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 10226,
									"end": 10250,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10217,
									"end": 10251,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 10217,
									"end": 10251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10217,
									"end": 10251,
									"name": "tag",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 10217,
									"end": 10251,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10199,
									"end": 10252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 10199,
									"end": 10252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10199,
									"end": 10252,
									"name": "tag",
									"source": 10,
									"value": "247"
								},
								{
									"begin": 10199,
									"end": 10252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10186,
									"end": 10252,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10186,
									"end": 10252,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10116,
									"end": 10258,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10116,
									"end": 10258,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10116,
									"end": 10258,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10116,
									"end": 10258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10264,
									"end": 10339,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 10264,
									"end": 10339,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10307,
									"end": 10310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10328,
									"end": 10333,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10321,
									"end": 10333,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10321,
									"end": 10333,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10264,
									"end": 10339,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10264,
									"end": 10339,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10264,
									"end": 10339,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10264,
									"end": 10339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10345,
									"end": 10614,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 10345,
									"end": 10614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10455,
									"end": 10494,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 10486,
									"end": 10493,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10455,
									"end": 10494,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 10455,
									"end": 10494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10455,
									"end": 10494,
									"name": "tag",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 10455,
									"end": 10494,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10516,
									"end": 10607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "253"
								},
								{
									"begin": 10565,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 10589,
									"end": 10605,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10565,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 10565,
									"end": 10606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10565,
									"end": 10606,
									"name": "tag",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 10565,
									"end": 10606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10557,
									"end": 10563,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10550,
									"end": 10554,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10544,
									"end": 10555,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 10516,
									"end": 10607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 10516,
									"end": 10607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10516,
									"end": 10607,
									"name": "tag",
									"source": 10,
									"value": "253"
								},
								{
									"begin": 10516,
									"end": 10607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10510,
									"end": 10514,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10503,
									"end": 10608,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 10421,
									"end": 10614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10345,
									"end": 10614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10345,
									"end": 10614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10345,
									"end": 10614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10345,
									"end": 10614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10620,
									"end": 10693,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 10620,
									"end": 10693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10665,
									"end": 10668,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10620,
									"end": 10693,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10620,
									"end": 10693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10699,
									"end": 10888,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 10699,
									"end": 10888,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10776,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "257"
								},
								{
									"begin": 10776,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 10776,
									"end": 10808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10776,
									"end": 10808,
									"name": "tag",
									"source": 10,
									"value": "257"
								},
								{
									"begin": 10776,
									"end": 10808,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10817,
									"end": 10882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 10875,
									"end": 10881,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10867,
									"end": 10873,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10861,
									"end": 10865,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10817,
									"end": 10882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 10817,
									"end": 10882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10817,
									"end": 10882,
									"name": "tag",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 10817,
									"end": 10882,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10752,
									"end": 10888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10699,
									"end": 10888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10699,
									"end": 10888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10699,
									"end": 10888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10894,
									"end": 11080,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 10894,
									"end": 11080,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "tag",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10971,
									"end": 10974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10964,
									"end": 10969,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10961,
									"end": 10975,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "262"
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11025,
									"end": 11064,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 11062,
									"end": 11063,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11055,
									"end": 11060,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11025,
									"end": 11064,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 11025,
									"end": 11064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11025,
									"end": 11064,
									"name": "tag",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 11025,
									"end": 11064,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10998,
									"end": 10999,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10991,
									"end": 10996,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10987,
									"end": 11000,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10978,
									"end": 11000,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10978,
									"end": 11000,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "tag",
									"source": 10,
									"value": "262"
								},
								{
									"begin": 10954,
									"end": 11074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10894,
									"end": 11080,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10894,
									"end": 11080,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10894,
									"end": 11080,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11086,
									"end": 11629,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 11086,
									"end": 11629,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11187,
									"end": 11189,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 11182,
									"end": 11185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11179,
									"end": 11190,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11176,
									"end": 11622,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11176,
									"end": 11622,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 11176,
									"end": 11622,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11221,
									"end": 11259,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "266"
								},
								{
									"begin": 11253,
									"end": 11258,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11221,
									"end": 11259,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 11221,
									"end": 11259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11221,
									"end": 11259,
									"name": "tag",
									"source": 10,
									"value": "266"
								},
								{
									"begin": 11221,
									"end": 11259,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11305,
									"end": 11334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "267"
								},
								{
									"begin": 11323,
									"end": 11333,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11305,
									"end": 11334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 11305,
									"end": 11334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11305,
									"end": 11334,
									"name": "tag",
									"source": 10,
									"value": "267"
								},
								{
									"begin": 11305,
									"end": 11334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11295,
									"end": 11303,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11291,
									"end": 11335,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11488,
									"end": 11490,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 11476,
									"end": 11486,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11473,
									"end": 11491,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 11470,
									"end": 11519,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11470,
									"end": 11519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "268"
								},
								{
									"begin": 11470,
									"end": 11519,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11509,
									"end": 11517,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11494,
									"end": 11517,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11494,
									"end": 11517,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11470,
									"end": 11519,
									"name": "tag",
									"source": 10,
									"value": "268"
								},
								{
									"begin": 11470,
									"end": 11519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11532,
									"end": 11612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "269"
								},
								{
									"begin": 11588,
									"end": 11610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "270"
								},
								{
									"begin": 11606,
									"end": 11609,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11588,
									"end": 11610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 11588,
									"end": 11610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11588,
									"end": 11610,
									"name": "tag",
									"source": 10,
									"value": "270"
								},
								{
									"begin": 11588,
									"end": 11610,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11578,
									"end": 11586,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11574,
									"end": 11611,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11561,
									"end": 11572,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11532,
									"end": 11612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 11532,
									"end": 11612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11532,
									"end": 11612,
									"name": "tag",
									"source": 10,
									"value": "269"
								},
								{
									"begin": 11532,
									"end": 11612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11191,
									"end": 11622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11191,
									"end": 11622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11176,
									"end": 11622,
									"name": "tag",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 11176,
									"end": 11622,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11086,
									"end": 11629,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11086,
									"end": 11629,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11086,
									"end": 11629,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11086,
									"end": 11629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11689,
									"end": 11697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11739,
									"end": 11744,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11733,
									"end": 11737,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11729,
									"end": 11745,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 11708,
									"end": 11745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11708,
									"end": 11745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11635,
									"end": 11752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11802,
									"end": 11808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11835,
									"end": 11886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "273"
								},
								{
									"begin": 11883,
									"end": 11884,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11879,
									"end": 11885,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 11871,
									"end": 11876,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11868,
									"end": 11869,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 11864,
									"end": 11877,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 11835,
									"end": 11886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 11835,
									"end": 11886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11835,
									"end": 11886,
									"name": "tag",
									"source": 10,
									"value": "273"
								},
								{
									"begin": 11835,
									"end": 11886,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11831,
									"end": 11887,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 11916,
									"end": 11920,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 11910,
									"end": 11914,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11906,
									"end": 11921,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 11896,
									"end": 11921,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11896,
									"end": 11921,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11809,
									"end": 11927,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11758,
									"end": 11927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12008,
									"end": 12012,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12154,
									"end": 12183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "275"
								},
								{
									"begin": 12179,
									"end": 12182,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12173,
									"end": 12177,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12154,
									"end": 12183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 12154,
									"end": 12183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12154,
									"end": 12183,
									"name": "tag",
									"source": 10,
									"value": "275"
								},
								{
									"begin": 12154,
									"end": 12183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12146,
									"end": 12183,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12146,
									"end": 12183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12216,
									"end": 12219,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12213,
									"end": 12214,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 12209,
									"end": 12220,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12203,
									"end": 12207,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12200,
									"end": 12221,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 12192,
									"end": 12221,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12192,
									"end": 12221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11932,
									"end": 12227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12232,
									"end": 13627,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 12232,
									"end": 13627,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12349,
									"end": 12386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "277"
								},
								{
									"begin": 12382,
									"end": 12385,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12349,
									"end": 12386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 12349,
									"end": 12386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12349,
									"end": 12386,
									"name": "tag",
									"source": 10,
									"value": "277"
								},
								{
									"begin": 12349,
									"end": 12386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12451,
									"end": 12469,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12443,
									"end": 12449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12440,
									"end": 12470,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12437,
									"end": 12493,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12437,
									"end": 12493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "278"
								},
								{
									"begin": 12437,
									"end": 12493,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12473,
									"end": 12491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "279"
								},
								{
									"begin": 12473,
									"end": 12491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 12473,
									"end": 12491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12473,
									"end": 12491,
									"name": "tag",
									"source": 10,
									"value": "279"
								},
								{
									"begin": 12473,
									"end": 12491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12437,
									"end": 12493,
									"name": "tag",
									"source": 10,
									"value": "278"
								},
								{
									"begin": 12437,
									"end": 12493,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12517,
									"end": 12555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "280"
								},
								{
									"begin": 12549,
									"end": 12553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12543,
									"end": 12554,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 12517,
									"end": 12555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 12517,
									"end": 12555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12517,
									"end": 12555,
									"name": "tag",
									"source": 10,
									"value": "280"
								},
								{
									"begin": 12517,
									"end": 12555,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12602,
									"end": 12669,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "281"
								},
								{
									"begin": 12662,
									"end": 12668,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12654,
									"end": 12660,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12648,
									"end": 12652,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 12602,
									"end": 12669,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 12602,
									"end": 12669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12602,
									"end": 12669,
									"name": "tag",
									"source": 10,
									"value": "281"
								},
								{
									"begin": 12602,
									"end": 12669,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12696,
									"end": 12697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12720,
									"end": 12724,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 12707,
									"end": 12724,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12707,
									"end": 12724,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12752,
									"end": 12754,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 12744,
									"end": 12750,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12741,
									"end": 12755,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12769,
									"end": 12770,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "283"
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13426,
									"end": 13427,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13443,
									"end": 13449,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13440,
									"end": 13517,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13440,
									"end": 13517,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "284"
								},
								{
									"begin": 13440,
									"end": 13517,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13492,
									"end": 13501,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13487,
									"end": 13490,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 13483,
									"end": 13502,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13477,
									"end": 13503,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 13468,
									"end": 13503,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13468,
									"end": 13503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13440,
									"end": 13517,
									"name": "tag",
									"source": 10,
									"value": "284"
								},
								{
									"begin": 13440,
									"end": 13517,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13543,
									"end": 13610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "285"
								},
								{
									"begin": 13603,
									"end": 13609,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 13596,
									"end": 13601,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13543,
									"end": 13610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 13543,
									"end": 13610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13543,
									"end": 13610,
									"name": "tag",
									"source": 10,
									"value": "285"
								},
								{
									"begin": 13543,
									"end": 13610,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13537,
									"end": 13541,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 13530,
									"end": 13611,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13399,
									"end": 13621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12734,
									"end": 13621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "282"
								},
								{
									"begin": 12734,
									"end": 13621,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "tag",
									"source": 10,
									"value": "283"
								},
								{
									"begin": 12764,
									"end": 13382,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12816,
									"end": 12820,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 12812,
									"end": 12821,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 12804,
									"end": 12810,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12800,
									"end": 12822,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 12887,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "286"
								},
								{
									"begin": 12882,
									"end": 12886,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 12887,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 12850,
									"end": 12887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 12887,
									"name": "tag",
									"source": 10,
									"value": "286"
								},
								{
									"begin": 12850,
									"end": 12887,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12909,
									"end": 12910,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "tag",
									"source": 10,
									"value": "287"
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12937,
									"end": 12944,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12934,
									"end": 12935,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12931,
									"end": 12945,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "289"
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13016,
									"end": 13025,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13011,
									"end": 13014,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13007,
									"end": 13026,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13001,
									"end": 13027,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 12993,
									"end": 12999,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12986,
									"end": 13028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13067,
									"end": 13068,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 13059,
									"end": 13065,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13055,
									"end": 13069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13045,
									"end": 13069,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13045,
									"end": 13069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13114,
									"end": 13116,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 13103,
									"end": 13112,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 13099,
									"end": 13117,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13086,
									"end": 13117,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 13086,
									"end": 13117,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12960,
									"end": 12964,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 12957,
									"end": 12958,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12953,
									"end": 12965,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 12948,
									"end": 12965,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12948,
									"end": 12965,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "287"
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "tag",
									"source": 10,
									"value": "289"
								},
								{
									"begin": 12923,
									"end": 13131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13159,
									"end": 13165,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 13150,
									"end": 13157,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13147,
									"end": 13166,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 13144,
									"end": 13323,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13144,
									"end": 13323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "290"
								},
								{
									"begin": 13144,
									"end": 13323,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13217,
									"end": 13226,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13212,
									"end": 13215,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13208,
									"end": 13227,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13202,
									"end": 13228,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "291"
								},
								{
									"begin": 13302,
									"end": 13306,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 13294,
									"end": 13300,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13290,
									"end": 13307,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 13279,
									"end": 13288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 13260,
									"end": 13308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13308,
									"name": "tag",
									"source": 10,
									"value": "291"
								},
								{
									"begin": 13260,
									"end": 13308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13252,
									"end": 13258,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13245,
									"end": 13309,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13167,
									"end": 13323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13144,
									"end": 13323,
									"name": "tag",
									"source": 10,
									"value": "290"
								},
								{
									"begin": 13144,
									"end": 13323,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13369,
									"end": 13370,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 13365,
									"end": 13366,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 13357,
									"end": 13363,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 13353,
									"end": 13367,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 13349,
									"end": 13371,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13343,
									"end": 13347,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 13336,
									"end": 13372,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 12771,
									"end": 13382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12771,
									"end": 13382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12771,
									"end": 13382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12734,
									"end": 13621,
									"name": "tag",
									"source": 10,
									"value": "282"
								},
								{
									"begin": 12734,
									"end": 13621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12734,
									"end": 13621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12324,
									"end": 13627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12324,
									"end": 13627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12324,
									"end": 13627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12232,
									"end": 13627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12232,
									"end": 13627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12232,
									"end": 13627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13633,
									"end": 13718,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 13633,
									"end": 13718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13678,
									"end": 13685,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13707,
									"end": 13712,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13696,
									"end": 13712,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13696,
									"end": 13712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13633,
									"end": 13718,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13633,
									"end": 13718,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13633,
									"end": 13718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13633,
									"end": 13718,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13724,
									"end": 13882,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 13724,
									"end": 13882,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13782,
									"end": 13791,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13815,
									"end": 13876,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "294"
								},
								{
									"begin": 13833,
									"end": 13875,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "295"
								},
								{
									"begin": 13842,
									"end": 13874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "296"
								},
								{
									"begin": 13868,
									"end": 13873,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13842,
									"end": 13874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 13842,
									"end": 13874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13842,
									"end": 13874,
									"name": "tag",
									"source": 10,
									"value": "296"
								},
								{
									"begin": 13842,
									"end": 13874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13833,
									"end": 13875,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 13833,
									"end": 13875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13833,
									"end": 13875,
									"name": "tag",
									"source": 10,
									"value": "295"
								},
								{
									"begin": 13833,
									"end": 13875,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13815,
									"end": 13876,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 13815,
									"end": 13876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13815,
									"end": 13876,
									"name": "tag",
									"source": 10,
									"value": "294"
								},
								{
									"begin": 13815,
									"end": 13876,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13802,
									"end": 13876,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13802,
									"end": 13876,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13724,
									"end": 13882,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13724,
									"end": 13882,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13724,
									"end": 13882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13724,
									"end": 13882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13888,
									"end": 14035,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 13888,
									"end": 14035,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13983,
									"end": 14028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "298"
								},
								{
									"begin": 14022,
									"end": 14027,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13983,
									"end": 14028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 13983,
									"end": 14028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13983,
									"end": 14028,
									"name": "tag",
									"source": 10,
									"value": "298"
								},
								{
									"begin": 13983,
									"end": 14028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13978,
									"end": 13981,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13971,
									"end": 14029,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 13888,
									"end": 14035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13888,
									"end": 14035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13888,
									"end": 14035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14142,
									"end": 14146,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14180,
									"end": 14182,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14169,
									"end": 14178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14165,
									"end": 14183,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14157,
									"end": 14183,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14157,
									"end": 14183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14193,
									"end": 14272,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "300"
								},
								{
									"begin": 14269,
									"end": 14270,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14258,
									"end": 14267,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14254,
									"end": 14271,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14245,
									"end": 14251,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14193,
									"end": 14272,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 14193,
									"end": 14272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14193,
									"end": 14272,
									"name": "tag",
									"source": 10,
									"value": "300"
								},
								{
									"begin": 14193,
									"end": 14272,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14041,
									"end": 14279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14285,
									"end": 14403,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 14285,
									"end": 14403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14372,
									"end": 14396,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "302"
								},
								{
									"begin": 14390,
									"end": 14395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 14372,
									"end": 14396,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 14372,
									"end": 14396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14372,
									"end": 14396,
									"name": "tag",
									"source": 10,
									"value": "302"
								},
								{
									"begin": 14372,
									"end": 14396,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14367,
									"end": 14370,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14360,
									"end": 14397,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14285,
									"end": 14403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14285,
									"end": 14403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14285,
									"end": 14403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14530,
									"end": 14534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14568,
									"end": 14570,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 14557,
									"end": 14566,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14553,
									"end": 14571,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14545,
									"end": 14571,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14545,
									"end": 14571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14581,
									"end": 14652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "304"
								},
								{
									"begin": 14649,
									"end": 14650,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14638,
									"end": 14647,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14634,
									"end": 14651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14625,
									"end": 14631,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 14581,
									"end": 14652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 14581,
									"end": 14652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14581,
									"end": 14652,
									"name": "tag",
									"source": 10,
									"value": "304"
								},
								{
									"begin": 14581,
									"end": 14652,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14662,
									"end": 14734,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "305"
								},
								{
									"begin": 14730,
									"end": 14732,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14719,
									"end": 14728,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14715,
									"end": 14733,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14706,
									"end": 14712,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14662,
									"end": 14734,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 14662,
									"end": 14734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14662,
									"end": 14734,
									"name": "tag",
									"source": 10,
									"value": "305"
								},
								{
									"begin": 14662,
									"end": 14734,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14409,
									"end": 14741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14787,
									"end": 14790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14806,
									"end": 14826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "307"
								},
								{
									"begin": 14824,
									"end": 14825,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14806,
									"end": 14826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 14806,
									"end": 14826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14806,
									"end": 14826,
									"name": "tag",
									"source": 10,
									"value": "307"
								},
								{
									"begin": 14806,
									"end": 14826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14801,
									"end": 14826,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14801,
									"end": 14826,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14840,
									"end": 14860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "308"
								},
								{
									"begin": 14858,
									"end": 14859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14840,
									"end": 14860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 14840,
									"end": 14860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14840,
									"end": 14860,
									"name": "tag",
									"source": 10,
									"value": "308"
								},
								{
									"begin": 14840,
									"end": 14860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14835,
									"end": 14860,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14835,
									"end": 14860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14883,
									"end": 14884,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14880,
									"end": 14881,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14876,
									"end": 14885,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14869,
									"end": 14885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14869,
									"end": 14885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14904,
									"end": 14907,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 14901,
									"end": 14902,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14898,
									"end": 14908,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 14895,
									"end": 14931,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 14895,
									"end": 14931,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "309"
								},
								{
									"begin": 14895,
									"end": 14931,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 14911,
									"end": 14929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "310"
								},
								{
									"begin": 14911,
									"end": 14929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 14911,
									"end": 14929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14911,
									"end": 14929,
									"name": "tag",
									"source": 10,
									"value": "310"
								},
								{
									"begin": 14911,
									"end": 14929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14895,
									"end": 14931,
									"name": "tag",
									"source": 10,
									"value": "309"
								},
								{
									"begin": 14895,
									"end": 14931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14747,
									"end": 14938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 15093,
									"end": 15097,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 15131,
									"end": 15133,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 15120,
									"end": 15129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 15116,
									"end": 15134,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15108,
									"end": 15134,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 15108,
									"end": 15134,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 15144,
									"end": 15215,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "312"
								},
								{
									"begin": 15212,
									"end": 15213,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 15201,
									"end": 15210,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 15197,
									"end": 15214,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15188,
									"end": 15194,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 15144,
									"end": 15215,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 15144,
									"end": 15215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 15144,
									"end": 15215,
									"name": "tag",
									"source": 10,
									"value": "312"
								},
								{
									"begin": 15144,
									"end": 15215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 15225,
									"end": 15297,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "313"
								},
								{
									"begin": 15293,
									"end": 15295,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 15282,
									"end": 15291,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 15278,
									"end": 15296,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15269,
									"end": 15275,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 15225,
									"end": 15297,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 15225,
									"end": 15297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 15225,
									"end": 15297,
									"name": "tag",
									"source": 10,
									"value": "313"
								},
								{
									"begin": 15225,
									"end": 15297,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 15307,
									"end": 15379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "314"
								},
								{
									"begin": 15375,
									"end": 15377,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 15364,
									"end": 15373,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 15360,
									"end": 15378,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15351,
									"end": 15357,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 15307,
									"end": 15379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 15307,
									"end": 15379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 15307,
									"end": 15379,
									"name": "tag",
									"source": 10,
									"value": "314"
								},
								{
									"begin": 15307,
									"end": 15379,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14944,
									"end": 15386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 15485,
									"end": 15489,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 15523,
									"end": 15525,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 15512,
									"end": 15521,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 15508,
									"end": 15526,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15500,
									"end": 15526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 15500,
									"end": 15526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 15536,
									"end": 15607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "316"
								},
								{
									"begin": 15604,
									"end": 15605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 15593,
									"end": 15602,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 15589,
									"end": 15606,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 15580,
									"end": 15586,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 15536,
									"end": 15607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 15536,
									"end": 15607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 15536,
									"end": 15607,
									"name": "tag",
									"source": 10,
									"value": "316"
								},
								{
									"begin": 15536,
									"end": 15607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 15392,
									"end": 15614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "886"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1474,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207653d840f3fadb299407e8548914e0fb527fbc2ac577b74d87af02d095f56d1a64736f6c634300081a0033",
									".code": [
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "F0141D84"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "355274EA"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 1474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 738,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 738,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 738,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1119,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 834,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 834,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1050,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 937,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1387,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1387,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 738,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 738,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 806,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 806,
											"end": 818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 738,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "886"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1119,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1166,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1166,
											"end": 1176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1166,
											"end": 1176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 834,
											"end": 929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 904,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 910,
											"end": 912,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 914,
											"end": 920,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 904,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 904,
											"end": 921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 904,
											"end": 921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 904,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 834,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1050,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1095,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1095,
											"end": 1103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1095,
											"end": 1103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1018,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1033,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1012,
											"end": 1034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1012,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1355,
											"end": 1359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1341,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1153,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1252,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1288,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1364,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4969,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5114,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5277,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5302,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5458,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5665,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5670,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 5673,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5793,
											"end": 5794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 5863,
											"end": 5870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5852,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5818,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5922,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5946,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 6016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6195,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6196,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6290,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6291,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6338,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6478,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6479,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 6494,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6723,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6710,
											"end": 6719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 6724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 6724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6787,
											"end": 6804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6734,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6865,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6815,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 6963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6897,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7103,
											"end": 7107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7130,
											"end": 7139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7207,
											"end": 7224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7198,
											"end": 7204,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 7154,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7225,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7154,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7303,
											"end": 7305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 7235,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7307,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7235,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7320,
											"end": 7500,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7320,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7445,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7446,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7465,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7455,
											"end": 7470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7494,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7565,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7585,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 7565,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7599,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7619,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 7599,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7619,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7642,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7635,
											"end": 7644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7628,
											"end": 7644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7628,
											"end": 7644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7657,
											"end": 7667,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7670,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/masverse/MasToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"getDecimals()": "f0141d84",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxcap\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"deci\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/masverse/MasToken.sol\":\"MasToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"contracts/masverse/MasToken.sol\":{\"keccak256\":\"0xec3a9439e0bdd04b1dcd51e2876352772614070c67eeb4c1ebcad56d62153d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dd3122d5740d7333554d8e823939fc0d29094a04874fc32988bf562e43f7b05\",\"dweb:/ipfs/QmeLwmYY9pp9TjQr1KjVZGUMvVx5DsE5wQbonmnxcd9uJY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 307,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1075,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1196,
								"contract": "contracts/masverse/MasToken.sol:MasToken",
								"label": "_deci",
								"offset": 1,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1066
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1067,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1066,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1066,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1066
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1066
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1036
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1037,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1036,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1067,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1066,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1066,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1036,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								1036,
								877,
								1066
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1023
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1029
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Capped": [
							976
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 977,
							"sourceUnit": 800,
							"src": "148:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "156:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "ERC20",
										"nameLocations": [
											"296:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "296:5:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:4"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976,
								799,
								189,
								1036,
								877,
								1066
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 886,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "308:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 885,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:4",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 893,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "432:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "457:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:4"
									},
									"src": "409:61:4"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:4",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 898,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "563:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:4"
									},
									"src": "541:35:4"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "742:102:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 904,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "756:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "752:65:4",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "767:50:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 907,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "788:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 910,
															"nodeType": "RevertStatement",
															"src": "781:25:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "826:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "833:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "826:11:4"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 918,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:4"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:4"
									},
									"scope": 976,
									"src": "716:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "976:28:4",
										"statements": [
											{
												"expression": {
													"id": 924,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "993:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 923,
												"id": 925,
												"nodeType": "Return",
												"src": "986:11:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "967:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:4"
									},
									"scope": 976,
									"src": "923:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1143:287:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1167:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1173:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "1177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 938,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1153:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$976_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1159:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1153:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1153:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1198:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1206:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 947,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1206:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1206:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "1194:230:4",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "1218:206:4",
													"statements": [
														{
															"assignments": [
																953
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 953,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1240:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 972,
																	"src": "1232:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 952,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 956,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 954,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "1252:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:25:4"
														},
														{
															"assignments": [
																958
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 958,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1279:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 972,
																	"src": "1271:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1271:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 961,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 959,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "1288:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1271:30:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1319:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 963,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "1328:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1319:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 971,
															"nodeType": "IfStatement",
															"src": "1315:99:4",
															"trueBody": {
																"id": 970,
																"nodeType": "Block",
																"src": "1339:75:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 966,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 958,
																					"src": "1381:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 967,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "1389:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 965,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "1364:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1364:35:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 969,
																		"nodeType": "RevertStatement",
																		"src": "1357:42:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "1010:44:4",
										"text": " @dev See {ERC20-_update}."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1068:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1134:8:4"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1084:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1076:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1098:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1090:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1110:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1102:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:41:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:4"
									},
									"scope": 976,
									"src": "1059:371:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "263:1169:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								893,
								898
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "122:1311:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							1010
						],
						"Pausable": [
							1183
						]
					},
					"id": 1011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1011,
							"sourceUnit": 800,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 979,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1011,
							"sourceUnit": 1184,
							"src": "186:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 981,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1183,
										"src": "194:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 984,
										"name": "ERC20",
										"nameLocations": [
											"964:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "964:5:5"
									},
									"id": 985,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:5"
								},
								{
									"baseName": {
										"id": 986,
										"name": "Pausable",
										"nameLocations": [
											"971:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1183,
										"src": "971:8:5"
									},
									"id": 987,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:5"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 983,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:5",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1010,
							"linearizedBaseContracts": [
								1010,
								1183,
								799,
								189,
								1036,
								877,
								1066
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "1210:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1234:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1240:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1244:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1000,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1010_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1220:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:5"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:5",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1108,
												"src": "1196:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 996,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:5"
									},
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1129:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1143:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:5"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:5"
									},
									"scope": 1010,
									"src": "1112:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1011,
							"src": "929:330:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								1088,
								1091
							],
							"usedEvents": [
								811,
								820,
								1080,
								1085
							]
						}
					],
					"src": "124:1136:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							1036
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1012,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1014,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 878,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1013,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1016,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:6"
									},
									"id": 1017,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1015,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1036,
							"linearizedBaseContracts": [
								1036,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1036,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1036,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1032,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1036,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1037,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1066
						]
					},
					"id": 1067,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1039,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1066,
							"linearizedBaseContracts": [
								1066
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1044,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1046,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1066,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1053,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1052,
												"id": 1055,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1066,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1061,
												"id": 1063,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1066,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1067,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1066
						],
						"Pausable": [
							1183
						]
					},
					"id": 1184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1068,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 1067,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1069,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1066,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1066,
										"src": "645:7:8"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1071,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1183,
							"linearizedBaseContracts": [
								1183,
								1066
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1075,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1074,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1080,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1085,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1088,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1091,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "1221:32:8",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1095,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "1231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:8"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:8",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:8"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:8"
									},
									"scope": 1183,
									"src": "1207:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1464:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1103,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1474:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:8"
											},
											{
												"id": 1106,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:8"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1108,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:8"
									},
									"src": "1439:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1711:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1111,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "1721:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:8"
											},
											{
												"id": 1114,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:8"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1116,
									"name": "whenPaused",
									"nameLocation": "1698:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:8"
									},
									"src": "1689:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "1903:31:8",
										"statements": [
											{
												"expression": {
													"id": 1122,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1075,
													"src": "1920:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1123,
												"nodeType": "Return",
												"src": "1913:14:8"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:8"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1897:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:8"
									},
									"scope": 1183,
									"src": "1850:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2053:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1129,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2067:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "2063:61:8",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "2077:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1131,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "2098:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "2091:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:8"
									},
									"scope": 1183,
									"src": "2002:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "2250:78:8",
										"statements": [
											{
												"condition": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1141,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "2260:62:8",
												"trueBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "2275:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1144,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "2296:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1146,
															"nodeType": "RevertStatement",
															"src": "2289:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:8"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:8"
									},
									"scope": 1183,
									"src": "2202:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "2512:66:8",
										"statements": [
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "2522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1161,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "2558:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1160,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2551:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "EmitStatement",
												"src": "2546:25:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1153,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1108,
												"src": "2498:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:8"
									},
									"scope": 1183,
									"src": "2463:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2758:69:8",
										"statements": [
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "2768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1177,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "2807:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1176,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2798:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "EmitStatement",
												"src": "2793:27:8"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1169,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "2747:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:8"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:8"
									},
									"scope": 1183,
									"src": "2710:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1184,
							"src": "615:2214:8",
							"usedErrors": [
								1088,
								1091
							],
							"usedEvents": [
								1080,
								1085
							]
						}
					],
					"src": "102:2728:8"
				},
				"id": 8
			},
			"contracts/masverse/MasToken.sol": {
				"ast": {
					"absolutePath": "contracts/masverse/MasToken.sol",
					"exportedSymbols": {
						"Context": [
							1066
						],
						"ERC20": [
							799
						],
						"ERC20Capped": [
							976
						],
						"ERC20Pausable": [
							1010
						],
						"MasToken": [
							1322
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1183
						]
					},
					"id": 1323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 148,
							"src": "61:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 1011,
							"src": "115:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 1188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 977,
							"src": "191:72:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1189,
										"name": "Ownable",
										"nameLocations": [
											"288:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "288:7:9"
									},
									"id": 1190,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:9"
								},
								{
									"baseName": {
										"id": 1191,
										"name": "ERC20Pausable",
										"nameLocations": [
											"297:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1010,
										"src": "297:13:9"
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "297:13:9"
								},
								{
									"baseName": {
										"id": 1193,
										"name": "ERC20Capped",
										"nameLocations": [
											"312:11:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "312:11:9"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "312:11:9"
								}
							],
							"canonicalName": "MasToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1322,
							"linearizedBaseContracts": [
								1322,
								976,
								1010,
								1183,
								799,
								189,
								1036,
								877,
								147,
								1066
							],
							"name": "MasToken",
							"nameLocation": "276:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "_deci",
									"nameLocation": "345:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1322,
									"src": "331:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1195,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "331:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "654:76:9",
										"statements": [
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "_deci",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "665:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1226,
														"name": "deci",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "673:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "665:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "665:12:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "694:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "708:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "688:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "688:34:9"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1211,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1202,
													"src": "562:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1212,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1204,
													"src": "568:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1213,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1210,
												"name": "ERC20",
												"nameLocations": [
													"556:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "556:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "556:19:9"
										},
										{
											"arguments": [
												{
													"id": 1215,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1198,
													"src": "593:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1216,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1214,
												"name": "Ownable",
												"nameLocations": [
													"585:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "585:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "585:21:9"
										},
										{
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "maxcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "628:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "637:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 1220,
															"name": "deci",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "643:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "637:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "628:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1223,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1217,
												"name": "ERC20Capped",
												"nameLocations": [
													"616:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "616:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "616:32:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "389:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "381:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "maxcap",
												"nameLocation": "420:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "412:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "451:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "437:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "480:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "466:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "466:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "deci",
												"nameLocation": "503:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "497:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1205,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "497:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "526:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "518:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:176:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:0:9"
									},
									"scope": 1322,
									"src": "359:371:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "795:31:9",
										"statements": [
											{
												"expression": {
													"id": 1241,
													"name": "_deci",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1196,
													"src": "813:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1242,
												"nodeType": "Return",
												"src": "806:12:9"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "747:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "770:8:9"
									},
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:2:9"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "788:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "788:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:7:9"
									},
									"scope": 1322,
									"src": "738:88:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "893:36:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "910:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "914:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "904:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "904:17:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1250,
												"name": "onlyOwner",
												"nameLocations": [
													"883:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "883:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "883:9:9"
										}
									],
									"name": "mint",
									"nameLocation": "843:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "856:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "848:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "868:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "860:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:28:9"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:9"
									},
									"scope": 1322,
									"src": "834:95:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "1001:41:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "1018:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "1027:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1012:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "1012:22:9"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyOwner",
												"nameLocations": [
													"991:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "991:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:9:9"
										}
									],
									"name": "burn",
									"nameLocation": "946:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "959:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "951:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "976:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "968:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:33:9"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:0:9"
									},
									"scope": 1322,
									"src": "937:105:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "1084:27:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1279,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1095:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "1095:8:9"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "onlyOwner",
												"nameLocations": [
													"1074:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1074:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1074:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "1059:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:9"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:9"
									},
									"scope": 1322,
									"src": "1050:61:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "1155:29:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1288,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "1166:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1166:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "1166:10:9"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "onlyOwner",
												"nameLocations": [
													"1145:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1145:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1145:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "1128:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1135:2:9"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:9"
									},
									"scope": 1322,
									"src": "1119:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975,
										1009
									],
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "1330:49:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1307,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1355:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "1361:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "1365:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1304,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1341:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MasToken_$1322_$",
																"typeString": "type(contract super MasToken)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1347:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "1341:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1341:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1341:30:9"
											}
										]
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1201:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1302,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1300,
												"name": "ERC20Pausable",
												"nameLocations": [
													"1302:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "1302:13:9"
											},
											{
												"id": 1301,
												"name": "ERC20Capped",
												"nameLocations": [
													"1317:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "1317:11:9"
											}
										],
										"src": "1293:36:9"
									},
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1227:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1219:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1250:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1242:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1271:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1263:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:75:9"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:0:9"
									},
									"scope": 1322,
									"src": "1192:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "1438:31:9",
										"statements": [
											{
												"expression": {
													"id": 1318,
													"name": "_deci",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1196,
													"src": "1456:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1319,
												"nodeType": "Return",
												"src": "1449:12:9"
											}
										]
									},
									"functionSelector": "f0141d84",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nameLocation": "1396:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:2:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1431:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1315,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1431:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:7:9"
									},
									"scope": 1322,
									"src": "1387:82:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1323,
							"src": "267:1207:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								893,
								898,
								1088,
								1091
							],
							"usedEvents": [
								24,
								811,
								820,
								1080,
								1085
							]
						}
					],
					"src": "33:1441:9"
				},
				"id": 9
			}
		}
	}
}